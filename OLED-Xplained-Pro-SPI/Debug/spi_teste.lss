
spi_teste.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00006fcc  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00406fcc  00406fcc  00016fcc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009d0  20400000  00406fd4  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00000304  204009d0  004079a4  000209d0  2**2
                  ALLOC
  4 .stack        00002004  20400cd4  00407ca8  000209d0  2**0
                  ALLOC
  5 .heap         00000200  20402cd8  00409cac  000209d0  2**0
                  ALLOC
  6 .ARM.attributes 0000002e  00000000  00000000  000209d0  2**0
                  CONTENTS, READONLY
  7 .comment      00000059  00000000  00000000  000209fe  2**0
                  CONTENTS, READONLY
  8 .debug_info   00017c0e  00000000  00000000  00020a57  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 0000361e  00000000  00000000  00038665  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000054b8  00000000  00000000  0003bc83  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00000858  00000000  00000000  0004113b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000008b8  00000000  00000000  00041993  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00009dde  00000000  00000000  0004224b  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   0000e5fd  00000000  00000000  0004c029  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    00090114  00000000  00000000  0005a626  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  00001e74  00000000  00000000  000ea73c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	d8 2c 40 20 69 13 40 00 65 13 40 00 65 13 40 00     .,@ i.@.e.@.e.@.
  400010:	65 13 40 00 65 13 40 00 65 13 40 00 00 00 00 00     e.@.e.@.e.@.....
	...
  40002c:	65 13 40 00 65 13 40 00 00 00 00 00 65 13 40 00     e.@.e.@.....e.@.
  40003c:	65 13 40 00 65 13 40 00 65 13 40 00 65 13 40 00     e.@.e.@.e.@.e.@.
  40004c:	65 13 40 00 65 13 40 00 65 13 40 00 65 13 40 00     e.@.e.@.e.@.e.@.
  40005c:	65 13 40 00 65 13 40 00 00 00 00 00 c9 0e 40 00     e.@.e.@.......@.
  40006c:	dd 0e 40 00 f1 0e 40 00 65 13 40 00 65 13 40 00     ..@...@.e.@.e.@.
  40007c:	65 13 40 00 05 0f 40 00 19 0f 40 00 65 13 40 00     e.@...@...@.e.@.
  40008c:	65 13 40 00 65 13 40 00 65 13 40 00 65 13 40 00     e.@.e.@.e.@.e.@.
  40009c:	65 13 40 00 65 13 40 00 65 13 40 00 65 13 40 00     e.@.e.@.e.@.e.@.
  4000ac:	65 13 40 00 65 13 40 00 65 13 40 00 65 13 40 00     e.@.e.@.e.@.e.@.
  4000bc:	65 13 40 00 65 13 40 00 65 13 40 00 65 13 40 00     e.@.e.@.e.@.e.@.
  4000cc:	65 13 40 00 00 00 00 00 65 13 40 00 00 00 00 00     e.@.....e.@.....
  4000dc:	65 13 40 00 65 13 40 00 65 13 40 00 65 13 40 00     e.@.e.@.e.@.e.@.
  4000ec:	65 13 40 00 65 13 40 00 65 13 40 00 65 13 40 00     e.@.e.@.e.@.e.@.
  4000fc:	65 13 40 00 65 13 40 00 65 13 40 00 65 13 40 00     e.@.e.@.e.@.e.@.
  40010c:	65 13 40 00 65 13 40 00 00 00 00 00 00 00 00 00     e.@.e.@.........
  40011c:	00 00 00 00 65 13 40 00 65 13 40 00 65 13 40 00     ....e.@.e.@.e.@.
  40012c:	65 13 40 00 65 13 40 00 00 00 00 00 65 13 40 00     e.@.e.@.....e.@.
  40013c:	65 13 40 00                                         e.@.

00400140 <__do_global_dtors_aux>:
  400140:	b510      	push	{r4, lr}
  400142:	4c05      	ldr	r4, [pc, #20]	; (400158 <__do_global_dtors_aux+0x18>)
  400144:	7823      	ldrb	r3, [r4, #0]
  400146:	b933      	cbnz	r3, 400156 <__do_global_dtors_aux+0x16>
  400148:	4b04      	ldr	r3, [pc, #16]	; (40015c <__do_global_dtors_aux+0x1c>)
  40014a:	b113      	cbz	r3, 400152 <__do_global_dtors_aux+0x12>
  40014c:	4804      	ldr	r0, [pc, #16]	; (400160 <__do_global_dtors_aux+0x20>)
  40014e:	f3af 8000 	nop.w
  400152:	2301      	movs	r3, #1
  400154:	7023      	strb	r3, [r4, #0]
  400156:	bd10      	pop	{r4, pc}
  400158:	204009d0 	.word	0x204009d0
  40015c:	00000000 	.word	0x00000000
  400160:	00406fd4 	.word	0x00406fd4

00400164 <frame_dummy>:
  400164:	4b0c      	ldr	r3, [pc, #48]	; (400198 <frame_dummy+0x34>)
  400166:	b143      	cbz	r3, 40017a <frame_dummy+0x16>
  400168:	480c      	ldr	r0, [pc, #48]	; (40019c <frame_dummy+0x38>)
  40016a:	490d      	ldr	r1, [pc, #52]	; (4001a0 <frame_dummy+0x3c>)
  40016c:	b510      	push	{r4, lr}
  40016e:	f3af 8000 	nop.w
  400172:	480c      	ldr	r0, [pc, #48]	; (4001a4 <frame_dummy+0x40>)
  400174:	6803      	ldr	r3, [r0, #0]
  400176:	b923      	cbnz	r3, 400182 <frame_dummy+0x1e>
  400178:	bd10      	pop	{r4, pc}
  40017a:	480a      	ldr	r0, [pc, #40]	; (4001a4 <frame_dummy+0x40>)
  40017c:	6803      	ldr	r3, [r0, #0]
  40017e:	b933      	cbnz	r3, 40018e <frame_dummy+0x2a>
  400180:	4770      	bx	lr
  400182:	4b09      	ldr	r3, [pc, #36]	; (4001a8 <frame_dummy+0x44>)
  400184:	2b00      	cmp	r3, #0
  400186:	d0f7      	beq.n	400178 <frame_dummy+0x14>
  400188:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  40018c:	4718      	bx	r3
  40018e:	4b06      	ldr	r3, [pc, #24]	; (4001a8 <frame_dummy+0x44>)
  400190:	2b00      	cmp	r3, #0
  400192:	d0f5      	beq.n	400180 <frame_dummy+0x1c>
  400194:	4718      	bx	r3
  400196:	bf00      	nop
  400198:	00000000 	.word	0x00000000
  40019c:	00406fd4 	.word	0x00406fd4
  4001a0:	204009d4 	.word	0x204009d4
  4001a4:	00406fd4 	.word	0x00406fd4
  4001a8:	00000000 	.word	0x00000000

004001ac <spi_enable_clock>:
 * \brief Enable SPI clock.
 *
 * \param p_spi Pointer to an SPI instance.
 */
void spi_enable_clock(Spi *p_spi)
{
  4001ac:	b508      	push	{r3, lr}
#if (SAM4S || SAM3S || SAM3N || SAM3U || SAM4E || SAM4N || SAMG51|| SAMG53|| SAMG54)
	UNUSED(p_spi);
	sysclk_enable_peripheral_clock(ID_SPI);
#elif (SAM3XA || SAM4C || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	if (p_spi == SPI0) {
  4001ae:	4b07      	ldr	r3, [pc, #28]	; (4001cc <spi_enable_clock+0x20>)
  4001b0:	4298      	cmp	r0, r3
  4001b2:	d003      	beq.n	4001bc <spi_enable_clock+0x10>
		sysclk_enable_peripheral_clock(ID_SPI0);
	}
	#ifdef SPI1
	else if (p_spi == SPI1) {
  4001b4:	4b06      	ldr	r3, [pc, #24]	; (4001d0 <spi_enable_clock+0x24>)
  4001b6:	4298      	cmp	r0, r3
  4001b8:	d004      	beq.n	4001c4 <spi_enable_clock+0x18>
  4001ba:	bd08      	pop	{r3, pc}
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  4001bc:	2015      	movs	r0, #21
  4001be:	4b05      	ldr	r3, [pc, #20]	; (4001d4 <spi_enable_clock+0x28>)
  4001c0:	4798      	blx	r3
  4001c2:	bd08      	pop	{r3, pc}
  4001c4:	202a      	movs	r0, #42	; 0x2a
  4001c6:	4b03      	ldr	r3, [pc, #12]	; (4001d4 <spi_enable_clock+0x28>)
  4001c8:	4798      	blx	r3
	}
	#endif
#elif SAM4L
	sysclk_enable_peripheral_clock(p_spi);
#endif
}
  4001ca:	e7f6      	b.n	4001ba <spi_enable_clock+0xe>
  4001cc:	40008000 	.word	0x40008000
  4001d0:	40058000 	.word	0x40058000
  4001d4:	0040104d 	.word	0x0040104d

004001d8 <spi_set_peripheral_chip_select_value>:
 *                 \ref spi_enable_peripheral_select_decode,
 *                 \ref spi_disable_peripheral_select_decode.
 */
void spi_set_peripheral_chip_select_value(Spi *p_spi, uint32_t ul_value)
{
	p_spi->SPI_MR &= (~SPI_MR_PCS_Msk);
  4001d8:	6843      	ldr	r3, [r0, #4]
  4001da:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
  4001de:	6043      	str	r3, [r0, #4]
	p_spi->SPI_MR |= SPI_MR_PCS(ul_value);
  4001e0:	6843      	ldr	r3, [r0, #4]
  4001e2:	0409      	lsls	r1, r1, #16
  4001e4:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
  4001e8:	4319      	orrs	r1, r3
  4001ea:	6041      	str	r1, [r0, #4]
  4001ec:	4770      	bx	lr

004001ee <spi_write>:
 * \retval SPI_OK on Success.
 * \retval SPI_ERROR_TIMEOUT on Time-out.
 */
spi_status_t spi_write(Spi *p_spi, uint16_t us_data,
		uint8_t uc_pcs, uint8_t uc_last)
{
  4001ee:	b430      	push	{r4, r5}
	uint32_t timeout = SPI_TIMEOUT;
	uint32_t value;

	while (!(p_spi->SPI_SR & SPI_SR_TDRE)) {
  4001f0:	f643 2499 	movw	r4, #15001	; 0x3a99
  4001f4:	6905      	ldr	r5, [r0, #16]
  4001f6:	f015 0f02 	tst.w	r5, #2
  4001fa:	d103      	bne.n	400204 <spi_write+0x16>
		if (!timeout--) {
  4001fc:	3c01      	subs	r4, #1
  4001fe:	d1f9      	bne.n	4001f4 <spi_write+0x6>
			return SPI_ERROR_TIMEOUT;
  400200:	2001      	movs	r0, #1
  400202:	e00c      	b.n	40021e <spi_write+0x30>
 *
 * \return 1 for Variable mode, 0 for fixed mode.
 */
static inline uint32_t spi_get_peripheral_select_mode(Spi *p_spi)
{
	if (p_spi->SPI_MR & SPI_MR_PS) {
  400204:	6844      	ldr	r4, [r0, #4]
		}
	}

	if (spi_get_peripheral_select_mode(p_spi)) {
  400206:	f014 0f02 	tst.w	r4, #2
  40020a:	d006      	beq.n	40021a <spi_write+0x2c>
		value = SPI_TDR_TD(us_data) | SPI_TDR_PCS(uc_pcs);
  40020c:	0412      	lsls	r2, r2, #16
  40020e:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
  400212:	4311      	orrs	r1, r2
		if (uc_last) {
  400214:	b10b      	cbz	r3, 40021a <spi_write+0x2c>
			value |= SPI_TDR_LASTXFER;
  400216:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
		}
	} else {
		value = SPI_TDR_TD(us_data);
	}

	p_spi->SPI_TDR = value;
  40021a:	60c1      	str	r1, [r0, #12]

	return SPI_OK;
  40021c:	2000      	movs	r0, #0
}
  40021e:	bc30      	pop	{r4, r5}
  400220:	4770      	bx	lr

00400222 <spi_set_clock_polarity>:
 * \param ul_polarity Default clock state is logical one(high)/zero(low).
 */
void spi_set_clock_polarity(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_polarity)
{
	if (ul_polarity) {
  400222:	b932      	cbnz	r2, 400232 <spi_set_clock_polarity+0x10>
  400224:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CPOL);
  400228:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40022a:	f023 0301 	bic.w	r3, r3, #1
  40022e:	6303      	str	r3, [r0, #48]	; 0x30
  400230:	4770      	bx	lr
  400232:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
  400236:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400238:	f043 0301 	orr.w	r3, r3, #1
  40023c:	6303      	str	r3, [r0, #48]	; 0x30
  40023e:	4770      	bx	lr

00400240 <spi_set_clock_phase>:
 *  \param ul_pcs_ch Peripheral Chip Select channel (0~3).
 *  \param ul_phase Data capture on the rising/falling edge of clock.
 */
void spi_set_clock_phase(Spi *p_spi, uint32_t ul_pcs_ch, uint32_t ul_phase)
{
	if (ul_phase) {
  400240:	b932      	cbnz	r2, 400250 <spi_set_clock_phase+0x10>
  400242:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_NCPHA);
  400246:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400248:	f023 0302 	bic.w	r3, r3, #2
  40024c:	6303      	str	r3, [r0, #48]	; 0x30
  40024e:	4770      	bx	lr
  400250:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
  400254:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400256:	f043 0302 	orr.w	r3, r3, #2
  40025a:	6303      	str	r3, [r0, #48]	; 0x30
  40025c:	4770      	bx	lr

0040025e <spi_configure_cs_behavior>:
 * \param ul_cs_behavior Behavior of the Chip Select after transfer.
 */
void spi_configure_cs_behavior(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_cs_behavior)
{
	if (ul_cs_behavior == SPI_CS_RISE_FORCED) {
  40025e:	2a04      	cmp	r2, #4
  400260:	d003      	beq.n	40026a <spi_configure_cs_behavior+0xc>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
	} else if (ul_cs_behavior == SPI_CS_RISE_NO_TX) {
  400262:	b16a      	cbz	r2, 400280 <spi_configure_cs_behavior+0x22>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
	} else if (ul_cs_behavior == SPI_CS_KEEP_LOW) {
  400264:	2a08      	cmp	r2, #8
  400266:	d016      	beq.n	400296 <spi_configure_cs_behavior+0x38>
  400268:	4770      	bx	lr
  40026a:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  40026e:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400270:	f023 0308 	bic.w	r3, r3, #8
  400274:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
  400276:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400278:	f043 0304 	orr.w	r3, r3, #4
  40027c:	6303      	str	r3, [r0, #48]	; 0x30
  40027e:	4770      	bx	lr
  400280:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  400284:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400286:	f023 0308 	bic.w	r3, r3, #8
  40028a:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
  40028c:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40028e:	f023 0304 	bic.w	r3, r3, #4
  400292:	6303      	str	r3, [r0, #48]	; 0x30
  400294:	4770      	bx	lr
  400296:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSAAT;
  40029a:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40029c:	f043 0308 	orr.w	r3, r3, #8
  4002a0:	6303      	str	r3, [r0, #48]	; 0x30
	}
}
  4002a2:	e7e1      	b.n	400268 <spi_configure_cs_behavior+0xa>

004002a4 <spi_set_bits_per_transfer>:
 * \param ul_bits Number of bits (8~16), use the pattern defined
 *        in the device header file.
 */
void spi_set_bits_per_transfer(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_bits)
{
  4002a4:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_BITS_Msk);
  4002a8:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  4002aa:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  4002ae:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= ul_bits;
  4002b0:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  4002b2:	431a      	orrs	r2, r3
  4002b4:	630a      	str	r2, [r1, #48]	; 0x30
  4002b6:	4770      	bx	lr

004002b8 <spi_calc_baudrate_div>:
 *   \retval > 0  Success.
 *   \retval < 0  Error.
 */
int16_t spi_calc_baudrate_div(const uint32_t baudrate, uint32_t mck)
{
	int baud_div = div_ceil(mck, baudrate);
  4002b8:	1e43      	subs	r3, r0, #1
  4002ba:	4419      	add	r1, r3
  4002bc:	fbb1 f0f0 	udiv	r0, r1, r0

	/* The value of baud_div is from 1 to 255 in the SCBR field. */
	if (baud_div <= 0 || baud_div > 255) {
  4002c0:	1e43      	subs	r3, r0, #1
  4002c2:	2bfe      	cmp	r3, #254	; 0xfe
		return -1;
	}

	return baud_div;
  4002c4:	bf94      	ite	ls
  4002c6:	b200      	sxthls	r0, r0
		return -1;
  4002c8:	f04f 30ff 	movhi.w	r0, #4294967295
}
  4002cc:	4770      	bx	lr

004002ce <spi_set_baudrate_div>:
 */
int16_t spi_set_baudrate_div(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_baudrate_divider)
{
    /* Programming the SCBR field to 0 is forbidden */
    if (!uc_baudrate_divider)
  4002ce:	b17a      	cbz	r2, 4002f0 <spi_set_baudrate_div+0x22>
{
  4002d0:	b410      	push	{r4}
  4002d2:	4614      	mov	r4, r2
  4002d4:	eb00 0181 	add.w	r1, r0, r1, lsl #2
        return -1;

	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_SCBR_Msk);
  4002d8:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  4002da:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
  4002de:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_SCBR(uc_baudrate_divider);
  4002e0:	6b0a      	ldr	r2, [r1, #48]	; 0x30
  4002e2:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
  4002e6:	630a      	str	r2, [r1, #48]	; 0x30
    return 0;
  4002e8:	2000      	movs	r0, #0
}
  4002ea:	f85d 4b04 	ldr.w	r4, [sp], #4
  4002ee:	4770      	bx	lr
        return -1;
  4002f0:	f04f 30ff 	mov.w	r0, #4294967295
  4002f4:	4770      	bx	lr
	...

004002f8 <gfx_mono_set_framebuffer>:
	gfx_mono_set_framebuffer(framebuffer);
\endcode
 */
void gfx_mono_set_framebuffer(uint8_t *framebuffer)
{
	fbpointer = framebuffer;
  4002f8:	4b01      	ldr	r3, [pc, #4]	; (400300 <gfx_mono_set_framebuffer+0x8>)
  4002fa:	6018      	str	r0, [r3, #0]
  4002fc:	4770      	bx	lr
  4002fe:	bf00      	nop
  400300:	204009ec 	.word	0x204009ec

00400304 <gfx_mono_framebuffer_put_byte>:
\endcode
 */
void gfx_mono_framebuffer_put_byte(gfx_coord_t page, gfx_coord_t column,
		uint8_t data)
{
	*(fbpointer + (page * GFX_MONO_LCD_WIDTH) + column) = data;
  400304:	4b02      	ldr	r3, [pc, #8]	; (400310 <gfx_mono_framebuffer_put_byte+0xc>)
  400306:	681b      	ldr	r3, [r3, #0]
  400308:	eb03 10c0 	add.w	r0, r3, r0, lsl #7
  40030c:	5442      	strb	r2, [r0, r1]
  40030e:	4770      	bx	lr
  400310:	204009ec 	.word	0x204009ec

00400314 <gfx_mono_framebuffer_get_byte>:
	data = gfx_mono_framebuffer_get_byte(0, 0);
\endcode
 */
uint8_t gfx_mono_framebuffer_get_byte(gfx_coord_t page, gfx_coord_t column)
{
	return *(fbpointer + (page * GFX_MONO_LCD_WIDTH) + column);
  400314:	4b02      	ldr	r3, [pc, #8]	; (400320 <gfx_mono_framebuffer_get_byte+0xc>)
  400316:	681b      	ldr	r3, [r3, #0]
  400318:	eb03 10c0 	add.w	r0, r3, r0, lsl #7
}
  40031c:	5c40      	ldrb	r0, [r0, r1]
  40031e:	4770      	bx	lr
  400320:	204009ec 	.word	0x204009ec

00400324 <gfx_mono_generic_draw_horizontal_line>:
 * \param[in]  length     Length of the line in pixels.
 * \param[in]  color      Pixel operation of the line.
 */
void gfx_mono_generic_draw_horizontal_line(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t length, enum gfx_mono_color color)
{
  400324:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	uint8_t page;
	uint8_t pixelmask;
	uint8_t temp;

	/* Clip line length if too long */
	if (x + length > GFX_MONO_LCD_WIDTH) {
  400328:	1884      	adds	r4, r0, r2
  40032a:	2c80      	cmp	r4, #128	; 0x80
  40032c:	dd02      	ble.n	400334 <gfx_mono_generic_draw_horizontal_line+0x10>
		length = GFX_MONO_LCD_WIDTH - x;
  40032e:	f1c0 0480 	rsb	r4, r0, #128	; 0x80
  400332:	b2e2      	uxtb	r2, r4
	}

	page = y / 8;
	pixelmask = (1 << (y - (page * 8)));

	if (length == 0) {
  400334:	b322      	cbz	r2, 400380 <gfx_mono_generic_draw_horizontal_line+0x5c>
	page = y / 8;
  400336:	08cd      	lsrs	r5, r1, #3
	pixelmask = (1 << (y - (page * 8)));
  400338:	eba1 01c5 	sub.w	r1, r1, r5, lsl #3
  40033c:	2601      	movs	r6, #1
  40033e:	fa06 f101 	lsl.w	r1, r6, r1
  400342:	b2ce      	uxtb	r6, r1
		/* Nothing to do. Move along. */
		return;
	}

	switch (color) {
  400344:	2b01      	cmp	r3, #1
  400346:	d01d      	beq.n	400384 <gfx_mono_generic_draw_horizontal_line+0x60>
  400348:	2b00      	cmp	r3, #0
  40034a:	d035      	beq.n	4003b8 <gfx_mono_generic_draw_horizontal_line+0x94>
  40034c:	2b02      	cmp	r3, #2
  40034e:	d117      	bne.n	400380 <gfx_mono_generic_draw_horizontal_line+0x5c>
  400350:	3801      	subs	r0, #1
  400352:	b2c7      	uxtb	r7, r0
  400354:	19d4      	adds	r4, r2, r7
  400356:	b2e4      	uxtb	r4, r4
		}
		break;

	case GFX_PIXEL_XOR:
		while (length-- > 0) {
			temp = gfx_mono_get_byte(page, x + length);
  400358:	f8df a090 	ldr.w	sl, [pc, #144]	; 4003ec <gfx_mono_generic_draw_horizontal_line+0xc8>
			temp ^= pixelmask;
			gfx_mono_put_byte(page, x + length, temp);
  40035c:	f04f 0900 	mov.w	r9, #0
  400360:	f8df 808c 	ldr.w	r8, [pc, #140]	; 4003f0 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  400364:	4621      	mov	r1, r4
  400366:	4628      	mov	r0, r5
  400368:	47d0      	blx	sl
			temp ^= pixelmask;
  40036a:	ea86 0200 	eor.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  40036e:	464b      	mov	r3, r9
  400370:	b2d2      	uxtb	r2, r2
  400372:	4621      	mov	r1, r4
  400374:	4628      	mov	r0, r5
  400376:	47c0      	blx	r8
  400378:	3c01      	subs	r4, #1
  40037a:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  40037c:	42bc      	cmp	r4, r7
  40037e:	d1f1      	bne.n	400364 <gfx_mono_generic_draw_horizontal_line+0x40>
  400380:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  400384:	3801      	subs	r0, #1
  400386:	b2c7      	uxtb	r7, r0
  400388:	19d4      	adds	r4, r2, r7
  40038a:	b2e4      	uxtb	r4, r4
			temp = gfx_mono_get_byte(page, x + length);
  40038c:	f8df a05c 	ldr.w	sl, [pc, #92]	; 4003ec <gfx_mono_generic_draw_horizontal_line+0xc8>
			gfx_mono_put_byte(page, x + length, temp);
  400390:	f04f 0900 	mov.w	r9, #0
  400394:	f8df 8058 	ldr.w	r8, [pc, #88]	; 4003f0 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  400398:	4621      	mov	r1, r4
  40039a:	4628      	mov	r0, r5
  40039c:	47d0      	blx	sl
			temp |= pixelmask;
  40039e:	ea46 0200 	orr.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  4003a2:	464b      	mov	r3, r9
  4003a4:	b2d2      	uxtb	r2, r2
  4003a6:	4621      	mov	r1, r4
  4003a8:	4628      	mov	r0, r5
  4003aa:	47c0      	blx	r8
  4003ac:	3c01      	subs	r4, #1
  4003ae:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  4003b0:	42bc      	cmp	r4, r7
  4003b2:	d1f1      	bne.n	400398 <gfx_mono_generic_draw_horizontal_line+0x74>
  4003b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4003b8:	3801      	subs	r0, #1
  4003ba:	b2c7      	uxtb	r7, r0
  4003bc:	19d4      	adds	r4, r2, r7
  4003be:	b2e4      	uxtb	r4, r4
			temp = gfx_mono_get_byte(page, x + length);
  4003c0:	f8df 8028 	ldr.w	r8, [pc, #40]	; 4003ec <gfx_mono_generic_draw_horizontal_line+0xc8>
			temp &= ~pixelmask;
  4003c4:	43ce      	mvns	r6, r1
			gfx_mono_put_byte(page, x + length, temp);
  4003c6:	f8df 9028 	ldr.w	r9, [pc, #40]	; 4003f0 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  4003ca:	4621      	mov	r1, r4
  4003cc:	4628      	mov	r0, r5
  4003ce:	47c0      	blx	r8
			temp &= ~pixelmask;
  4003d0:	ea06 0200 	and.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  4003d4:	2300      	movs	r3, #0
  4003d6:	b2d2      	uxtb	r2, r2
  4003d8:	4621      	mov	r1, r4
  4003da:	4628      	mov	r0, r5
  4003dc:	47c8      	blx	r9
  4003de:	3c01      	subs	r4, #1
  4003e0:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  4003e2:	42bc      	cmp	r4, r7
  4003e4:	d1f1      	bne.n	4003ca <gfx_mono_generic_draw_horizontal_line+0xa6>
  4003e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4003ea:	bf00      	nop
  4003ec:	004007e1 	.word	0x004007e1
  4003f0:	004006dd 	.word	0x004006dd

004003f4 <gfx_mono_generic_draw_vertical_line>:
 * \param[in]  color      Pixel operation of the line.
 */
void gfx_mono_generic_draw_vertical_line(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t length, enum gfx_mono_color color)
{
	if (length == 0) {
  4003f4:	2a00      	cmp	r2, #0
  4003f6:	d048      	beq.n	40048a <gfx_mono_generic_draw_vertical_line+0x96>
{
  4003f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4003fc:	4614      	mov	r4, r2
  4003fe:	461f      	mov	r7, r3
  400400:	4606      	mov	r6, r0
		return;
	}

	gfx_coord_t y2 = y + length - 1;
  400402:	1e4a      	subs	r2, r1, #1
  400404:	4422      	add	r2, r4
  400406:	b2d2      	uxtb	r2, r2

	if (y == y2) {
  400408:	4291      	cmp	r1, r2
  40040a:	d031      	beq.n	400470 <gfx_mono_generic_draw_vertical_line+0x7c>
  40040c:	2a1f      	cmp	r2, #31
  40040e:	bf28      	it	cs
  400410:	221f      	movcs	r2, #31
  400412:	4615      	mov	r5, r2

	if (y2 >= GFX_MONO_LCD_HEIGHT - 1) {
		y2 = GFX_MONO_LCD_HEIGHT - 1;
	}

	gfx_coord_t y1page = y / 8;
  400414:	08cc      	lsrs	r4, r1, #3
	gfx_coord_t y2page = y2 / 8;
  400416:	ea4f 08d2 	mov.w	r8, r2, lsr #3

	uint8_t y1bitpos = y & 0x07;
	uint8_t y2bitpos = y2 & 0x07;

	uint8_t y1pixelmask = 0xFF << y1bitpos;
  40041a:	f001 0207 	and.w	r2, r1, #7
  40041e:	23ff      	movs	r3, #255	; 0xff
  400420:	fa03 f202 	lsl.w	r2, r3, r2
  400424:	b2d2      	uxtb	r2, r2
	uint8_t y2pixelmask = 0xFF >> (7 - y2bitpos);
  400426:	f005 0507 	and.w	r5, r5, #7
  40042a:	f1c5 0507 	rsb	r5, r5, #7
  40042e:	fa43 f505 	asr.w	r5, r3, r5
  400432:	b2ed      	uxtb	r5, r5

	/* The pixels are on the same page; combine masks */
	if (y1page == y2page) {
  400434:	4544      	cmp	r4, r8
  400436:	d020      	beq.n	40047a <gfx_mono_generic_draw_vertical_line+0x86>
		uint8_t pixelmask = y1pixelmask & y2pixelmask;
		gfx_mono_mask_byte(y1page, x, pixelmask, color);
	} else {
		gfx_mono_mask_byte(y1page, x, y1pixelmask, color);
  400438:	463b      	mov	r3, r7
  40043a:	4601      	mov	r1, r0
  40043c:	4620      	mov	r0, r4
  40043e:	f8df 904c 	ldr.w	r9, [pc, #76]	; 40048c <gfx_mono_generic_draw_vertical_line+0x98>
  400442:	47c8      	blx	r9

		while (++y1page < y2page) {
  400444:	3401      	adds	r4, #1
  400446:	45a0      	cmp	r8, r4
  400448:	d90a      	bls.n	400460 <gfx_mono_generic_draw_vertical_line+0x6c>
			gfx_mono_mask_byte(y1page, x, 0xFF, color);
  40044a:	f04f 0aff 	mov.w	sl, #255	; 0xff
  40044e:	463b      	mov	r3, r7
  400450:	4652      	mov	r2, sl
  400452:	4631      	mov	r1, r6
  400454:	4620      	mov	r0, r4
  400456:	47c8      	blx	r9
		while (++y1page < y2page) {
  400458:	3401      	adds	r4, #1
  40045a:	b2e4      	uxtb	r4, r4
  40045c:	45a0      	cmp	r8, r4
  40045e:	d8f6      	bhi.n	40044e <gfx_mono_generic_draw_vertical_line+0x5a>
		}

		gfx_mono_mask_byte(y2page, x, y2pixelmask, color);
  400460:	463b      	mov	r3, r7
  400462:	462a      	mov	r2, r5
  400464:	4631      	mov	r1, r6
  400466:	4640      	mov	r0, r8
  400468:	4c08      	ldr	r4, [pc, #32]	; (40048c <gfx_mono_generic_draw_vertical_line+0x98>)
  40046a:	47a0      	blx	r4
  40046c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		gfx_mono_draw_pixel(x, y, color);
  400470:	461a      	mov	r2, r3
  400472:	4b07      	ldr	r3, [pc, #28]	; (400490 <gfx_mono_generic_draw_vertical_line+0x9c>)
  400474:	4798      	blx	r3
		return;
  400476:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		gfx_mono_mask_byte(y1page, x, pixelmask, color);
  40047a:	463b      	mov	r3, r7
  40047c:	402a      	ands	r2, r5
  40047e:	4601      	mov	r1, r0
  400480:	4620      	mov	r0, r4
  400482:	4c02      	ldr	r4, [pc, #8]	; (40048c <gfx_mono_generic_draw_vertical_line+0x98>)
  400484:	47a0      	blx	r4
  400486:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40048a:	4770      	bx	lr
  40048c:	004007ed 	.word	0x004007ed
  400490:	0040077d 	.word	0x0040077d

00400494 <gfx_mono_generic_draw_filled_rect>:
 * \param[in]  color       Pixel operation of the line
 */
void gfx_mono_generic_draw_filled_rect(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t width, gfx_coord_t height,
		enum gfx_mono_color color)
{
  400494:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400498:	f89d 7020 	ldrb.w	r7, [sp, #32]
	if (height == 0) {
  40049c:	b18b      	cbz	r3, 4004c2 <gfx_mono_generic_draw_filled_rect+0x2e>
  40049e:	461c      	mov	r4, r3
  4004a0:	4690      	mov	r8, r2
  4004a2:	4606      	mov	r6, r0
  4004a4:	1e4d      	subs	r5, r1, #1
  4004a6:	b2ed      	uxtb	r5, r5
  4004a8:	442c      	add	r4, r5
  4004aa:	b2e4      	uxtb	r4, r4
		/* Nothing to do. Move along. */
		return;
	}

	while (height-- > 0) {
		gfx_mono_draw_horizontal_line(x, y + height, width, color);
  4004ac:	f8df 9018 	ldr.w	r9, [pc, #24]	; 4004c8 <gfx_mono_generic_draw_filled_rect+0x34>
  4004b0:	463b      	mov	r3, r7
  4004b2:	4642      	mov	r2, r8
  4004b4:	4621      	mov	r1, r4
  4004b6:	4630      	mov	r0, r6
  4004b8:	47c8      	blx	r9
  4004ba:	3c01      	subs	r4, #1
  4004bc:	b2e4      	uxtb	r4, r4
	while (height-- > 0) {
  4004be:	42ac      	cmp	r4, r5
  4004c0:	d1f6      	bne.n	4004b0 <gfx_mono_generic_draw_filled_rect+0x1c>
  4004c2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4004c6:	bf00      	nop
  4004c8:	00400325 	.word	0x00400325

004004cc <gfx_mono_generic_draw_filled_circle>:
 * \param[in]  quadrant_mask Bitmask indicating which quadrants to draw.
 */
void gfx_mono_generic_draw_filled_circle(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t radius, enum gfx_mono_color color,
		uint8_t quadrant_mask)
{
  4004cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4004d0:	b085      	sub	sp, #20
  4004d2:	4681      	mov	r9, r0
  4004d4:	9100      	str	r1, [sp, #0]
  4004d6:	9301      	str	r3, [sp, #4]
  4004d8:	f89d b038 	ldrb.w	fp, [sp, #56]	; 0x38
	gfx_coord_t offset_x;
	gfx_coord_t offset_y;
	int16_t error;

	/* Draw only a pixel if radius is zero. */
	if (radius == 0) {
  4004dc:	b17a      	cbz	r2, 4004fe <gfx_mono_generic_draw_filled_circle+0x32>
  4004de:	4616      	mov	r6, r2
	}

	/* Set up start iterators. */
	offset_x = 0;
	offset_y = radius;
	error = 3 - 2 * radius;
  4004e0:	0055      	lsls	r5, r2, #1
  4004e2:	f1c5 0503 	rsb	r5, r5, #3
  4004e6:	2701      	movs	r7, #1
  4004e8:	f04f 0800 	mov.w	r8, #0

	/* Iterate offset_x from 0 to radius. */
	while (offset_x <= offset_y) {
		/* Draw vertical lines tracking each quadrant. */
		if (quadrant_mask & GFX_QUADRANT0) {
  4004ec:	f00b 0303 	and.w	r3, fp, #3
  4004f0:	9302      	str	r3, [sp, #8]
			gfx_mono_draw_vertical_line(x + offset_y,
  4004f2:	f8df a0f0 	ldr.w	sl, [pc, #240]	; 4005e4 <gfx_mono_generic_draw_filled_circle+0x118>
					y - offset_x, offset_x + 1, color);
			gfx_mono_draw_vertical_line(x + offset_x,
					y - offset_y, offset_y + 1, color);
		}

		if (quadrant_mask & GFX_QUADRANT1) {
  4004f6:	f00b 030c 	and.w	r3, fp, #12
  4004fa:	9303      	str	r3, [sp, #12]
  4004fc:	e04d      	b.n	40059a <gfx_mono_generic_draw_filled_circle+0xce>
		gfx_mono_draw_pixel(x, y, color);
  4004fe:	461a      	mov	r2, r3
  400500:	4b37      	ldr	r3, [pc, #220]	; (4005e0 <gfx_mono_generic_draw_filled_circle+0x114>)
  400502:	4798      	blx	r3
		}

		/* Next X. */
		++offset_x;
	}
}
  400504:	b005      	add	sp, #20
  400506:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			gfx_mono_draw_vertical_line(x + offset_y,
  40050a:	9b00      	ldr	r3, [sp, #0]
  40050c:	1b19      	subs	r1, r3, r4
  40050e:	eb09 0006 	add.w	r0, r9, r6
  400512:	9b01      	ldr	r3, [sp, #4]
  400514:	463a      	mov	r2, r7
  400516:	b2c9      	uxtb	r1, r1
  400518:	b2c0      	uxtb	r0, r0
  40051a:	47d0      	blx	sl
			gfx_mono_draw_vertical_line(x + offset_x,
  40051c:	1c72      	adds	r2, r6, #1
  40051e:	9900      	ldr	r1, [sp, #0]
  400520:	1b89      	subs	r1, r1, r6
  400522:	eb09 0004 	add.w	r0, r9, r4
  400526:	9b01      	ldr	r3, [sp, #4]
  400528:	b2d2      	uxtb	r2, r2
  40052a:	b2c9      	uxtb	r1, r1
  40052c:	b2c0      	uxtb	r0, r0
  40052e:	47d0      	blx	sl
  400530:	e038      	b.n	4005a4 <gfx_mono_generic_draw_filled_circle+0xd8>
			gfx_mono_draw_vertical_line(x - offset_y,
  400532:	9b00      	ldr	r3, [sp, #0]
  400534:	1b19      	subs	r1, r3, r4
  400536:	eba9 0006 	sub.w	r0, r9, r6
  40053a:	9b01      	ldr	r3, [sp, #4]
  40053c:	463a      	mov	r2, r7
  40053e:	b2c9      	uxtb	r1, r1
  400540:	b2c0      	uxtb	r0, r0
  400542:	47d0      	blx	sl
			gfx_mono_draw_vertical_line(x - offset_x,
  400544:	1c72      	adds	r2, r6, #1
  400546:	9900      	ldr	r1, [sp, #0]
  400548:	1b89      	subs	r1, r1, r6
  40054a:	eba9 0004 	sub.w	r0, r9, r4
  40054e:	9b01      	ldr	r3, [sp, #4]
  400550:	b2d2      	uxtb	r2, r2
  400552:	b2c9      	uxtb	r1, r1
  400554:	b2c0      	uxtb	r0, r0
  400556:	47d0      	blx	sl
  400558:	e027      	b.n	4005aa <gfx_mono_generic_draw_filled_circle+0xde>
			gfx_mono_draw_vertical_line(x - offset_y,
  40055a:	eba9 0006 	sub.w	r0, r9, r6
  40055e:	9b01      	ldr	r3, [sp, #4]
  400560:	463a      	mov	r2, r7
  400562:	9900      	ldr	r1, [sp, #0]
  400564:	b2c0      	uxtb	r0, r0
  400566:	47d0      	blx	sl
			gfx_mono_draw_vertical_line(x - offset_x,
  400568:	1c72      	adds	r2, r6, #1
  40056a:	eba9 0004 	sub.w	r0, r9, r4
  40056e:	9b01      	ldr	r3, [sp, #4]
  400570:	b2d2      	uxtb	r2, r2
  400572:	9900      	ldr	r1, [sp, #0]
  400574:	b2c0      	uxtb	r0, r0
  400576:	47d0      	blx	sl
  400578:	e01a      	b.n	4005b0 <gfx_mono_generic_draw_filled_circle+0xe4>
		if (error < 0) {
  40057a:	2d00      	cmp	r5, #0
  40057c:	db2b      	blt.n	4005d6 <gfx_mono_generic_draw_filled_circle+0x10a>
			error += (((offset_x - offset_y) << 2) + 10);
  40057e:	1ba4      	subs	r4, r4, r6
  400580:	350a      	adds	r5, #10
  400582:	eb05 0484 	add.w	r4, r5, r4, lsl #2
  400586:	b225      	sxth	r5, r4
			--offset_y;
  400588:	3e01      	subs	r6, #1
  40058a:	b2f6      	uxtb	r6, r6
  40058c:	f108 0801 	add.w	r8, r8, #1
  400590:	1c7b      	adds	r3, r7, #1
  400592:	b2db      	uxtb	r3, r3
	while (offset_x <= offset_y) {
  400594:	42be      	cmp	r6, r7
  400596:	d3b5      	bcc.n	400504 <gfx_mono_generic_draw_filled_circle+0x38>
  400598:	461f      	mov	r7, r3
  40059a:	fa5f f488 	uxtb.w	r4, r8
		if (quadrant_mask & GFX_QUADRANT0) {
  40059e:	9b02      	ldr	r3, [sp, #8]
  4005a0:	2b00      	cmp	r3, #0
  4005a2:	d1b2      	bne.n	40050a <gfx_mono_generic_draw_filled_circle+0x3e>
		if (quadrant_mask & GFX_QUADRANT1) {
  4005a4:	9b03      	ldr	r3, [sp, #12]
  4005a6:	2b00      	cmp	r3, #0
  4005a8:	d1c3      	bne.n	400532 <gfx_mono_generic_draw_filled_circle+0x66>
		if (quadrant_mask & GFX_QUADRANT2) {
  4005aa:	f01b 0f30 	tst.w	fp, #48	; 0x30
  4005ae:	d1d4      	bne.n	40055a <gfx_mono_generic_draw_filled_circle+0x8e>
		if (quadrant_mask & GFX_QUADRANT3) {
  4005b0:	f01b 0fc0 	tst.w	fp, #192	; 0xc0
  4005b4:	d0e1      	beq.n	40057a <gfx_mono_generic_draw_filled_circle+0xae>
			gfx_mono_draw_vertical_line(x + offset_y,
  4005b6:	eb09 0006 	add.w	r0, r9, r6
  4005ba:	9b01      	ldr	r3, [sp, #4]
  4005bc:	463a      	mov	r2, r7
  4005be:	9900      	ldr	r1, [sp, #0]
  4005c0:	b2c0      	uxtb	r0, r0
  4005c2:	47d0      	blx	sl
			gfx_mono_draw_vertical_line(x + offset_x,
  4005c4:	1c72      	adds	r2, r6, #1
  4005c6:	eb09 0004 	add.w	r0, r9, r4
  4005ca:	9b01      	ldr	r3, [sp, #4]
  4005cc:	b2d2      	uxtb	r2, r2
  4005ce:	9900      	ldr	r1, [sp, #0]
  4005d0:	b2c0      	uxtb	r0, r0
  4005d2:	47d0      	blx	sl
  4005d4:	e7d1      	b.n	40057a <gfx_mono_generic_draw_filled_circle+0xae>
			error += ((offset_x << 2) + 6);
  4005d6:	3506      	adds	r5, #6
  4005d8:	eb05 0584 	add.w	r5, r5, r4, lsl #2
  4005dc:	b22d      	sxth	r5, r5
  4005de:	e7d5      	b.n	40058c <gfx_mono_generic_draw_filled_circle+0xc0>
  4005e0:	0040077d 	.word	0x0040077d
  4005e4:	004003f5 	.word	0x004003f5

004005e8 <gfx_mono_draw_char>:
 * \param[in] y        Y coordinate on screen.
 * \param[in] font     Font to draw character in
 */
void gfx_mono_draw_char(const char c, const gfx_coord_t x, const gfx_coord_t y,
		const struct font *font)
{
  4005e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4005ec:	b083      	sub	sp, #12
  4005ee:	4604      	mov	r4, r0
  4005f0:	4688      	mov	r8, r1
  4005f2:	4691      	mov	r9, r2
  4005f4:	469b      	mov	fp, r3
	gfx_mono_draw_filled_rect(x, y, font->width, font->height,
  4005f6:	7a5b      	ldrb	r3, [r3, #9]
  4005f8:	f89b 2008 	ldrb.w	r2, [fp, #8]
  4005fc:	2100      	movs	r1, #0
  4005fe:	9100      	str	r1, [sp, #0]
  400600:	4649      	mov	r1, r9
  400602:	4640      	mov	r0, r8
  400604:	4d21      	ldr	r5, [pc, #132]	; (40068c <gfx_mono_draw_char+0xa4>)
  400606:	47a8      	blx	r5
			GFX_PIXEL_CLR);

	switch (font->type) {
  400608:	f89b 3000 	ldrb.w	r3, [fp]
  40060c:	b113      	cbz	r3, 400614 <gfx_mono_draw_char+0x2c>
	default:
		/* Unsupported mode, call assert */
		Assert(false);
		break;
	}
}
  40060e:	b003      	add	sp, #12
  400610:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	char_row_size = font->width / CONFIG_FONT_PIXELS_PER_BYTE;
  400614:	f89b 2008 	ldrb.w	r2, [fp, #8]
  400618:	08d3      	lsrs	r3, r2, #3
	if (font->width % CONFIG_FONT_PIXELS_PER_BYTE) {
  40061a:	f012 0f07 	tst.w	r2, #7
		char_row_size++;
  40061e:	bf18      	it	ne
  400620:	3301      	addne	r3, #1
	glyph_data_offset = char_row_size * font->height *
  400622:	f89b a009 	ldrb.w	sl, [fp, #9]
			((uint8_t)ch - font->first_char);
  400626:	f89b 700a 	ldrb.w	r7, [fp, #10]
  40062a:	1be7      	subs	r7, r4, r7
	glyph_data_offset = char_row_size * font->height *
  40062c:	fb17 f70a 	smulbb	r7, r7, sl
  400630:	fb17 f703 	smulbb	r7, r7, r3
	glyph_data = font->data.progmem + glyph_data_offset;
  400634:	f8db 3004 	ldr.w	r3, [fp, #4]
  400638:	fa13 f787 	uxtah	r7, r3, r7
  40063c:	e01f      	b.n	40067e <gfx_mono_draw_char+0x96>
			glyph_byte <<= 1;
  40063e:	0064      	lsls	r4, r4, #1
  400640:	b2e4      	uxtb	r4, r4
  400642:	3501      	adds	r5, #1
		for (i = 0; i < pixelsToDraw; i++) {
  400644:	b2eb      	uxtb	r3, r5
  400646:	429e      	cmp	r6, r3
  400648:	d910      	bls.n	40066c <gfx_mono_draw_char+0x84>
  40064a:	b2eb      	uxtb	r3, r5
  40064c:	eb08 0003 	add.w	r0, r8, r3
  400650:	b2c0      	uxtb	r0, r0
			if (i % CONFIG_FONT_PIXELS_PER_BYTE == 0) {
  400652:	f013 0f07 	tst.w	r3, #7
				glyph_byte = PROGMEM_READ_BYTE(glyph_data);
  400656:	bf08      	it	eq
  400658:	f817 4b01 	ldrbeq.w	r4, [r7], #1
			if ((glyph_byte & 0x80)) {
  40065c:	f014 0f80 	tst.w	r4, #128	; 0x80
  400660:	d0ed      	beq.n	40063e <gfx_mono_draw_char+0x56>
				gfx_mono_draw_pixel(inc_x, inc_y,
  400662:	2201      	movs	r2, #1
  400664:	4649      	mov	r1, r9
  400666:	4b0a      	ldr	r3, [pc, #40]	; (400690 <gfx_mono_draw_char+0xa8>)
  400668:	4798      	blx	r3
  40066a:	e7e8      	b.n	40063e <gfx_mono_draw_char+0x56>
		inc_y += 1;
  40066c:	f109 0901 	add.w	r9, r9, #1
  400670:	fa5f f989 	uxtb.w	r9, r9
		rows_left--;
  400674:	f10a 3aff 	add.w	sl, sl, #4294967295
	} while (rows_left > 0);
  400678:	f01a 0aff 	ands.w	sl, sl, #255	; 0xff
  40067c:	d0c7      	beq.n	40060e <gfx_mono_draw_char+0x26>
		uint8_t pixelsToDraw = font->width;
  40067e:	f89b 6008 	ldrb.w	r6, [fp, #8]
		for (i = 0; i < pixelsToDraw; i++) {
  400682:	2e00      	cmp	r6, #0
  400684:	d0f2      	beq.n	40066c <gfx_mono_draw_char+0x84>
  400686:	2500      	movs	r5, #0
  400688:	462c      	mov	r4, r5
  40068a:	e7de      	b.n	40064a <gfx_mono_draw_char+0x62>
  40068c:	00400495 	.word	0x00400495
  400690:	0040077d 	.word	0x0040077d

00400694 <gfx_mono_draw_string>:
 * \param[in] y         Y coordinate on screen.
 * \param[in] font      Font to draw string in
 */
void gfx_mono_draw_string(const char *str, gfx_coord_t x, gfx_coord_t y,
		const struct font *font)
{
  400694:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400698:	4604      	mov	r4, r0
  40069a:	4690      	mov	r8, r2
  40069c:	461d      	mov	r5, r3
  40069e:	4689      	mov	r9, r1
			x = start_of_string_position_x;
			y += font->height + 1;
		} else if (*str == '\r') {
			/* Skip '\r' characters. */
		} else {
			gfx_mono_draw_char(*str, x, y, font);
  4006a0:	4f0d      	ldr	r7, [pc, #52]	; (4006d8 <gfx_mono_draw_string+0x44>)
			x = start_of_string_position_x;
  4006a2:	460e      	mov	r6, r1
  4006a4:	e008      	b.n	4006b8 <gfx_mono_draw_string+0x24>
			y += font->height + 1;
  4006a6:	7a6a      	ldrb	r2, [r5, #9]
  4006a8:	3201      	adds	r2, #1
  4006aa:	4442      	add	r2, r8
  4006ac:	fa5f f882 	uxtb.w	r8, r2
			x = start_of_string_position_x;
  4006b0:	46b1      	mov	r9, r6
			x += font->width;
		}
	} while (*(++str));
  4006b2:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  4006b6:	b16b      	cbz	r3, 4006d4 <gfx_mono_draw_string+0x40>
		if (*str == '\n') {
  4006b8:	7820      	ldrb	r0, [r4, #0]
  4006ba:	280a      	cmp	r0, #10
  4006bc:	d0f3      	beq.n	4006a6 <gfx_mono_draw_string+0x12>
		} else if (*str == '\r') {
  4006be:	280d      	cmp	r0, #13
  4006c0:	d0f7      	beq.n	4006b2 <gfx_mono_draw_string+0x1e>
			gfx_mono_draw_char(*str, x, y, font);
  4006c2:	462b      	mov	r3, r5
  4006c4:	4642      	mov	r2, r8
  4006c6:	4649      	mov	r1, r9
  4006c8:	47b8      	blx	r7
			x += font->width;
  4006ca:	7a2b      	ldrb	r3, [r5, #8]
  4006cc:	4499      	add	r9, r3
  4006ce:	fa5f f989 	uxtb.w	r9, r9
  4006d2:	e7ee      	b.n	4006b2 <gfx_mono_draw_string+0x1e>
}
  4006d4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4006d8:	004005e9 	.word	0x004005e9

004006dc <gfx_mono_ssd1306_put_byte>:
	gfx_mono_ssd1306_put_byte(0, 0, 0xFF, false);
\endcode
  */
 void gfx_mono_ssd1306_put_byte(gfx_coord_t page, gfx_coord_t column,
		uint8_t data, bool force)
{
  4006dc:	b570      	push	{r4, r5, r6, lr}
  4006de:	4604      	mov	r4, r0
  4006e0:	460d      	mov	r5, r1
  4006e2:	4616      	mov	r6, r2
#ifdef CONFIG_SSD1306_FRAMEBUFFER
	if (!force && data == gfx_mono_framebuffer_get_byte(page, column)) {
  4006e4:	b91b      	cbnz	r3, 4006ee <gfx_mono_ssd1306_put_byte+0x12>
  4006e6:	4b0d      	ldr	r3, [pc, #52]	; (40071c <gfx_mono_ssd1306_put_byte+0x40>)
  4006e8:	4798      	blx	r3
  4006ea:	42b0      	cmp	r0, r6
  4006ec:	d015      	beq.n	40071a <gfx_mono_ssd1306_put_byte+0x3e>
		return;
	}
	gfx_mono_framebuffer_put_byte(page, column, data);
  4006ee:	4632      	mov	r2, r6
  4006f0:	4629      	mov	r1, r5
  4006f2:	4620      	mov	r0, r4
  4006f4:	4b0a      	ldr	r3, [pc, #40]	; (400720 <gfx_mono_ssd1306_put_byte+0x44>)
  4006f6:	4798      	blx	r3
 * \param address the page address
 */
static inline void ssd1306_set_page_address(uint8_t address)
{
	// Make sure that the address is 4 bits (only 8 pages)
	address &= 0x0F;
  4006f8:	f004 000f 	and.w	r0, r4, #15
	ssd1306_write_command(SSD1306_CMD_SET_PAGE_START_ADDRESS(address));
  4006fc:	f040 00b0 	orr.w	r0, r0, #176	; 0xb0
  400700:	4c08      	ldr	r4, [pc, #32]	; (400724 <gfx_mono_ssd1306_put_byte+0x48>)
  400702:	47a0      	blx	r4
 */
static inline void ssd1306_set_column_address(uint8_t address)
{
	// Make sure the address is 7 bits
	address &= 0x7F;
	ssd1306_write_command(SSD1306_CMD_COL_ADD_SET_MSB(address >> 4));
  400704:	f3c5 1002 	ubfx	r0, r5, #4, #3
  400708:	f040 0010 	orr.w	r0, r0, #16
  40070c:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_COL_ADD_SET_LSB(address & 0x0F));
  40070e:	f005 000f 	and.w	r0, r5, #15
  400712:	47a0      	blx	r4
#endif

	ssd1306_set_page_address(page);
	ssd1306_set_column_address(column);

	ssd1306_write_data(data);
  400714:	4630      	mov	r0, r6
  400716:	4b04      	ldr	r3, [pc, #16]	; (400728 <gfx_mono_ssd1306_put_byte+0x4c>)
  400718:	4798      	blx	r3
  40071a:	bd70      	pop	{r4, r5, r6, pc}
  40071c:	00400315 	.word	0x00400315
  400720:	00400305 	.word	0x00400305
  400724:	00400831 	.word	0x00400831
  400728:	00400a51 	.word	0x00400a51

0040072c <gfx_mono_ssd1306_init>:
{
  40072c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	gfx_mono_set_framebuffer(framebuffer);
  400730:	480d      	ldr	r0, [pc, #52]	; (400768 <gfx_mono_ssd1306_init+0x3c>)
  400732:	4b0e      	ldr	r3, [pc, #56]	; (40076c <gfx_mono_ssd1306_init+0x40>)
  400734:	4798      	blx	r3
	ssd1306_init();
  400736:	4b0e      	ldr	r3, [pc, #56]	; (400770 <gfx_mono_ssd1306_init+0x44>)
  400738:	4798      	blx	r3
 */
static inline void ssd1306_set_display_start_line_address(uint8_t address)
{
	// Make sure address is 6 bits
	address &= 0x3F;
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_START_LINE(address));
  40073a:	2040      	movs	r0, #64	; 0x40
  40073c:	4b0d      	ldr	r3, [pc, #52]	; (400774 <gfx_mono_ssd1306_init+0x48>)
  40073e:	4798      	blx	r3
	for (page = 0; page < GFX_MONO_LCD_PAGES; page++) {
  400740:	2500      	movs	r5, #0
			gfx_mono_ssd1306_put_byte(page, column, 0x00, true);
  400742:	f04f 0801 	mov.w	r8, #1
  400746:	462f      	mov	r7, r5
  400748:	4e0b      	ldr	r6, [pc, #44]	; (400778 <gfx_mono_ssd1306_init+0x4c>)
{
  40074a:	2400      	movs	r4, #0
			gfx_mono_ssd1306_put_byte(page, column, 0x00, true);
  40074c:	4643      	mov	r3, r8
  40074e:	463a      	mov	r2, r7
  400750:	b2e1      	uxtb	r1, r4
  400752:	4628      	mov	r0, r5
  400754:	47b0      	blx	r6
  400756:	3401      	adds	r4, #1
		for (column = 0; column < GFX_MONO_LCD_WIDTH; column++) {
  400758:	2c80      	cmp	r4, #128	; 0x80
  40075a:	d1f7      	bne.n	40074c <gfx_mono_ssd1306_init+0x20>
	for (page = 0; page < GFX_MONO_LCD_PAGES; page++) {
  40075c:	3501      	adds	r5, #1
  40075e:	b2ed      	uxtb	r5, r5
  400760:	2d04      	cmp	r5, #4
  400762:	d1f2      	bne.n	40074a <gfx_mono_ssd1306_init+0x1e>
  400764:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400768:	204009f0 	.word	0x204009f0
  40076c:	004002f9 	.word	0x004002f9
  400770:	00400871 	.word	0x00400871
  400774:	00400831 	.word	0x00400831
  400778:	004006dd 	.word	0x004006dd

0040077c <gfx_mono_ssd1306_draw_pixel>:
	if ((x > GFX_MONO_LCD_WIDTH - 1) || (y > GFX_MONO_LCD_HEIGHT - 1)) {
  40077c:	09c3      	lsrs	r3, r0, #7
  40077e:	d12a      	bne.n	4007d6 <gfx_mono_ssd1306_draw_pixel+0x5a>
  400780:	291f      	cmp	r1, #31
  400782:	d828      	bhi.n	4007d6 <gfx_mono_ssd1306_draw_pixel+0x5a>
{
  400784:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400788:	4614      	mov	r4, r2
  40078a:	4605      	mov	r5, r0
	page = y / GFX_MONO_LCD_PIXELS_PER_BYTE;
  40078c:	08ce      	lsrs	r6, r1, #3
	pixel_mask = (1 << (y - (page * 8)));
  40078e:	eba1 01c6 	sub.w	r1, r1, r6, lsl #3
  400792:	2201      	movs	r2, #1
  400794:	fa02 f701 	lsl.w	r7, r2, r1
  400798:	fa5f f887 	uxtb.w	r8, r7
\endcode
 */
uint8_t gfx_mono_ssd1306_get_byte(gfx_coord_t page, gfx_coord_t column)
{
#ifdef CONFIG_SSD1306_FRAMEBUFFER
	return gfx_mono_framebuffer_get_byte(page, column);
  40079c:	4601      	mov	r1, r0
  40079e:	4630      	mov	r0, r6
  4007a0:	4b0d      	ldr	r3, [pc, #52]	; (4007d8 <gfx_mono_ssd1306_draw_pixel+0x5c>)
  4007a2:	4798      	blx	r3
  4007a4:	4602      	mov	r2, r0
	switch (color) {
  4007a6:	2c01      	cmp	r4, #1
  4007a8:	d009      	beq.n	4007be <gfx_mono_ssd1306_draw_pixel+0x42>
  4007aa:	b164      	cbz	r4, 4007c6 <gfx_mono_ssd1306_draw_pixel+0x4a>
  4007ac:	2c02      	cmp	r4, #2
  4007ae:	d00e      	beq.n	4007ce <gfx_mono_ssd1306_draw_pixel+0x52>
	gfx_mono_put_byte(page, x, pixel_value);
  4007b0:	2300      	movs	r3, #0
  4007b2:	4629      	mov	r1, r5
  4007b4:	4630      	mov	r0, r6
  4007b6:	4c09      	ldr	r4, [pc, #36]	; (4007dc <gfx_mono_ssd1306_draw_pixel+0x60>)
  4007b8:	47a0      	blx	r4
  4007ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		pixel_value |= pixel_mask;
  4007be:	ea48 0200 	orr.w	r2, r8, r0
  4007c2:	b2d2      	uxtb	r2, r2
		break;
  4007c4:	e7f4      	b.n	4007b0 <gfx_mono_ssd1306_draw_pixel+0x34>
		pixel_value &= ~pixel_mask;
  4007c6:	ea20 0207 	bic.w	r2, r0, r7
  4007ca:	b2d2      	uxtb	r2, r2
		break;
  4007cc:	e7f0      	b.n	4007b0 <gfx_mono_ssd1306_draw_pixel+0x34>
		pixel_value ^= pixel_mask;
  4007ce:	ea88 0200 	eor.w	r2, r8, r0
  4007d2:	b2d2      	uxtb	r2, r2
		break;
  4007d4:	e7ec      	b.n	4007b0 <gfx_mono_ssd1306_draw_pixel+0x34>
  4007d6:	4770      	bx	lr
  4007d8:	00400315 	.word	0x00400315
  4007dc:	004006dd 	.word	0x004006dd

004007e0 <gfx_mono_ssd1306_get_byte>:
{
  4007e0:	b508      	push	{r3, lr}
	return gfx_mono_framebuffer_get_byte(page, column);
  4007e2:	4b01      	ldr	r3, [pc, #4]	; (4007e8 <gfx_mono_ssd1306_get_byte+0x8>)
  4007e4:	4798      	blx	r3
	ssd1306_set_column_address(column);

	return ssd1306_read_data();

#endif
}
  4007e6:	bd08      	pop	{r3, pc}
  4007e8:	00400315 	.word	0x00400315

004007ec <gfx_mono_ssd1306_mask_byte>:
	gfx_mono_ssd1306_mask_byte(0,0,0xAA,GFX_PIXEL_XOR);
\endcode
 */
void gfx_mono_ssd1306_mask_byte(gfx_coord_t page, gfx_coord_t column,
		gfx_mono_color_t pixel_mask, gfx_mono_color_t color)
{
  4007ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4007ee:	4605      	mov	r5, r0
  4007f0:	460e      	mov	r6, r1
  4007f2:	4617      	mov	r7, r2
  4007f4:	461c      	mov	r4, r3
	return gfx_mono_framebuffer_get_byte(page, column);
  4007f6:	4b0c      	ldr	r3, [pc, #48]	; (400828 <gfx_mono_ssd1306_mask_byte+0x3c>)
  4007f8:	4798      	blx	r3
  4007fa:	4602      	mov	r2, r0
	gfx_mono_color_t temp = gfx_mono_get_byte(page, column);

	switch (color) {
  4007fc:	2c01      	cmp	r4, #1
  4007fe:	d008      	beq.n	400812 <gfx_mono_ssd1306_mask_byte+0x26>
  400800:	b154      	cbz	r4, 400818 <gfx_mono_ssd1306_mask_byte+0x2c>
  400802:	2c02      	cmp	r4, #2
  400804:	d00c      	beq.n	400820 <gfx_mono_ssd1306_mask_byte+0x34>

	default:
		break;
	}

	gfx_mono_put_byte(page, column, temp);
  400806:	2300      	movs	r3, #0
  400808:	4631      	mov	r1, r6
  40080a:	4628      	mov	r0, r5
  40080c:	4c07      	ldr	r4, [pc, #28]	; (40082c <gfx_mono_ssd1306_mask_byte+0x40>)
  40080e:	47a0      	blx	r4
  400810:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		temp |= pixel_mask;
  400812:	433a      	orrs	r2, r7
  400814:	b2d2      	uxtb	r2, r2
		break;
  400816:	e7f6      	b.n	400806 <gfx_mono_ssd1306_mask_byte+0x1a>
		temp &= ~pixel_mask;
  400818:	ea20 0207 	bic.w	r2, r0, r7
  40081c:	b2d2      	uxtb	r2, r2
		break;
  40081e:	e7f2      	b.n	400806 <gfx_mono_ssd1306_mask_byte+0x1a>
		temp ^= pixel_mask;
  400820:	407a      	eors	r2, r7
  400822:	b2d2      	uxtb	r2, r2
		break;
  400824:	e7ef      	b.n	400806 <gfx_mono_ssd1306_mask_byte+0x1a>
  400826:	bf00      	nop
  400828:	00400315 	.word	0x00400315
  40082c:	004006dd 	.word	0x004006dd

00400830 <ssd1306_write_command>:
 * data write function is called based on the selected interface.
 *
 * \param command the command to write
 */
void ssd1306_write_command(uint8_t command)
{
  400830:	b538      	push	{r3, r4, r5, lr}
  400832:	4605      	mov	r5, r0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  400834:	2208      	movs	r2, #8
  400836:	4b09      	ldr	r3, [pc, #36]	; (40085c <ssd1306_write_command+0x2c>)
  400838:	635a      	str	r2, [r3, #52]	; 0x34
	ioport_set_pin_level(SSD1306_DC_PIN, false);
	
	spi_set_peripheral_chip_select_value(SPI0, 1);
  40083a:	4c09      	ldr	r4, [pc, #36]	; (400860 <ssd1306_write_command+0x30>)
  40083c:	2101      	movs	r1, #1
  40083e:	4620      	mov	r0, r4
  400840:	4b08      	ldr	r3, [pc, #32]	; (400864 <ssd1306_write_command+0x34>)
  400842:	4798      	blx	r3
	spi_write(SPI0, command, 1, 1);
  400844:	2301      	movs	r3, #1
  400846:	461a      	mov	r2, r3
  400848:	4629      	mov	r1, r5
  40084a:	4620      	mov	r0, r4
  40084c:	4c06      	ldr	r4, [pc, #24]	; (400868 <ssd1306_write_command+0x38>)
  40084e:	47a0      	blx	r4
	delay_us(10);
  400850:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  400854:	4b05      	ldr	r3, [pc, #20]	; (40086c <ssd1306_write_command+0x3c>)
  400856:	4798      	blx	r3
  400858:	bd38      	pop	{r3, r4, r5, pc}
  40085a:	bf00      	nop
  40085c:	400e1000 	.word	0x400e1000
  400860:	40008000 	.word	0x40008000
  400864:	004001d9 	.word	0x004001d9
  400868:	004001ef 	.word	0x004001ef
  40086c:	20400001 	.word	0x20400001

00400870 <ssd1306_init>:
{
  400870:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400874:	4d66      	ldr	r5, [pc, #408]	; (400a10 <ssd1306_init+0x1a0>)
  400876:	f44f 3600 	mov.w	r6, #131072	; 0x20000
  40087a:	612e      	str	r6, [r5, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  40087c:	f8c5 60a0 	str.w	r6, [r5, #160]	; 0xa0
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400880:	4b64      	ldr	r3, [pc, #400]	; (400a14 <ssd1306_init+0x1a4>)
  400882:	2708      	movs	r7, #8
  400884:	611f      	str	r7, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400886:	f8c3 70a0 	str.w	r7, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  40088a:	666e      	str	r6, [r5, #100]	; 0x64
		base->PIO_PPDDR = mask;
  40088c:	f8c5 6090 	str.w	r6, [r5, #144]	; 0x90
		base->PIO_MDDR = mask;
  400890:	656e      	str	r6, [r5, #84]	; 0x54
		base->PIO_IFDR = mask;
  400892:	626e      	str	r6, [r5, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  400894:	f8c5 6080 	str.w	r6, [r5, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  400898:	6f2a      	ldr	r2, [r5, #112]	; 0x70
  40089a:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
  40089e:	672a      	str	r2, [r5, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  4008a0:	6f6a      	ldr	r2, [r5, #116]	; 0x74
  4008a2:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
  4008a6:	676a      	str	r2, [r5, #116]	; 0x74
		base->PIO_PUER = mask;
  4008a8:	665f      	str	r7, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  4008aa:	f8c3 7090 	str.w	r7, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  4008ae:	655f      	str	r7, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  4008b0:	625f      	str	r7, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  4008b2:	f8c3 7080 	str.w	r7, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  4008b6:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  4008b8:	f022 0208 	bic.w	r2, r2, #8
  4008bc:	671a      	str	r2, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  4008be:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  4008c0:	f022 0208 	bic.w	r2, r2, #8
  4008c4:	675a      	str	r2, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PER = mask;
  4008c6:	601f      	str	r7, [r3, #0]
  4008c8:	602e      	str	r6, [r5, #0]
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  4008ca:	631f      	str	r7, [r3, #48]	; 0x30
  4008cc:	632e      	str	r6, [r5, #48]	; 0x30
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CLK_MASK, PIO_DEFAULT);
  4008ce:	f8df 817c 	ldr.w	r8, [pc, #380]	; 400a4c <ssd1306_init+0x1dc>
  4008d2:	2300      	movs	r3, #0
  4008d4:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  4008d8:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4008dc:	4640      	mov	r0, r8
  4008de:	4c4e      	ldr	r4, [pc, #312]	; (400a18 <ssd1306_init+0x1a8>)
  4008e0:	47a0      	blx	r4
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_MOSI_MASK, PIO_DEFAULT);
  4008e2:	2300      	movs	r3, #0
  4008e4:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  4008e8:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4008ec:	4640      	mov	r0, r8
  4008ee:	47a0      	blx	r4
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CS_MASK, PIO_DEFAULT);
  4008f0:	2300      	movs	r3, #0
  4008f2:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  4008f6:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4008fa:	4640      	mov	r0, r8
  4008fc:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CLK_MASK, PIO_DEFAULT);
  4008fe:	2300      	movs	r3, #0
  400900:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  400904:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400908:	4640      	mov	r0, r8
  40090a:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_MOSI_MASK, PIO_DEFAULT);
  40090c:	2300      	movs	r3, #0
  40090e:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  400912:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400916:	4640      	mov	r0, r8
  400918:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CS_MASK, PIO_DEFAULT);
  40091a:	2300      	movs	r3, #0
  40091c:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  400920:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400924:	4640      	mov	r0, r8
  400926:	47a0      	blx	r4
	p_spi->SPI_CR = SPI_CR_SPIDIS;
  400928:	4c3c      	ldr	r4, [pc, #240]	; (400a1c <ssd1306_init+0x1ac>)
  40092a:	f04f 0902 	mov.w	r9, #2
  40092e:	f8c4 9000 	str.w	r9, [r4]
	p_spi->SPI_CR = SPI_CR_SWRST;
  400932:	f04f 0880 	mov.w	r8, #128	; 0x80
  400936:	f8c4 8000 	str.w	r8, [r4]
	p_spi->SPI_MR |= SPI_MR_MSTR;
  40093a:	6863      	ldr	r3, [r4, #4]
  40093c:	f043 0301 	orr.w	r3, r3, #1
  400940:	6063      	str	r3, [r4, #4]
		spi_configure_cs_behavior(SPI0, 1, SPI_CS_KEEP_LOW);
  400942:	463a      	mov	r2, r7
  400944:	2101      	movs	r1, #1
  400946:	4620      	mov	r0, r4
  400948:	4b35      	ldr	r3, [pc, #212]	; (400a20 <ssd1306_init+0x1b0>)
  40094a:	4798      	blx	r3
		spi_set_clock_polarity(SPI0, 1, 0);
  40094c:	2200      	movs	r2, #0
  40094e:	2101      	movs	r1, #1
  400950:	4620      	mov	r0, r4
  400952:	4b34      	ldr	r3, [pc, #208]	; (400a24 <ssd1306_init+0x1b4>)
  400954:	4798      	blx	r3
		spi_set_clock_phase(SPI0, 1, 0);
  400956:	2200      	movs	r2, #0
  400958:	2101      	movs	r1, #1
  40095a:	4620      	mov	r0, r4
  40095c:	4b32      	ldr	r3, [pc, #200]	; (400a28 <ssd1306_init+0x1b8>)
  40095e:	4798      	blx	r3
	p_spi->SPI_MR &= (~SPI_MR_PS);
  400960:	6863      	ldr	r3, [r4, #4]
  400962:	f023 0302 	bic.w	r3, r3, #2
  400966:	6063      	str	r3, [r4, #4]
		spi_set_bits_per_transfer(SPI0, 1, SPI_CSR_BITS_8_BIT);
  400968:	2200      	movs	r2, #0
  40096a:	2101      	movs	r1, #1
  40096c:	4620      	mov	r0, r4
  40096e:	4b2f      	ldr	r3, [pc, #188]	; (400a2c <ssd1306_init+0x1bc>)
  400970:	4798      	blx	r3
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable_loopback(Spi *p_spi)
{
	p_spi->SPI_MR &= (~SPI_MR_LLB);
  400972:	6863      	ldr	r3, [r4, #4]
  400974:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  400978:	6063      	str	r3, [r4, #4]
	p_spi->SPI_MR |= SPI_MR_MODFDIS;
  40097a:	6863      	ldr	r3, [r4, #4]
  40097c:	f043 0310 	orr.w	r3, r3, #16
  400980:	6063      	str	r3, [r4, #4]
		int div = spi_calc_baudrate_div(1000000, sysclk_get_peripheral_hz());
  400982:	492b      	ldr	r1, [pc, #172]	; (400a30 <ssd1306_init+0x1c0>)
  400984:	482b      	ldr	r0, [pc, #172]	; (400a34 <ssd1306_init+0x1c4>)
  400986:	4b2c      	ldr	r3, [pc, #176]	; (400a38 <ssd1306_init+0x1c8>)
  400988:	4798      	blx	r3
		spi_set_baudrate_div(SPI0,1, div);
  40098a:	b2c2      	uxtb	r2, r0
  40098c:	2101      	movs	r1, #1
  40098e:	4620      	mov	r0, r4
  400990:	4b2a      	ldr	r3, [pc, #168]	; (400a3c <ssd1306_init+0x1cc>)
  400992:	4798      	blx	r3
		spi_enable_clock(SPI0);
  400994:	4620      	mov	r0, r4
  400996:	4b2a      	ldr	r3, [pc, #168]	; (400a40 <ssd1306_init+0x1d0>)
  400998:	4798      	blx	r3
	p_spi->SPI_CR = SPI_CR_SPIEN;
  40099a:	2301      	movs	r3, #1
  40099c:	6023      	str	r3, [r4, #0]
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  40099e:	636e      	str	r6, [r5, #52]	; 0x34
	delay_cycles(delay_10us); // At lest 10us
  4009a0:	f640 30b8 	movw	r0, #3000	; 0xbb8
  4009a4:	4c27      	ldr	r4, [pc, #156]	; (400a44 <ssd1306_init+0x1d4>)
  4009a6:	47a0      	blx	r4
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  4009a8:	632e      	str	r6, [r5, #48]	; 0x30
	delay_cycles(delay_10us); // At lest 10us
  4009aa:	f640 30b8 	movw	r0, #3000	; 0xbb8
  4009ae:	47a0      	blx	r4
  4009b0:	632e      	str	r6, [r5, #48]	; 0x30
	ssd1306_write_command(SSD1306_CMD_SET_MULTIPLEX_RATIO);
  4009b2:	20a8      	movs	r0, #168	; 0xa8
  4009b4:	4c24      	ldr	r4, [pc, #144]	; (400a48 <ssd1306_init+0x1d8>)
  4009b6:	47a0      	blx	r4
	ssd1306_write_command(0x1F);
  4009b8:	201f      	movs	r0, #31
  4009ba:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_OFFSET);
  4009bc:	20d3      	movs	r0, #211	; 0xd3
  4009be:	47a0      	blx	r4
	ssd1306_write_command(0x00);
  4009c0:	2000      	movs	r0, #0
  4009c2:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_START_LINE(0x00));
  4009c4:	2040      	movs	r0, #64	; 0x40
  4009c6:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_SEGMENT_RE_MAP_COL127_SEG0);
  4009c8:	20a1      	movs	r0, #161	; 0xa1
  4009ca:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_COM_OUTPUT_SCAN_DOWN);
  4009cc:	20c8      	movs	r0, #200	; 0xc8
  4009ce:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_COM_PINS);
  4009d0:	20da      	movs	r0, #218	; 0xda
  4009d2:	47a0      	blx	r4
	ssd1306_write_command(0x02);
  4009d4:	4648      	mov	r0, r9
  4009d6:	47a0      	blx	r4
 *
 * \retval contrast the contrast value written to the OLED controller
 */
static inline uint8_t ssd1306_set_contrast(uint8_t contrast)
{
	ssd1306_write_command(SSD1306_CMD_SET_CONTRAST_CONTROL_FOR_BANK0);
  4009d8:	2081      	movs	r0, #129	; 0x81
  4009da:	47a0      	blx	r4
	ssd1306_write_command(contrast);
  4009dc:	208f      	movs	r0, #143	; 0x8f
  4009de:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_ENTIRE_DISPLAY_AND_GDDRAM_ON);
  4009e0:	20a4      	movs	r0, #164	; 0xa4
  4009e2:	47a0      	blx	r4
 * This function will disable invert on all pixels on the OLED
 *
 */
static inline void ssd1306_display_invert_disable(void)
{
	ssd1306_write_command(SSD1306_CMD_SET_NORMAL_DISPLAY);
  4009e4:	20a6      	movs	r0, #166	; 0xa6
  4009e6:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_CLOCK_DIVIDE_RATIO);
  4009e8:	20d5      	movs	r0, #213	; 0xd5
  4009ea:	47a0      	blx	r4
	ssd1306_write_command(0x80);
  4009ec:	4640      	mov	r0, r8
  4009ee:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_CHARGE_PUMP_SETTING);
  4009f0:	208d      	movs	r0, #141	; 0x8d
  4009f2:	47a0      	blx	r4
	ssd1306_write_command(0x14);
  4009f4:	2014      	movs	r0, #20
  4009f6:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_VCOMH_DESELECT_LEVEL);
  4009f8:	20db      	movs	r0, #219	; 0xdb
  4009fa:	47a0      	blx	r4
	ssd1306_write_command(0x40); // Default => 0x20 (0.77*VCC)
  4009fc:	2040      	movs	r0, #64	; 0x40
  4009fe:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_PRE_CHARGE_PERIOD);
  400a00:	20d9      	movs	r0, #217	; 0xd9
  400a02:	47a0      	blx	r4
	ssd1306_write_command(0xF1);
  400a04:	20f1      	movs	r0, #241	; 0xf1
  400a06:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_ON);
  400a08:	20af      	movs	r0, #175	; 0xaf
  400a0a:	47a0      	blx	r4
  400a0c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400a10:	400e1200 	.word	0x400e1200
  400a14:	400e1000 	.word	0x400e1000
  400a18:	00400d39 	.word	0x00400d39
  400a1c:	40008000 	.word	0x40008000
  400a20:	0040025f 	.word	0x0040025f
  400a24:	00400223 	.word	0x00400223
  400a28:	00400241 	.word	0x00400241
  400a2c:	004002a5 	.word	0x004002a5
  400a30:	08f0d180 	.word	0x08f0d180
  400a34:	000f4240 	.word	0x000f4240
  400a38:	004002b9 	.word	0x004002b9
  400a3c:	004002cf 	.word	0x004002cf
  400a40:	004001ad 	.word	0x004001ad
  400a44:	20400001 	.word	0x20400001
  400a48:	00400831 	.word	0x00400831
  400a4c:	400e1400 	.word	0x400e1400

00400a50 <ssd1306_write_data>:
 * data write function is called based on the selected interface.
 *
 * \param data the data to write
 */
void ssd1306_write_data(uint8_t data)
{
  400a50:	b538      	push	{r3, r4, r5, lr}
  400a52:	4605      	mov	r5, r0
  400a54:	2208      	movs	r2, #8
  400a56:	4b09      	ldr	r3, [pc, #36]	; (400a7c <ssd1306_write_data+0x2c>)
  400a58:	631a      	str	r2, [r3, #48]	; 0x30
	ioport_set_pin_level(SSD1306_DC_PIN, true);
	
	spi_set_peripheral_chip_select_value(SPI0, 1);
  400a5a:	4c09      	ldr	r4, [pc, #36]	; (400a80 <ssd1306_write_data+0x30>)
  400a5c:	2101      	movs	r1, #1
  400a5e:	4620      	mov	r0, r4
  400a60:	4b08      	ldr	r3, [pc, #32]	; (400a84 <ssd1306_write_data+0x34>)
  400a62:	4798      	blx	r3
	spi_write(SPI0, data, 1, 1);
  400a64:	2301      	movs	r3, #1
  400a66:	461a      	mov	r2, r3
  400a68:	4629      	mov	r1, r5
  400a6a:	4620      	mov	r0, r4
  400a6c:	4c06      	ldr	r4, [pc, #24]	; (400a88 <ssd1306_write_data+0x38>)
  400a6e:	47a0      	blx	r4
	delay_us(10);
  400a70:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  400a74:	4b05      	ldr	r3, [pc, #20]	; (400a8c <ssd1306_write_data+0x3c>)
  400a76:	4798      	blx	r3
  400a78:	bd38      	pop	{r3, r4, r5, pc}
  400a7a:	bf00      	nop
  400a7c:	400e1000 	.word	0x400e1000
  400a80:	40008000 	.word	0x40008000
  400a84:	004001d9 	.word	0x004001d9
  400a88:	004001ef 	.word	0x004001ef
  400a8c:	20400001 	.word	0x20400001

00400a90 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400a90:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  400a92:	4810      	ldr	r0, [pc, #64]	; (400ad4 <sysclk_init+0x44>)
  400a94:	4b10      	ldr	r3, [pc, #64]	; (400ad8 <sysclk_init+0x48>)
  400a96:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400a98:	213e      	movs	r1, #62	; 0x3e
  400a9a:	2000      	movs	r0, #0
  400a9c:	4b0f      	ldr	r3, [pc, #60]	; (400adc <sysclk_init+0x4c>)
  400a9e:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400aa0:	4c0f      	ldr	r4, [pc, #60]	; (400ae0 <sysclk_init+0x50>)
  400aa2:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  400aa4:	2800      	cmp	r0, #0
  400aa6:	d0fc      	beq.n	400aa2 <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400aa8:	4b0e      	ldr	r3, [pc, #56]	; (400ae4 <sysclk_init+0x54>)
  400aaa:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400aac:	4a0e      	ldr	r2, [pc, #56]	; (400ae8 <sysclk_init+0x58>)
  400aae:	4b0f      	ldr	r3, [pc, #60]	; (400aec <sysclk_init+0x5c>)
  400ab0:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
	return pmc_is_locked_pllack();
  400ab2:	4c0f      	ldr	r4, [pc, #60]	; (400af0 <sysclk_init+0x60>)
  400ab4:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  400ab6:	2800      	cmp	r0, #0
  400ab8:	d0fc      	beq.n	400ab4 <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
  400aba:	2002      	movs	r0, #2
  400abc:	4b0d      	ldr	r3, [pc, #52]	; (400af4 <sysclk_init+0x64>)
  400abe:	4798      	blx	r3
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  400ac0:	2000      	movs	r0, #0
  400ac2:	4b0d      	ldr	r3, [pc, #52]	; (400af8 <sysclk_init+0x68>)
  400ac4:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}
	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400ac6:	4b0d      	ldr	r3, [pc, #52]	; (400afc <sysclk_init+0x6c>)
  400ac8:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  400aca:	4802      	ldr	r0, [pc, #8]	; (400ad4 <sysclk_init+0x44>)
  400acc:	4b02      	ldr	r3, [pc, #8]	; (400ad8 <sysclk_init+0x48>)
  400ace:	4798      	blx	r3
  400ad0:	bd10      	pop	{r4, pc}
  400ad2:	bf00      	nop
  400ad4:	11e1a300 	.word	0x11e1a300
  400ad8:	0040153d 	.word	0x0040153d
  400adc:	00400fc9 	.word	0x00400fc9
  400ae0:	0040101d 	.word	0x0040101d
  400ae4:	0040102d 	.word	0x0040102d
  400ae8:	20183f01 	.word	0x20183f01
  400aec:	400e0600 	.word	0x400e0600
  400af0:	0040103d 	.word	0x0040103d
  400af4:	00400f2d 	.word	0x00400f2d
  400af8:	00400f65 	.word	0x00400f65
  400afc:	00401431 	.word	0x00401431

00400b00 <board_init>:
	__ISB();
}
#endif

void board_init(void)
{
  400b00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  400b02:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  400b06:	4b48      	ldr	r3, [pc, #288]	; (400c28 <board_init+0x128>)
  400b08:	605a      	str	r2, [r3, #4]
    This function acts as a special kind of Data Memory Barrier.
    It completes when all explicit memory accesses before this instruction complete.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DSB(void)
{
  __ASM volatile ("dsb");
  400b0a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400b0e:	f3bf 8f6f 	isb	sy
__STATIC_INLINE void SCB_EnableICache(void)
{
  #if (__ICACHE_PRESENT == 1)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0;                       // invalidate I-Cache
  400b12:	4b46      	ldr	r3, [pc, #280]	; (400c2c <board_init+0x12c>)
  400b14:	2200      	movs	r2, #0
  400b16:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
    SCB->CCR |=  SCB_CCR_IC_Msk;            // enable I-Cache
  400b1a:	695a      	ldr	r2, [r3, #20]
  400b1c:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
  400b20:	615a      	str	r2, [r3, #20]
  __ASM volatile ("dsb");
  400b22:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400b26:	f3bf 8f6f 	isb	sy
{
  #if (__DCACHE_PRESENT == 1)
    uint32_t ccsidr, sshift, wshift, sw;
    uint32_t sets, ways;

    ccsidr  = SCB->CCSIDR;
  400b2a:	f8d3 7080 	ldr.w	r7, [r3, #128]	; 0x80
    sets    = CCSIDR_SETS(ccsidr);
  400b2e:	f3c7 364e 	ubfx	r6, r7, #13, #15
    sshift  = CCSIDR_LSSHIFT(ccsidr) + 4;
  400b32:	f007 0007 	and.w	r0, r7, #7
  400b36:	3004      	adds	r0, #4
    ways    = CCSIDR_WAYS(ccsidr);
  400b38:	f3c7 07c9 	ubfx	r7, r7, #3, #10
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint8_t __CLZ(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
  400b3c:	fab7 fe87 	clz	lr, r7
    wshift  = __CLZ(ways) & 0x1f;
  400b40:	f00e 0e1f 	and.w	lr, lr, #31
  __ASM volatile ("dsb");
  400b44:	f3bf 8f4f 	dsb	sy
  400b48:	f04f 34ff 	mov.w	r4, #4294967295
  400b4c:	fa04 fc00 	lsl.w	ip, r4, r0
  400b50:	fa06 f000 	lsl.w	r0, r6, r0
  400b54:	fa04 f40e 	lsl.w	r4, r4, lr
  400b58:	fa07 fe0e 	lsl.w	lr, r7, lr

    do {                                    // invalidate D-Cache
         int32_t tmpways = ways;
         do {
              sw = ((tmpways << wshift) | (sets << sshift));
              SCB->DCISW = sw;
  400b5c:	461d      	mov	r5, r3
         int32_t tmpways = ways;
  400b5e:	463a      	mov	r2, r7
  400b60:	4673      	mov	r3, lr
              sw = ((tmpways << wshift) | (sets << sshift));
  400b62:	ea40 0103 	orr.w	r1, r0, r3
              SCB->DCISW = sw;
  400b66:	f8c5 1260 	str.w	r1, [r5, #608]	; 0x260
            } while(tmpways--);
  400b6a:	3a01      	subs	r2, #1
  400b6c:	4423      	add	r3, r4
  400b6e:	f1b2 3fff 	cmp.w	r2, #4294967295
  400b72:	d1f6      	bne.n	400b62 <board_init+0x62>
        } while(sets--);
  400b74:	3e01      	subs	r6, #1
  400b76:	4460      	add	r0, ip
  400b78:	f1b6 3fff 	cmp.w	r6, #4294967295
  400b7c:	d1ef      	bne.n	400b5e <board_init+0x5e>
  400b7e:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  SCB_CCR_DC_Msk;            // enable D-Cache
  400b82:	4b2a      	ldr	r3, [pc, #168]	; (400c2c <board_init+0x12c>)
  400b84:	695a      	ldr	r2, [r3, #20]
  400b86:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
  400b8a:	615a      	str	r2, [r3, #20]
  400b8c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400b90:	f3bf 8f6f 	isb	sy
		*dst++ = *src++;
	}
#endif
#else
	/* TCM Configuration */
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400b94:	4a26      	ldr	r2, [pc, #152]	; (400c30 <board_init+0x130>)
  400b96:	4927      	ldr	r1, [pc, #156]	; (400c34 <board_init+0x134>)
  400b98:	6051      	str	r1, [r2, #4]
					| EEFC_FCR_FARG(8));
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400b9a:	f5a1 7180 	sub.w	r1, r1, #256	; 0x100
  400b9e:	6051      	str	r1, [r2, #4]
  __ASM volatile ("dsb");
  400ba0:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400ba4:	f3bf 8f6f 	isb	sy
	SCB->ITCMCR &= ~(uint32_t)(1UL);
  400ba8:	f8d3 2290 	ldr.w	r2, [r3, #656]	; 0x290
  400bac:	f022 0201 	bic.w	r2, r2, #1
  400bb0:	f8c3 2290 	str.w	r2, [r3, #656]	; 0x290
	SCB->DTCMCR &= ~(uint32_t)SCB_DTCMCR_EN_Msk;
  400bb4:	f8d3 2294 	ldr.w	r2, [r3, #660]	; 0x294
  400bb8:	f022 0201 	bic.w	r2, r2, #1
  400bbc:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
  __ASM volatile ("dsb");
  400bc0:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400bc4:	f3bf 8f6f 	isb	sy
  400bc8:	200a      	movs	r0, #10
  400bca:	4c1b      	ldr	r4, [pc, #108]	; (400c38 <board_init+0x138>)
  400bcc:	47a0      	blx	r4
  400bce:	200b      	movs	r0, #11
  400bd0:	47a0      	blx	r4
  400bd2:	200c      	movs	r0, #12
  400bd4:	47a0      	blx	r4
  400bd6:	2010      	movs	r0, #16
  400bd8:	47a0      	blx	r4
  400bda:	2011      	movs	r0, #17
  400bdc:	47a0      	blx	r4
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400bde:	4b17      	ldr	r3, [pc, #92]	; (400c3c <board_init+0x13c>)
  400be0:	f44f 7280 	mov.w	r2, #256	; 0x100
  400be4:	611a      	str	r2, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400be6:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400bea:	631a      	str	r2, [r3, #48]	; 0x30
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  400bec:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
  400bf0:	f44f 6200 	mov.w	r2, #2048	; 0x800
  400bf4:	615a      	str	r2, [r3, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400bf6:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  400bfa:	665a      	str	r2, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  400bfc:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  400c00:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFER = mask;
  400c02:	621a      	str	r2, [r3, #32]
		base->PIO_IFSCER = mask;
  400c04:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
		base->PIO_ABCDSR[0] &= ~mask;
  400c08:	6f19      	ldr	r1, [r3, #112]	; 0x70
  400c0a:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400c0e:	6719      	str	r1, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400c10:	6f59      	ldr	r1, [r3, #116]	; 0x74
  400c12:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400c16:	6759      	str	r1, [r3, #116]	; 0x74
	case IOPORT_SENSE_FALLING:
		base->PIO_ESR = mask;
		base->PIO_FELLSR = mask;
		break;
	case IOPORT_SENSE_RISING:
		base->PIO_ESR = mask;
  400c18:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
		base->PIO_REHLSR = mask;
  400c1c:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
		break;
	default:
		base->PIO_AIMDR = mask;
		return;
	}
	base->PIO_AIMER = mask;
  400c20:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
  400c24:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400c26:	bf00      	nop
  400c28:	400e1850 	.word	0x400e1850
  400c2c:	e000ed00 	.word	0xe000ed00
  400c30:	400e0c00 	.word	0x400e0c00
  400c34:	5a00080c 	.word	0x5a00080c
  400c38:	0040104d 	.word	0x0040104d
  400c3c:	400e1200 	.word	0x400e1200

00400c40 <pio_set>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_set(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_SODR = ul_mask;
  400c40:	6301      	str	r1, [r0, #48]	; 0x30
  400c42:	4770      	bx	lr

00400c44 <pio_clear>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_clear(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_CODR = ul_mask;
  400c44:	6341      	str	r1, [r0, #52]	; 0x34
  400c46:	4770      	bx	lr

00400c48 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  400c48:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  400c4a:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400c4e:	d03a      	beq.n	400cc6 <pio_set_peripheral+0x7e>
  400c50:	d813      	bhi.n	400c7a <pio_set_peripheral+0x32>
  400c52:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400c56:	d025      	beq.n	400ca4 <pio_set_peripheral+0x5c>
  400c58:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400c5c:	d10a      	bne.n	400c74 <pio_set_peripheral+0x2c>

		ul_sr = p_pio->PIO_ABCDSR[1];
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
		break;
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  400c5e:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400c60:	4313      	orrs	r3, r2
  400c62:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  400c64:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400c66:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400c68:	400b      	ands	r3, r1
  400c6a:	ea23 0302 	bic.w	r3, r3, r2
  400c6e:	6743      	str	r3, [r0, #116]	; 0x74
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  400c70:	6042      	str	r2, [r0, #4]
  400c72:	4770      	bx	lr
	switch (ul_type) {
  400c74:	2900      	cmp	r1, #0
  400c76:	d1fb      	bne.n	400c70 <pio_set_peripheral+0x28>
  400c78:	4770      	bx	lr
  400c7a:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400c7e:	d021      	beq.n	400cc4 <pio_set_peripheral+0x7c>
  400c80:	d809      	bhi.n	400c96 <pio_set_peripheral+0x4e>
  400c82:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400c86:	d1f3      	bne.n	400c70 <pio_set_peripheral+0x28>
		ul_sr = p_pio->PIO_ABCDSR[0];
  400c88:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400c8a:	4313      	orrs	r3, r2
  400c8c:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400c8e:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400c90:	4313      	orrs	r3, r2
  400c92:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400c94:	e7ec      	b.n	400c70 <pio_set_peripheral+0x28>
	switch (ul_type) {
  400c96:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400c9a:	d013      	beq.n	400cc4 <pio_set_peripheral+0x7c>
  400c9c:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400ca0:	d010      	beq.n	400cc4 <pio_set_peripheral+0x7c>
  400ca2:	e7e5      	b.n	400c70 <pio_set_peripheral+0x28>
{
  400ca4:	b410      	push	{r4}
		ul_sr = p_pio->PIO_ABCDSR[0];
  400ca6:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400ca8:	6f04      	ldr	r4, [r0, #112]	; 0x70
  400caa:	43d3      	mvns	r3, r2
  400cac:	4021      	ands	r1, r4
  400cae:	461c      	mov	r4, r3
  400cb0:	4019      	ands	r1, r3
  400cb2:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400cb4:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400cb6:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400cb8:	400b      	ands	r3, r1
  400cba:	4023      	ands	r3, r4
  400cbc:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  400cbe:	6042      	str	r2, [r0, #4]
}
  400cc0:	f85d 4b04 	ldr.w	r4, [sp], #4
  400cc4:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABCDSR[0];
  400cc6:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400cc8:	6f01      	ldr	r1, [r0, #112]	; 0x70
  400cca:	400b      	ands	r3, r1
  400ccc:	ea23 0302 	bic.w	r3, r3, r2
  400cd0:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400cd2:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400cd4:	4313      	orrs	r3, r2
  400cd6:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400cd8:	e7ca      	b.n	400c70 <pio_set_peripheral+0x28>

00400cda <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400cda:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400cdc:	f012 0f01 	tst.w	r2, #1
  400ce0:	d10d      	bne.n	400cfe <pio_set_input+0x24>
		p_pio->PIO_PUDR = ul_mask;
  400ce2:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400ce4:	f012 0f0a 	tst.w	r2, #10
  400ce8:	d00b      	beq.n	400d02 <pio_set_input+0x28>
		p_pio->PIO_IFER = ul_mask;
  400cea:	6201      	str	r1, [r0, #32]
	if (ul_attribute & PIO_DEGLITCH) {
  400cec:	f012 0f02 	tst.w	r2, #2
  400cf0:	d109      	bne.n	400d06 <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
  400cf2:	f012 0f08 	tst.w	r2, #8
  400cf6:	d008      	beq.n	400d0a <pio_set_input+0x30>
			p_pio->PIO_IFSCER = ul_mask;
  400cf8:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
  400cfc:	e005      	b.n	400d0a <pio_set_input+0x30>
		p_pio->PIO_PUER = ul_mask;
  400cfe:	6641      	str	r1, [r0, #100]	; 0x64
  400d00:	e7f0      	b.n	400ce4 <pio_set_input+0xa>
		p_pio->PIO_IFDR = ul_mask;
  400d02:	6241      	str	r1, [r0, #36]	; 0x24
  400d04:	e7f2      	b.n	400cec <pio_set_input+0x12>
		p_pio->PIO_IFSCDR = ul_mask;
  400d06:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
	p_pio->PIO_ODR = ul_mask;
  400d0a:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  400d0c:	6001      	str	r1, [r0, #0]
  400d0e:	4770      	bx	lr

00400d10 <pio_set_output>:
{
  400d10:	b410      	push	{r4}
  400d12:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
  400d14:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400d16:	b94c      	cbnz	r4, 400d2c <pio_set_output+0x1c>
		p_pio->PIO_PUDR = ul_mask;
  400d18:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  400d1a:	b14b      	cbz	r3, 400d30 <pio_set_output+0x20>
		p_pio->PIO_MDER = ul_mask;
  400d1c:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
  400d1e:	b94a      	cbnz	r2, 400d34 <pio_set_output+0x24>
		p_pio->PIO_CODR = ul_mask;
  400d20:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  400d22:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  400d24:	6001      	str	r1, [r0, #0]
}
  400d26:	f85d 4b04 	ldr.w	r4, [sp], #4
  400d2a:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
  400d2c:	6641      	str	r1, [r0, #100]	; 0x64
  400d2e:	e7f4      	b.n	400d1a <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
  400d30:	6541      	str	r1, [r0, #84]	; 0x54
  400d32:	e7f4      	b.n	400d1e <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
  400d34:	6301      	str	r1, [r0, #48]	; 0x30
  400d36:	e7f4      	b.n	400d22 <pio_set_output+0x12>

00400d38 <pio_configure>:
{
  400d38:	b570      	push	{r4, r5, r6, lr}
  400d3a:	b082      	sub	sp, #8
  400d3c:	4605      	mov	r5, r0
  400d3e:	4616      	mov	r6, r2
  400d40:	461c      	mov	r4, r3
	switch (ul_type) {
  400d42:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400d46:	d014      	beq.n	400d72 <pio_configure+0x3a>
  400d48:	d90a      	bls.n	400d60 <pio_configure+0x28>
  400d4a:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400d4e:	d024      	beq.n	400d9a <pio_configure+0x62>
  400d50:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400d54:	d021      	beq.n	400d9a <pio_configure+0x62>
  400d56:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400d5a:	d017      	beq.n	400d8c <pio_configure+0x54>
		return 0;
  400d5c:	2000      	movs	r0, #0
  400d5e:	e01a      	b.n	400d96 <pio_configure+0x5e>
	switch (ul_type) {
  400d60:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400d64:	d005      	beq.n	400d72 <pio_configure+0x3a>
  400d66:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400d6a:	d002      	beq.n	400d72 <pio_configure+0x3a>
  400d6c:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400d70:	d1f4      	bne.n	400d5c <pio_configure+0x24>
		pio_set_peripheral(p_pio, ul_type, ul_mask);
  400d72:	4632      	mov	r2, r6
  400d74:	4628      	mov	r0, r5
  400d76:	4b11      	ldr	r3, [pc, #68]	; (400dbc <pio_configure+0x84>)
  400d78:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400d7a:	f014 0f01 	tst.w	r4, #1
  400d7e:	d102      	bne.n	400d86 <pio_configure+0x4e>
		p_pio->PIO_PUDR = ul_mask;
  400d80:	662e      	str	r6, [r5, #96]	; 0x60
	return 1;
  400d82:	2001      	movs	r0, #1
  400d84:	e007      	b.n	400d96 <pio_configure+0x5e>
		p_pio->PIO_PUER = ul_mask;
  400d86:	666e      	str	r6, [r5, #100]	; 0x64
	return 1;
  400d88:	2001      	movs	r0, #1
  400d8a:	e004      	b.n	400d96 <pio_configure+0x5e>
		pio_set_input(p_pio, ul_mask, ul_attribute);
  400d8c:	461a      	mov	r2, r3
  400d8e:	4631      	mov	r1, r6
  400d90:	4b0b      	ldr	r3, [pc, #44]	; (400dc0 <pio_configure+0x88>)
  400d92:	4798      	blx	r3
	return 1;
  400d94:	2001      	movs	r0, #1
}
  400d96:	b002      	add	sp, #8
  400d98:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_output(p_pio, ul_mask, (ul_type == PIO_OUTPUT_1),
  400d9a:	f004 0301 	and.w	r3, r4, #1
  400d9e:	9300      	str	r3, [sp, #0]
  400da0:	f3c4 0380 	ubfx	r3, r4, #2, #1
  400da4:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400da8:	bf14      	ite	ne
  400daa:	2200      	movne	r2, #0
  400dac:	2201      	moveq	r2, #1
  400dae:	4631      	mov	r1, r6
  400db0:	4628      	mov	r0, r5
  400db2:	4c04      	ldr	r4, [pc, #16]	; (400dc4 <pio_configure+0x8c>)
  400db4:	47a0      	blx	r4
	return 1;
  400db6:	2001      	movs	r0, #1
		break;
  400db8:	e7ed      	b.n	400d96 <pio_configure+0x5e>
  400dba:	bf00      	nop
  400dbc:	00400c49 	.word	0x00400c49
  400dc0:	00400cdb 	.word	0x00400cdb
  400dc4:	00400d11 	.word	0x00400d11

00400dc8 <pio_configure_interrupt>:
	if (ul_attr & PIO_IT_AIME) {
  400dc8:	f012 0f10 	tst.w	r2, #16
  400dcc:	d012      	beq.n	400df4 <pio_configure_interrupt+0x2c>
		p_pio->PIO_AIMER = ul_mask;
  400dce:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
		if (ul_attr & PIO_IT_RE_OR_HL) {
  400dd2:	f012 0f20 	tst.w	r2, #32
  400dd6:	d007      	beq.n	400de8 <pio_configure_interrupt+0x20>
			p_pio->PIO_REHLSR = ul_mask;
  400dd8:	f8c0 10d4 	str.w	r1, [r0, #212]	; 0xd4
		if (ul_attr & PIO_IT_EDGE) {
  400ddc:	f012 0f40 	tst.w	r2, #64	; 0x40
  400de0:	d005      	beq.n	400dee <pio_configure_interrupt+0x26>
			p_pio->PIO_ESR = ul_mask;
  400de2:	f8c0 10c0 	str.w	r1, [r0, #192]	; 0xc0
  400de6:	4770      	bx	lr
			p_pio->PIO_FELLSR = ul_mask;
  400de8:	f8c0 10d0 	str.w	r1, [r0, #208]	; 0xd0
  400dec:	e7f6      	b.n	400ddc <pio_configure_interrupt+0x14>
			p_pio->PIO_LSR = ul_mask;
  400dee:	f8c0 10c4 	str.w	r1, [r0, #196]	; 0xc4
  400df2:	4770      	bx	lr
		p_pio->PIO_AIMDR = ul_mask;
  400df4:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
  400df8:	4770      	bx	lr

00400dfa <pio_enable_interrupt>:
	p_pio->PIO_IER = ul_mask;
  400dfa:	6401      	str	r1, [r0, #64]	; 0x40
  400dfc:	4770      	bx	lr

00400dfe <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  400dfe:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  400e00:	4770      	bx	lr

00400e02 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  400e02:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  400e04:	4770      	bx	lr
	...

00400e08 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  400e08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400e0c:	4604      	mov	r4, r0
  400e0e:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  400e10:	4b0e      	ldr	r3, [pc, #56]	; (400e4c <pio_handler_process+0x44>)
  400e12:	4798      	blx	r3
  400e14:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  400e16:	4620      	mov	r0, r4
  400e18:	4b0d      	ldr	r3, [pc, #52]	; (400e50 <pio_handler_process+0x48>)
  400e1a:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  400e1c:	4005      	ands	r5, r0
  400e1e:	d013      	beq.n	400e48 <pio_handler_process+0x40>
  400e20:	4c0c      	ldr	r4, [pc, #48]	; (400e54 <pio_handler_process+0x4c>)
  400e22:	f104 0660 	add.w	r6, r4, #96	; 0x60
  400e26:	e003      	b.n	400e30 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  400e28:	42b4      	cmp	r4, r6
  400e2a:	d00d      	beq.n	400e48 <pio_handler_process+0x40>
  400e2c:	3410      	adds	r4, #16
		while (status != 0) {
  400e2e:	b15d      	cbz	r5, 400e48 <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  400e30:	6820      	ldr	r0, [r4, #0]
  400e32:	4540      	cmp	r0, r8
  400e34:	d1f8      	bne.n	400e28 <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  400e36:	6861      	ldr	r1, [r4, #4]
  400e38:	4229      	tst	r1, r5
  400e3a:	d0f5      	beq.n	400e28 <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400e3c:	68e3      	ldr	r3, [r4, #12]
  400e3e:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  400e40:	6863      	ldr	r3, [r4, #4]
  400e42:	ea25 0503 	bic.w	r5, r5, r3
  400e46:	e7ef      	b.n	400e28 <pio_handler_process+0x20>
  400e48:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400e4c:	00400dff 	.word	0x00400dff
  400e50:	00400e03 	.word	0x00400e03
  400e54:	20400bf0 	.word	0x20400bf0

00400e58 <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
  400e58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint8_t i;
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
  400e5a:	4c18      	ldr	r4, [pc, #96]	; (400ebc <pio_handler_set+0x64>)
  400e5c:	6826      	ldr	r6, [r4, #0]
  400e5e:	2e06      	cmp	r6, #6
  400e60:	d82a      	bhi.n	400eb8 <pio_handler_set+0x60>
  400e62:	f04f 0c00 	mov.w	ip, #0
  400e66:	4664      	mov	r4, ip
		return 1;

    /* Check interrupt for this pin, if already defined, redefine it. */
	for (i = 0; i <= gs_ul_nb_sources; i++) {
		pSource = &(gs_interrupt_sources[i]);
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400e68:	4f15      	ldr	r7, [pc, #84]	; (400ec0 <pio_handler_set+0x68>)
  400e6a:	e004      	b.n	400e76 <pio_handler_set+0x1e>
	for (i = 0; i <= gs_ul_nb_sources; i++) {
  400e6c:	3401      	adds	r4, #1
  400e6e:	b2e4      	uxtb	r4, r4
  400e70:	46a4      	mov	ip, r4
  400e72:	42a6      	cmp	r6, r4
  400e74:	d309      	bcc.n	400e8a <pio_handler_set+0x32>
		pSource = &(gs_interrupt_sources[i]);
  400e76:	46a6      	mov	lr, r4
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400e78:	0125      	lsls	r5, r4, #4
  400e7a:	597d      	ldr	r5, [r7, r5]
  400e7c:	428d      	cmp	r5, r1
  400e7e:	d1f5      	bne.n	400e6c <pio_handler_set+0x14>
  400e80:	eb07 1504 	add.w	r5, r7, r4, lsl #4
  400e84:	686d      	ldr	r5, [r5, #4]
  400e86:	4295      	cmp	r5, r2
  400e88:	d1f0      	bne.n	400e6c <pio_handler_set+0x14>
			break;
		}
	}

	/* Define new source */
	pSource->id = ul_id;
  400e8a:	4d0d      	ldr	r5, [pc, #52]	; (400ec0 <pio_handler_set+0x68>)
  400e8c:	ea4f 1e0e 	mov.w	lr, lr, lsl #4
  400e90:	eb05 040e 	add.w	r4, r5, lr
  400e94:	f845 100e 	str.w	r1, [r5, lr]
	pSource->mask = ul_mask;
  400e98:	6062      	str	r2, [r4, #4]
	pSource->attr = ul_attr;
  400e9a:	60a3      	str	r3, [r4, #8]
	pSource->handler = p_handler;
  400e9c:	9906      	ldr	r1, [sp, #24]
  400e9e:	60e1      	str	r1, [r4, #12]
	if (i == gs_ul_nb_sources + 1) {
  400ea0:	3601      	adds	r6, #1
  400ea2:	4566      	cmp	r6, ip
  400ea4:	d005      	beq.n	400eb2 <pio_handler_set+0x5a>
  400ea6:	4611      	mov	r1, r2
		gs_ul_nb_sources++;
	}

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
  400ea8:	461a      	mov	r2, r3
  400eaa:	4b06      	ldr	r3, [pc, #24]	; (400ec4 <pio_handler_set+0x6c>)
  400eac:	4798      	blx	r3

	return 0;
  400eae:	2000      	movs	r0, #0
  400eb0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		gs_ul_nb_sources++;
  400eb2:	4902      	ldr	r1, [pc, #8]	; (400ebc <pio_handler_set+0x64>)
  400eb4:	600e      	str	r6, [r1, #0]
  400eb6:	e7f6      	b.n	400ea6 <pio_handler_set+0x4e>
		return 1;
  400eb8:	2001      	movs	r0, #1
}
  400eba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400ebc:	20400c60 	.word	0x20400c60
  400ec0:	20400bf0 	.word	0x20400bf0
  400ec4:	00400dc9 	.word	0x00400dc9

00400ec8 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  400ec8:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  400eca:	210a      	movs	r1, #10
  400ecc:	4801      	ldr	r0, [pc, #4]	; (400ed4 <PIOA_Handler+0xc>)
  400ece:	4b02      	ldr	r3, [pc, #8]	; (400ed8 <PIOA_Handler+0x10>)
  400ed0:	4798      	blx	r3
  400ed2:	bd08      	pop	{r3, pc}
  400ed4:	400e0e00 	.word	0x400e0e00
  400ed8:	00400e09 	.word	0x00400e09

00400edc <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400edc:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  400ede:	210b      	movs	r1, #11
  400ee0:	4801      	ldr	r0, [pc, #4]	; (400ee8 <PIOB_Handler+0xc>)
  400ee2:	4b02      	ldr	r3, [pc, #8]	; (400eec <PIOB_Handler+0x10>)
  400ee4:	4798      	blx	r3
  400ee6:	bd08      	pop	{r3, pc}
  400ee8:	400e1000 	.word	0x400e1000
  400eec:	00400e09 	.word	0x00400e09

00400ef0 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  400ef0:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  400ef2:	210c      	movs	r1, #12
  400ef4:	4801      	ldr	r0, [pc, #4]	; (400efc <PIOC_Handler+0xc>)
  400ef6:	4b02      	ldr	r3, [pc, #8]	; (400f00 <PIOC_Handler+0x10>)
  400ef8:	4798      	blx	r3
  400efa:	bd08      	pop	{r3, pc}
  400efc:	400e1200 	.word	0x400e1200
  400f00:	00400e09 	.word	0x00400e09

00400f04 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
  400f04:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
  400f06:	2110      	movs	r1, #16
  400f08:	4801      	ldr	r0, [pc, #4]	; (400f10 <PIOD_Handler+0xc>)
  400f0a:	4b02      	ldr	r3, [pc, #8]	; (400f14 <PIOD_Handler+0x10>)
  400f0c:	4798      	blx	r3
  400f0e:	bd08      	pop	{r3, pc}
  400f10:	400e1400 	.word	0x400e1400
  400f14:	00400e09 	.word	0x00400e09

00400f18 <PIOE_Handler>:
/**
 * \brief Parallel IO Controller E interrupt handler.
 * Redefined PIOE interrupt handler for NVIC interrupt table.
 */
void PIOE_Handler(void)
{
  400f18:	b508      	push	{r3, lr}
	pio_handler_process(PIOE, ID_PIOE);
  400f1a:	2111      	movs	r1, #17
  400f1c:	4801      	ldr	r0, [pc, #4]	; (400f24 <PIOE_Handler+0xc>)
  400f1e:	4b02      	ldr	r3, [pc, #8]	; (400f28 <PIOE_Handler+0x10>)
  400f20:	4798      	blx	r3
  400f22:	bd08      	pop	{r3, pc}
  400f24:	400e1600 	.word	0x400e1600
  400f28:	00400e09 	.word	0x00400e09

00400f2c <pmc_mck_set_division>:
 *
 * \param ul_div Division value.
 */
void pmc_mck_set_division(uint32_t ul_div)
{
	switch (ul_div) {
  400f2c:	2803      	cmp	r0, #3
  400f2e:	d011      	beq.n	400f54 <pmc_mck_set_division+0x28>
  400f30:	2804      	cmp	r0, #4
  400f32:	d012      	beq.n	400f5a <pmc_mck_set_division+0x2e>
		case 1:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
  400f34:	2802      	cmp	r0, #2
  400f36:	bf0c      	ite	eq
  400f38:	f44f 7180 	moveq.w	r1, #256	; 0x100
  400f3c:	2100      	movne	r1, #0
		default:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
			break;
	}
	PMC->PMC_MCKR =
			(PMC->PMC_MCKR & (~PMC_MCKR_MDIV_Msk)) | ul_div;
  400f3e:	4a08      	ldr	r2, [pc, #32]	; (400f60 <pmc_mck_set_division+0x34>)
  400f40:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400f42:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  400f46:	430b      	orrs	r3, r1
	PMC->PMC_MCKR =
  400f48:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  400f4a:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400f4c:	f013 0f08 	tst.w	r3, #8
  400f50:	d0fb      	beq.n	400f4a <pmc_mck_set_division+0x1e>
}
  400f52:	4770      	bx	lr
			ul_div = PMC_MCKR_MDIV_PCK_DIV3;
  400f54:	f44f 7140 	mov.w	r1, #768	; 0x300
			break;
  400f58:	e7f1      	b.n	400f3e <pmc_mck_set_division+0x12>
			ul_div = PMC_MCKR_MDIV_PCK_DIV4;
  400f5a:	f44f 7100 	mov.w	r1, #512	; 0x200
			break;
  400f5e:	e7ee      	b.n	400f3e <pmc_mck_set_division+0x12>
  400f60:	400e0600 	.word	0x400e0600

00400f64 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  400f64:	4a17      	ldr	r2, [pc, #92]	; (400fc4 <pmc_switch_mck_to_pllack+0x60>)
  400f66:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400f68:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  400f6c:	4318      	orrs	r0, r3
  400f6e:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400f70:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400f72:	f013 0f08 	tst.w	r3, #8
  400f76:	d10a      	bne.n	400f8e <pmc_switch_mck_to_pllack+0x2a>
  400f78:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  400f7c:	4911      	ldr	r1, [pc, #68]	; (400fc4 <pmc_switch_mck_to_pllack+0x60>)
  400f7e:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400f80:	f012 0f08 	tst.w	r2, #8
  400f84:	d103      	bne.n	400f8e <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400f86:	3b01      	subs	r3, #1
  400f88:	d1f9      	bne.n	400f7e <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  400f8a:	2001      	movs	r0, #1
  400f8c:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  400f8e:	4a0d      	ldr	r2, [pc, #52]	; (400fc4 <pmc_switch_mck_to_pllack+0x60>)
  400f90:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400f92:	f023 0303 	bic.w	r3, r3, #3
  400f96:	f043 0302 	orr.w	r3, r3, #2
  400f9a:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400f9c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400f9e:	f013 0f08 	tst.w	r3, #8
  400fa2:	d10a      	bne.n	400fba <pmc_switch_mck_to_pllack+0x56>
  400fa4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  400fa8:	4906      	ldr	r1, [pc, #24]	; (400fc4 <pmc_switch_mck_to_pllack+0x60>)
  400faa:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400fac:	f012 0f08 	tst.w	r2, #8
  400fb0:	d105      	bne.n	400fbe <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400fb2:	3b01      	subs	r3, #1
  400fb4:	d1f9      	bne.n	400faa <pmc_switch_mck_to_pllack+0x46>
			return 1;
  400fb6:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  400fb8:	4770      	bx	lr
	return 0;
  400fba:	2000      	movs	r0, #0
  400fbc:	4770      	bx	lr
  400fbe:	2000      	movs	r0, #0
  400fc0:	4770      	bx	lr
  400fc2:	bf00      	nop
  400fc4:	400e0600 	.word	0x400e0600

00400fc8 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  400fc8:	b9a0      	cbnz	r0, 400ff4 <pmc_switch_mainck_to_xtal+0x2c>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400fca:	480e      	ldr	r0, [pc, #56]	; (401004 <pmc_switch_mainck_to_xtal+0x3c>)
  400fcc:	6a03      	ldr	r3, [r0, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  400fce:	0209      	lsls	r1, r1, #8
  400fd0:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  400fd2:	4a0d      	ldr	r2, [pc, #52]	; (401008 <pmc_switch_mainck_to_xtal+0x40>)
  400fd4:	401a      	ands	r2, r3
  400fd6:	4b0d      	ldr	r3, [pc, #52]	; (40100c <pmc_switch_mainck_to_xtal+0x44>)
  400fd8:	4313      	orrs	r3, r2
  400fda:	4319      	orrs	r1, r3
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400fdc:	6201      	str	r1, [r0, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  400fde:	4602      	mov	r2, r0
  400fe0:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400fe2:	f013 0f01 	tst.w	r3, #1
  400fe6:	d0fb      	beq.n	400fe0 <pmc_switch_mainck_to_xtal+0x18>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  400fe8:	4a06      	ldr	r2, [pc, #24]	; (401004 <pmc_switch_mainck_to_xtal+0x3c>)
  400fea:	6a11      	ldr	r1, [r2, #32]
  400fec:	4b08      	ldr	r3, [pc, #32]	; (401010 <pmc_switch_mainck_to_xtal+0x48>)
  400fee:	430b      	orrs	r3, r1
  400ff0:	6213      	str	r3, [r2, #32]
  400ff2:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400ff4:	4903      	ldr	r1, [pc, #12]	; (401004 <pmc_switch_mainck_to_xtal+0x3c>)
  400ff6:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  400ff8:	4a06      	ldr	r2, [pc, #24]	; (401014 <pmc_switch_mainck_to_xtal+0x4c>)
  400ffa:	401a      	ands	r2, r3
  400ffc:	4b06      	ldr	r3, [pc, #24]	; (401018 <pmc_switch_mainck_to_xtal+0x50>)
  400ffe:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  401000:	620b      	str	r3, [r1, #32]
  401002:	4770      	bx	lr
  401004:	400e0600 	.word	0x400e0600
  401008:	ffc8fffc 	.word	0xffc8fffc
  40100c:	00370001 	.word	0x00370001
  401010:	01370000 	.word	0x01370000
  401014:	fec8fffc 	.word	0xfec8fffc
  401018:	01370002 	.word	0x01370002

0040101c <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  40101c:	4b02      	ldr	r3, [pc, #8]	; (401028 <pmc_osc_is_ready_mainck+0xc>)
  40101e:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  401020:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  401024:	4770      	bx	lr
  401026:	bf00      	nop
  401028:	400e0600 	.word	0x400e0600

0040102c <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  40102c:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  401030:	4b01      	ldr	r3, [pc, #4]	; (401038 <pmc_disable_pllack+0xc>)
  401032:	629a      	str	r2, [r3, #40]	; 0x28
  401034:	4770      	bx	lr
  401036:	bf00      	nop
  401038:	400e0600 	.word	0x400e0600

0040103c <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  40103c:	4b02      	ldr	r3, [pc, #8]	; (401048 <pmc_is_locked_pllack+0xc>)
  40103e:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  401040:	f000 0002 	and.w	r0, r0, #2
  401044:	4770      	bx	lr
  401046:	bf00      	nop
  401048:	400e0600 	.word	0x400e0600

0040104c <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  40104c:	283f      	cmp	r0, #63	; 0x3f
  40104e:	d81e      	bhi.n	40108e <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  401050:	281f      	cmp	r0, #31
  401052:	d80c      	bhi.n	40106e <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  401054:	4b11      	ldr	r3, [pc, #68]	; (40109c <pmc_enable_periph_clk+0x50>)
  401056:	699a      	ldr	r2, [r3, #24]
  401058:	2301      	movs	r3, #1
  40105a:	4083      	lsls	r3, r0
  40105c:	4393      	bics	r3, r2
  40105e:	d018      	beq.n	401092 <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  401060:	2301      	movs	r3, #1
  401062:	fa03 f000 	lsl.w	r0, r3, r0
  401066:	4b0d      	ldr	r3, [pc, #52]	; (40109c <pmc_enable_periph_clk+0x50>)
  401068:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  40106a:	2000      	movs	r0, #0
  40106c:	4770      	bx	lr
		ul_id -= 32;
  40106e:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  401070:	4b0a      	ldr	r3, [pc, #40]	; (40109c <pmc_enable_periph_clk+0x50>)
  401072:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  401076:	2301      	movs	r3, #1
  401078:	4083      	lsls	r3, r0
  40107a:	4393      	bics	r3, r2
  40107c:	d00b      	beq.n	401096 <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  40107e:	2301      	movs	r3, #1
  401080:	fa03 f000 	lsl.w	r0, r3, r0
  401084:	4b05      	ldr	r3, [pc, #20]	; (40109c <pmc_enable_periph_clk+0x50>)
  401086:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
  40108a:	2000      	movs	r0, #0
  40108c:	4770      	bx	lr
		return 1;
  40108e:	2001      	movs	r0, #1
  401090:	4770      	bx	lr
	return 0;
  401092:	2000      	movs	r0, #0
  401094:	4770      	bx	lr
  401096:	2000      	movs	r0, #0
}
  401098:	4770      	bx	lr
  40109a:	bf00      	nop
  40109c:	400e0600 	.word	0x400e0600

004010a0 <pmc_set_flash_in_wait_mode>:
 *
 * \param ul_flash_state PMC_WAIT_MODE_FLASH_STANDBY flash in standby mode,
 * PMC_WAIT_MODE_FLASH_DEEP_POWERDOWN flash in deep power down mode.
 */
void pmc_set_flash_in_wait_mode(uint32_t ul_flash_state)
{
  4010a0:	4770      	bx	lr
	...

004010a4 <pmc_enable_waitmode>:
void pmc_enable_waitmode(void)
{
	uint32_t i;

	/* Flash in wait mode */
	i = PMC->PMC_FSMR;
  4010a4:	4a10      	ldr	r2, [pc, #64]	; (4010e8 <pmc_enable_waitmode+0x44>)
  4010a6:	6f13      	ldr	r3, [r2, #112]	; 0x70
	i &= ~PMC_FSMR_FLPM_Msk;
  4010a8:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
#if !(SAMV71 || SAMV70 || SAME70 || SAMS70)
	i |= ul_flash_in_wait_mode;
#else
	i |= PMC_WAIT_MODE_FLASH_IDLE;
  4010ac:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
#endif
	PMC->PMC_FSMR = i;
  4010b0:	6713      	str	r3, [r2, #112]	; 0x70

	/* Set the WAITMODE bit = 1 */
	PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_WAITMODE;
  4010b2:	6a11      	ldr	r1, [r2, #32]
  4010b4:	4b0d      	ldr	r3, [pc, #52]	; (4010ec <pmc_enable_waitmode+0x48>)
  4010b6:	430b      	orrs	r3, r1
  4010b8:	6213      	str	r3, [r2, #32]

	/* Waiting for Master Clock Ready MCKRDY = 1 */
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  4010ba:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4010bc:	f013 0f08 	tst.w	r3, #8
  4010c0:	d0fb      	beq.n	4010ba <pmc_enable_waitmode+0x16>
  4010c2:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
  __ASM volatile ("nop");
  4010c6:	bf00      	nop

	/* Waiting for MOSCRCEN bit cleared is strongly recommended
	 * to ensure that the core will not execute undesired instructions
	 */
	for (i = 0; i < 500; i++) {
  4010c8:	3b01      	subs	r3, #1
  4010ca:	d1fc      	bne.n	4010c6 <pmc_enable_waitmode+0x22>
		__NOP();
	}
	while (!(PMC->CKGR_MOR & CKGR_MOR_MOSCRCEN));
  4010cc:	4a06      	ldr	r2, [pc, #24]	; (4010e8 <pmc_enable_waitmode+0x44>)
  4010ce:	6a13      	ldr	r3, [r2, #32]
  4010d0:	f013 0f08 	tst.w	r3, #8
  4010d4:	d0fb      	beq.n	4010ce <pmc_enable_waitmode+0x2a>

#if (!SAMG)
	/* Restore Flash in idle mode */
	i = PMC->PMC_FSMR;
  4010d6:	4a04      	ldr	r2, [pc, #16]	; (4010e8 <pmc_enable_waitmode+0x44>)
  4010d8:	6f13      	ldr	r3, [r2, #112]	; 0x70
	i &= ~PMC_FSMR_FLPM_Msk;
  4010da:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
	i |= PMC_WAIT_MODE_FLASH_IDLE;
  4010de:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
	PMC->PMC_FSMR = i;
  4010e2:	6713      	str	r3, [r2, #112]	; 0x70
  4010e4:	4770      	bx	lr
  4010e6:	bf00      	nop
  4010e8:	400e0600 	.word	0x400e0600
  4010ec:	00370004 	.word	0x00370004

004010f0 <pmc_sleep>:
static volatile bool b_is_sleep_clock_used = false;
/** Callback invoked once when clocks are restored */
static pmc_callback_wakeup_clocks_restored_t callback_clocks_restored = NULL;

void pmc_sleep(int sleep_mode)
{
  4010f0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	switch (sleep_mode) {
  4010f4:	1e43      	subs	r3, r0, #1
  4010f6:	2b04      	cmp	r3, #4
  4010f8:	f200 8107 	bhi.w	40130a <pmc_sleep+0x21a>
  4010fc:	e8df f013 	tbh	[pc, r3, lsl #1]
  401100:	00050005 	.word	0x00050005
  401104:	00150015 	.word	0x00150015
  401108:	00f6      	.short	0x00f6
	case SAM_PM_SMODE_SLEEP_WFI:
	case SAM_PM_SMODE_SLEEP_WFE:
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG || SAMV71 || SAMV70 || SAMS70 || SAME70)
		SCB->SCR &= (uint32_t)~SCR_SLEEPDEEP;
  40110a:	4a81      	ldr	r2, [pc, #516]	; (401310 <pmc_sleep+0x220>)
  40110c:	6913      	ldr	r3, [r2, #16]
  40110e:	f023 0304 	bic.w	r3, r3, #4
  401112:	6113      	str	r3, [r2, #16]
		cpu_irq_enable();
  401114:	2201      	movs	r2, #1
  401116:	4b7f      	ldr	r3, [pc, #508]	; (401314 <pmc_sleep+0x224>)
  401118:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb");
  40111a:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
  40111e:	b662      	cpsie	i
  __ASM volatile ("dsb");
  401120:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("wfi");
  401124:	bf30      	wfi
  401126:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40112a:	4604      	mov	r4, r0
#if defined(EFC1)
		uint32_t fmr1;
#endif
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG || SAMV71 || SAMV70 || SAMS70 || SAME70)
		(sleep_mode == SAM_PM_SMODE_WAIT_FAST) ?
				pmc_set_flash_in_wait_mode(PMC_FSMR_FLPM_FLASH_STANDBY) :
  40112c:	2803      	cmp	r0, #3
  40112e:	bf0c      	ite	eq
  401130:	2000      	moveq	r0, #0
				pmc_set_flash_in_wait_mode(PMC_FSMR_FLPM_FLASH_DEEP_POWERDOWN);
  401132:	f44f 1000 	movne.w	r0, #2097152	; 0x200000
  401136:	4b78      	ldr	r3, [pc, #480]	; (401318 <pmc_sleep+0x228>)
  401138:	4798      	blx	r3
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
  40113a:	b672      	cpsid	i
  __ASM volatile ("dmb");
  40113c:	f3bf 8f5f 	dmb	sy
#endif
		cpu_irq_disable();
  401140:	2200      	movs	r2, #0
  401142:	4b74      	ldr	r3, [pc, #464]	; (401314 <pmc_sleep+0x224>)
  401144:	701a      	strb	r2, [r3, #0]
		b_is_sleep_clock_used = true;
  401146:	2201      	movs	r2, #1
  401148:	4b74      	ldr	r3, [pc, #464]	; (40131c <pmc_sleep+0x22c>)
  40114a:	701a      	strb	r2, [r3, #0]
	uint32_t mor  = PMC->CKGR_MOR;
  40114c:	4b74      	ldr	r3, [pc, #464]	; (401320 <pmc_sleep+0x230>)
  40114e:	6a1f      	ldr	r7, [r3, #32]
	uint32_t mckr = PMC->PMC_MCKR;
  401150:	6b1d      	ldr	r5, [r3, #48]	; 0x30
	uint32_t fmr  = EFC0->EEFC_FMR;
  401152:	4a74      	ldr	r2, [pc, #464]	; (401324 <pmc_sleep+0x234>)
  401154:	f8d2 8000 	ldr.w	r8, [r2]
		*p_pll0_setting = PMC->CKGR_PLLAR;
  401158:	6a9e      	ldr	r6, [r3, #40]	; 0x28
	PMC->CKGR_MOR = CKGR_MOR_KEY_PASSWD | mor | CKGR_MOR_MOSCRCEN;
  40115a:	4a73      	ldr	r2, [pc, #460]	; (401328 <pmc_sleep+0x238>)
  40115c:	433a      	orrs	r2, r7
  40115e:	621a      	str	r2, [r3, #32]
	if ((mckr & PMC_MCKR_CSS_Msk) > PMC_MCKR_CSS_MAIN_CLK) {
  401160:	f005 0903 	and.w	r9, r5, #3
  401164:	f1b9 0f01 	cmp.w	r9, #1
  401168:	f240 8089 	bls.w	40127e <pmc_sleep+0x18e>
		mckr = (mckr & (~PMC_MCKR_CSS_Msk)) | PMC_MCKR_CSS_MAIN_CLK;
  40116c:	f025 0103 	bic.w	r1, r5, #3
  401170:	f041 0101 	orr.w	r1, r1, #1
		PMC->PMC_MCKR = mckr;
  401174:	6319      	str	r1, [r3, #48]	; 0x30
		while(!(PMC->PMC_SR & PMC_SR_MCKRDY));
  401176:	461a      	mov	r2, r3
  401178:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40117a:	f013 0f08 	tst.w	r3, #8
  40117e:	d0fb      	beq.n	401178 <pmc_sleep+0x88>
	if (mckr & PMC_MCKR_PRES_Msk) {
  401180:	f011 0f70 	tst.w	r1, #112	; 0x70
  401184:	d008      	beq.n	401198 <pmc_sleep+0xa8>
		mckr = (mckr & (~PMC_MCKR_PRES_Msk));
  401186:	f021 0170 	bic.w	r1, r1, #112	; 0x70
		PMC->PMC_MCKR = mckr;
  40118a:	4b65      	ldr	r3, [pc, #404]	; (401320 <pmc_sleep+0x230>)
  40118c:	6319      	str	r1, [r3, #48]	; 0x30
		while(!(PMC->PMC_SR & PMC_SR_MCKRDY));
  40118e:	461a      	mov	r2, r3
  401190:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401192:	f013 0f08 	tst.w	r3, #8
  401196:	d0fb      	beq.n	401190 <pmc_sleep+0xa0>
	pmc_disable_pllack();
  401198:	4b64      	ldr	r3, [pc, #400]	; (40132c <pmc_sleep+0x23c>)
  40119a:	4798      	blx	r3
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));
  40119c:	4a60      	ldr	r2, [pc, #384]	; (401320 <pmc_sleep+0x230>)
  40119e:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4011a0:	f413 3f00 	tst.w	r3, #131072	; 0x20000
  4011a4:	d0fb      	beq.n	40119e <pmc_sleep+0xae>
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCSEL) |
  4011a6:	4a5e      	ldr	r2, [pc, #376]	; (401320 <pmc_sleep+0x230>)
  4011a8:	6a11      	ldr	r1, [r2, #32]
  4011aa:	4b61      	ldr	r3, [pc, #388]	; (401330 <pmc_sleep+0x240>)
  4011ac:	400b      	ands	r3, r1
  4011ae:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  4011b2:	6213      	str	r3, [r2, #32]
	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS));
  4011b4:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4011b6:	f413 3f80 	tst.w	r3, #65536	; 0x10000
  4011ba:	d0fb      	beq.n	4011b4 <pmc_sleep+0xc4>
	EFC0->EEFC_FMR = fmr & (~EEFC_FMR_FWS_Msk);
  4011bc:	f428 6370 	bic.w	r3, r8, #3840	; 0xf00
  4011c0:	4a58      	ldr	r2, [pc, #352]	; (401324 <pmc_sleep+0x234>)
  4011c2:	6013      	str	r3, [r2, #0]
	if (disable_xtal) {
  4011c4:	2c04      	cmp	r4, #4
  4011c6:	d05c      	beq.n	401282 <pmc_sleep+0x192>
				&fmr1,
#endif
				(sleep_mode == SAM_PM_SMODE_WAIT));

		/* Enter wait mode */
		cpu_irq_enable();
  4011c8:	4c52      	ldr	r4, [pc, #328]	; (401314 <pmc_sleep+0x224>)
  4011ca:	2301      	movs	r3, #1
  4011cc:	7023      	strb	r3, [r4, #0]
  4011ce:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  4011d2:	b662      	cpsie	i

		pmc_enable_waitmode();
  4011d4:	4b57      	ldr	r3, [pc, #348]	; (401334 <pmc_sleep+0x244>)
  4011d6:	4798      	blx	r3
  __ASM volatile ("cpsid i" : : : "memory");
  4011d8:	b672      	cpsid	i
  4011da:	f3bf 8f5f 	dmb	sy

		cpu_irq_disable();
  4011de:	2300      	movs	r3, #0
  4011e0:	7023      	strb	r3, [r4, #0]
	if (CKGR_MOR_MOSCXTBY == (osc_setting & CKGR_MOR_MOSCXTBY)) {
  4011e2:	f017 0f02 	tst.w	r7, #2
  4011e6:	d055      	beq.n	401294 <pmc_sleep+0x1a4>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4011e8:	4a4d      	ldr	r2, [pc, #308]	; (401320 <pmc_sleep+0x230>)
  4011ea:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  4011ec:	4952      	ldr	r1, [pc, #328]	; (401338 <pmc_sleep+0x248>)
  4011ee:	4019      	ands	r1, r3
  4011f0:	4b52      	ldr	r3, [pc, #328]	; (40133c <pmc_sleep+0x24c>)
  4011f2:	430b      	orrs	r3, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4011f4:	6213      	str	r3, [r2, #32]
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  4011f6:	6a11      	ldr	r1, [r2, #32]
				| CKGR_MOR_KEY_PASSWD;
  4011f8:	4b51      	ldr	r3, [pc, #324]	; (401340 <pmc_sleep+0x250>)
  4011fa:	400b      	ands	r3, r1
  4011fc:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  401200:	6213      	str	r3, [r2, #32]
	if (pll0_setting & CKGR_PLLAR_MULA_Msk) {
  401202:	4b50      	ldr	r3, [pc, #320]	; (401344 <pmc_sleep+0x254>)
  401204:	4033      	ands	r3, r6
  401206:	2b00      	cmp	r3, #0
  401208:	d06e      	beq.n	4012e8 <pmc_sleep+0x1f8>
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | pll0_setting;
  40120a:	f046 5600 	orr.w	r6, r6, #536870912	; 0x20000000
  40120e:	4b44      	ldr	r3, [pc, #272]	; (401320 <pmc_sleep+0x230>)
  401210:	629e      	str	r6, [r3, #40]	; 0x28
		pll_sr |= PMC_SR_LOCKA;
  401212:	2102      	movs	r1, #2
	switch(mck_setting & PMC_MCKR_CSS_Msk) {
  401214:	f1b9 0f02 	cmp.w	r9, #2
  401218:	d104      	bne.n	401224 <pmc_sleep+0x134>
		while (!(PMC->PMC_SR & PMC_SR_LOCKA));
  40121a:	4a41      	ldr	r2, [pc, #260]	; (401320 <pmc_sleep+0x230>)
  40121c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40121e:	f013 0f02 	tst.w	r3, #2
  401222:	d0fb      	beq.n	40121c <pmc_sleep+0x12c>
	mckr = PMC->PMC_MCKR;
  401224:	4a3e      	ldr	r2, [pc, #248]	; (401320 <pmc_sleep+0x230>)
  401226:	6b13      	ldr	r3, [r2, #48]	; 0x30
	PMC->PMC_MCKR = (mckr & ~PMC_MCKR_PRES_Msk)
  401228:	f023 0370 	bic.w	r3, r3, #112	; 0x70
		| (mck_setting & PMC_MCKR_PRES_Msk);
  40122c:	f005 0070 	and.w	r0, r5, #112	; 0x70
  401230:	4303      	orrs	r3, r0
	PMC->PMC_MCKR = (mckr & ~PMC_MCKR_PRES_Msk)
  401232:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  401234:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401236:	f013 0f08 	tst.w	r3, #8
  40123a:	d0fb      	beq.n	401234 <pmc_sleep+0x144>
	EFC0->EEFC_FMR = fmr_setting;
  40123c:	4b39      	ldr	r3, [pc, #228]	; (401324 <pmc_sleep+0x234>)
  40123e:	f8c3 8000 	str.w	r8, [r3]
	PMC->PMC_MCKR = mck_setting;
  401242:	f5a3 63c0 	sub.w	r3, r3, #1536	; 0x600
  401246:	631d      	str	r5, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  401248:	461a      	mov	r2, r3
  40124a:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40124c:	f013 0f08 	tst.w	r3, #8
  401250:	d0fb      	beq.n	40124a <pmc_sleep+0x15a>
	while (!(PMC->PMC_SR & pll_sr));
  401252:	4a33      	ldr	r2, [pc, #204]	; (401320 <pmc_sleep+0x230>)
  401254:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401256:	420b      	tst	r3, r1
  401258:	d0fc      	beq.n	401254 <pmc_sleep+0x164>

#if (SAM4C || SAM4CM || SAM4CP)
		/* Restore the sub-system 1 */
		PMC->PMC_SCER = cpclk_backup | PMC_SCER_CPKEY_PASSWD;
#endif
		b_is_sleep_clock_used = false;
  40125a:	2200      	movs	r2, #0
  40125c:	4b2f      	ldr	r3, [pc, #188]	; (40131c <pmc_sleep+0x22c>)
  40125e:	701a      	strb	r2, [r3, #0]
		if (callback_clocks_restored) {
  401260:	4b39      	ldr	r3, [pc, #228]	; (401348 <pmc_sleep+0x258>)
  401262:	681b      	ldr	r3, [r3, #0]
  401264:	b11b      	cbz	r3, 40126e <pmc_sleep+0x17e>
			callback_clocks_restored();
  401266:	4798      	blx	r3
			callback_clocks_restored = NULL;
  401268:	2200      	movs	r2, #0
  40126a:	4b37      	ldr	r3, [pc, #220]	; (401348 <pmc_sleep+0x258>)
  40126c:	601a      	str	r2, [r3, #0]
		}
		cpu_irq_enable();
  40126e:	2201      	movs	r2, #1
  401270:	4b28      	ldr	r3, [pc, #160]	; (401314 <pmc_sleep+0x224>)
  401272:	701a      	strb	r2, [r3, #0]
  401274:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  401278:	b662      	cpsie	i
  40127a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	uint32_t mckr = PMC->PMC_MCKR;
  40127e:	4629      	mov	r1, r5
  401280:	e77e      	b.n	401180 <pmc_sleep+0x90>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  401282:	f5a2 62c0 	sub.w	r2, r2, #1536	; 0x600
  401286:	6a11      	ldr	r1, [r2, #32]
  401288:	4b30      	ldr	r3, [pc, #192]	; (40134c <pmc_sleep+0x25c>)
  40128a:	400b      	ands	r3, r1
  40128c:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  401290:	6213      	str	r3, [r2, #32]
  401292:	e799      	b.n	4011c8 <pmc_sleep+0xd8>
	} else if (CKGR_MOR_MOSCXTEN == (osc_setting & CKGR_MOR_MOSCXTEN)) {
  401294:	f017 0f01 	tst.w	r7, #1
  401298:	d0b3      	beq.n	401202 <pmc_sleep+0x112>
		if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCXTEN)) {
  40129a:	4b21      	ldr	r3, [pc, #132]	; (401320 <pmc_sleep+0x230>)
  40129c:	6a1b      	ldr	r3, [r3, #32]
  40129e:	f013 0f01 	tst.w	r3, #1
  4012a2:	d10b      	bne.n	4012bc <pmc_sleep+0x1cc>
			PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4012a4:	491e      	ldr	r1, [pc, #120]	; (401320 <pmc_sleep+0x230>)
  4012a6:	6a0b      	ldr	r3, [r1, #32]
					CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN;
  4012a8:	4a29      	ldr	r2, [pc, #164]	; (401350 <pmc_sleep+0x260>)
  4012aa:	401a      	ands	r2, r3
  4012ac:	4b29      	ldr	r3, [pc, #164]	; (401354 <pmc_sleep+0x264>)
  4012ae:	4313      	orrs	r3, r2
			PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4012b0:	620b      	str	r3, [r1, #32]
			while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  4012b2:	460a      	mov	r2, r1
  4012b4:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4012b6:	f013 0f01 	tst.w	r3, #1
  4012ba:	d0fb      	beq.n	4012b4 <pmc_sleep+0x1c4>
		if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
  4012bc:	4b18      	ldr	r3, [pc, #96]	; (401320 <pmc_sleep+0x230>)
  4012be:	6a1b      	ldr	r3, [r3, #32]
  4012c0:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  4012c4:	d108      	bne.n	4012d8 <pmc_sleep+0x1e8>
			PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  4012c6:	4a16      	ldr	r2, [pc, #88]	; (401320 <pmc_sleep+0x230>)
  4012c8:	6a11      	ldr	r1, [r2, #32]
  4012ca:	4b23      	ldr	r3, [pc, #140]	; (401358 <pmc_sleep+0x268>)
  4012cc:	430b      	orrs	r3, r1
  4012ce:	6213      	str	r3, [r2, #32]
			while (!(PMC->PMC_SR & PMC_SR_MOSCSELS));
  4012d0:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4012d2:	f413 3f80 	tst.w	r3, #65536	; 0x10000
  4012d6:	d0fb      	beq.n	4012d0 <pmc_sleep+0x1e0>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  4012d8:	4a11      	ldr	r2, [pc, #68]	; (401320 <pmc_sleep+0x230>)
  4012da:	6a11      	ldr	r1, [r2, #32]
					| CKGR_MOR_KEY_PASSWD;
  4012dc:	4b18      	ldr	r3, [pc, #96]	; (401340 <pmc_sleep+0x250>)
  4012de:	400b      	ands	r3, r1
  4012e0:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  4012e4:	6213      	str	r3, [r2, #32]
  4012e6:	e78c      	b.n	401202 <pmc_sleep+0x112>
	uint32_t pll_sr = 0;
  4012e8:	2100      	movs	r1, #0
  4012ea:	e793      	b.n	401214 <pmc_sleep+0x124>

		break;
	}
#if (!(SAMG51 || SAMG53 || SAMG54))
	case SAM_PM_SMODE_BACKUP:
		SCB->SCR |= SCR_SLEEPDEEP;
  4012ec:	4a08      	ldr	r2, [pc, #32]	; (401310 <pmc_sleep+0x220>)
  4012ee:	6913      	ldr	r3, [r2, #16]
  4012f0:	f043 0304 	orr.w	r3, r3, #4
  4012f4:	6113      	str	r3, [r2, #16]
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG55 || SAMV71 || SAMV70 || SAMS70 || SAME70)
		SUPC->SUPC_CR = SUPC_CR_KEY_PASSWD | SUPC_CR_VROFF_STOP_VREG;
  4012f6:	4a19      	ldr	r2, [pc, #100]	; (40135c <pmc_sleep+0x26c>)
  4012f8:	4b19      	ldr	r3, [pc, #100]	; (401360 <pmc_sleep+0x270>)
  4012fa:	601a      	str	r2, [r3, #0]
		cpu_irq_enable();
  4012fc:	2201      	movs	r2, #1
  4012fe:	4b05      	ldr	r3, [pc, #20]	; (401314 <pmc_sleep+0x224>)
  401300:	701a      	strb	r2, [r3, #0]
  401302:	f3bf 8f5f 	dmb	sy
  401306:	b662      	cpsie	i
  __ASM volatile ("wfi");
  401308:	bf30      	wfi
  40130a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40130e:	bf00      	nop
  401310:	e000ed00 	.word	0xe000ed00
  401314:	20400018 	.word	0x20400018
  401318:	004010a1 	.word	0x004010a1
  40131c:	20400c64 	.word	0x20400c64
  401320:	400e0600 	.word	0x400e0600
  401324:	400e0c00 	.word	0x400e0c00
  401328:	00370008 	.word	0x00370008
  40132c:	0040102d 	.word	0x0040102d
  401330:	fec8ffff 	.word	0xfec8ffff
  401334:	004010a5 	.word	0x004010a5
  401338:	fec8fffc 	.word	0xfec8fffc
  40133c:	01370002 	.word	0x01370002
  401340:	ffc8ff87 	.word	0xffc8ff87
  401344:	07ff0000 	.word	0x07ff0000
  401348:	20400c68 	.word	0x20400c68
  40134c:	ffc8fffe 	.word	0xffc8fffe
  401350:	ffc8fffc 	.word	0xffc8fffc
  401354:	00370001 	.word	0x00370001
  401358:	01370000 	.word	0x01370000
  40135c:	a5000004 	.word	0xa5000004
  401360:	400e1810 	.word	0x400e1810

00401364 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  401364:	e7fe      	b.n	401364 <Dummy_Handler>
	...

00401368 <Reset_Handler>:
{
  401368:	b500      	push	{lr}
  40136a:	b083      	sub	sp, #12
        if (pSrc != pDest) {
  40136c:	4b25      	ldr	r3, [pc, #148]	; (401404 <Reset_Handler+0x9c>)
  40136e:	4a26      	ldr	r2, [pc, #152]	; (401408 <Reset_Handler+0xa0>)
  401370:	429a      	cmp	r2, r3
  401372:	d010      	beq.n	401396 <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
  401374:	4b25      	ldr	r3, [pc, #148]	; (40140c <Reset_Handler+0xa4>)
  401376:	4a23      	ldr	r2, [pc, #140]	; (401404 <Reset_Handler+0x9c>)
  401378:	429a      	cmp	r2, r3
  40137a:	d20c      	bcs.n	401396 <Reset_Handler+0x2e>
  40137c:	3b01      	subs	r3, #1
  40137e:	1a9b      	subs	r3, r3, r2
  401380:	f023 0303 	bic.w	r3, r3, #3
  401384:	3304      	adds	r3, #4
  401386:	4413      	add	r3, r2
  401388:	491f      	ldr	r1, [pc, #124]	; (401408 <Reset_Handler+0xa0>)
                        *pDest++ = *pSrc++;
  40138a:	f851 0b04 	ldr.w	r0, [r1], #4
  40138e:	f842 0b04 	str.w	r0, [r2], #4
                for (; pDest < &_erelocate;) {
  401392:	429a      	cmp	r2, r3
  401394:	d1f9      	bne.n	40138a <Reset_Handler+0x22>
        for (pDest = &_szero; pDest < &_ezero;) {
  401396:	4b1e      	ldr	r3, [pc, #120]	; (401410 <Reset_Handler+0xa8>)
  401398:	4a1e      	ldr	r2, [pc, #120]	; (401414 <Reset_Handler+0xac>)
  40139a:	429a      	cmp	r2, r3
  40139c:	d20a      	bcs.n	4013b4 <Reset_Handler+0x4c>
  40139e:	3b01      	subs	r3, #1
  4013a0:	1a9b      	subs	r3, r3, r2
  4013a2:	f023 0303 	bic.w	r3, r3, #3
  4013a6:	3304      	adds	r3, #4
  4013a8:	4413      	add	r3, r2
                *pDest++ = 0;
  4013aa:	2100      	movs	r1, #0
  4013ac:	f842 1b04 	str.w	r1, [r2], #4
        for (pDest = &_szero; pDest < &_ezero;) {
  4013b0:	4293      	cmp	r3, r2
  4013b2:	d1fb      	bne.n	4013ac <Reset_Handler+0x44>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  4013b4:	4a18      	ldr	r2, [pc, #96]	; (401418 <Reset_Handler+0xb0>)
  4013b6:	4b19      	ldr	r3, [pc, #100]	; (40141c <Reset_Handler+0xb4>)
  4013b8:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  4013bc:	6093      	str	r3, [r2, #8]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  4013be:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
  4013c2:	fab3 f383 	clz	r3, r3
  4013c6:	095b      	lsrs	r3, r3, #5
  4013c8:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  4013ca:	b672      	cpsid	i
  __ASM volatile ("dmb");
  4013cc:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  4013d0:	2200      	movs	r2, #0
  4013d2:	4b13      	ldr	r3, [pc, #76]	; (401420 <Reset_Handler+0xb8>)
  4013d4:	701a      	strb	r2, [r3, #0]
	return flags;
  4013d6:	9901      	ldr	r1, [sp, #4]
 */
__always_inline static void fpu_enable(void)
{
	irqflags_t flags;
	flags = cpu_irq_save();
	REG_CPACR |=  (0xFu << 20);
  4013d8:	4a12      	ldr	r2, [pc, #72]	; (401424 <Reset_Handler+0xbc>)
  4013da:	6813      	ldr	r3, [r2, #0]
  4013dc:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  4013e0:	6013      	str	r3, [r2, #0]
  __ASM volatile ("dsb");
  4013e2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  4013e6:	f3bf 8f6f 	isb	sy
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
  4013ea:	b129      	cbz	r1, 4013f8 <Reset_Handler+0x90>
		cpu_irq_enable();
  4013ec:	2201      	movs	r2, #1
  4013ee:	4b0c      	ldr	r3, [pc, #48]	; (401420 <Reset_Handler+0xb8>)
  4013f0:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb");
  4013f2:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  4013f6:	b662      	cpsie	i
        __libc_init_array();
  4013f8:	4b0b      	ldr	r3, [pc, #44]	; (401428 <Reset_Handler+0xc0>)
  4013fa:	4798      	blx	r3
        main();
  4013fc:	4b0b      	ldr	r3, [pc, #44]	; (40142c <Reset_Handler+0xc4>)
  4013fe:	4798      	blx	r3
  401400:	e7fe      	b.n	401400 <Reset_Handler+0x98>
  401402:	bf00      	nop
  401404:	20400000 	.word	0x20400000
  401408:	00406fd4 	.word	0x00406fd4
  40140c:	204009d0 	.word	0x204009d0
  401410:	20400cd4 	.word	0x20400cd4
  401414:	204009d0 	.word	0x204009d0
  401418:	e000ed00 	.word	0xe000ed00
  40141c:	00400000 	.word	0x00400000
  401420:	20400018 	.word	0x20400018
  401424:	e000ed88 	.word	0xe000ed88
  401428:	00402569 	.word	0x00402569
  40142c:	00401851 	.word	0x00401851

00401430 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate( void )
{
  /* Determine clock frequency according to clock register values */
  switch (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk)
  401430:	4b3b      	ldr	r3, [pc, #236]	; (401520 <SystemCoreClockUpdate+0xf0>)
  401432:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401434:	f003 0303 	and.w	r3, r3, #3
  401438:	2b01      	cmp	r3, #1
  40143a:	d01d      	beq.n	401478 <SystemCoreClockUpdate+0x48>
  40143c:	b183      	cbz	r3, 401460 <SystemCoreClockUpdate+0x30>
  40143e:	2b02      	cmp	r3, #2
  401440:	d036      	beq.n	4014b0 <SystemCoreClockUpdate+0x80>

    default:
    break;
  }

  if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 )
  401442:	4b37      	ldr	r3, [pc, #220]	; (401520 <SystemCoreClockUpdate+0xf0>)
  401444:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401446:	f003 0370 	and.w	r3, r3, #112	; 0x70
  40144a:	2b70      	cmp	r3, #112	; 0x70
  40144c:	d05f      	beq.n	40150e <SystemCoreClockUpdate+0xde>
  {
    SystemCoreClock /= 3U;
  }
  else
  {
    SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  40144e:	4b34      	ldr	r3, [pc, #208]	; (401520 <SystemCoreClockUpdate+0xf0>)
  401450:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  401452:	4934      	ldr	r1, [pc, #208]	; (401524 <SystemCoreClockUpdate+0xf4>)
  401454:	f3c2 1202 	ubfx	r2, r2, #4, #3
  401458:	680b      	ldr	r3, [r1, #0]
  40145a:	40d3      	lsrs	r3, r2
  40145c:	600b      	str	r3, [r1, #0]
  40145e:	4770      	bx	lr
      if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL )
  401460:	4b31      	ldr	r3, [pc, #196]	; (401528 <SystemCoreClockUpdate+0xf8>)
  401462:	695b      	ldr	r3, [r3, #20]
  401464:	f013 0f80 	tst.w	r3, #128	; 0x80
        SystemCoreClock = CHIP_FREQ_XTAL_32K;
  401468:	bf14      	ite	ne
  40146a:	f44f 4200 	movne.w	r2, #32768	; 0x8000
        SystemCoreClock = CHIP_FREQ_SLCK_RC;
  40146e:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  401472:	4b2c      	ldr	r3, [pc, #176]	; (401524 <SystemCoreClockUpdate+0xf4>)
  401474:	601a      	str	r2, [r3, #0]
  401476:	e7e4      	b.n	401442 <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  401478:	4b29      	ldr	r3, [pc, #164]	; (401520 <SystemCoreClockUpdate+0xf0>)
  40147a:	6a1b      	ldr	r3, [r3, #32]
  40147c:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  401480:	d003      	beq.n	40148a <SystemCoreClockUpdate+0x5a>
        SystemCoreClock = CHIP_FREQ_XTAL_12M;
  401482:	4a2a      	ldr	r2, [pc, #168]	; (40152c <SystemCoreClockUpdate+0xfc>)
  401484:	4b27      	ldr	r3, [pc, #156]	; (401524 <SystemCoreClockUpdate+0xf4>)
  401486:	601a      	str	r2, [r3, #0]
  401488:	e7db      	b.n	401442 <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  40148a:	4a29      	ldr	r2, [pc, #164]	; (401530 <SystemCoreClockUpdate+0x100>)
  40148c:	4b25      	ldr	r3, [pc, #148]	; (401524 <SystemCoreClockUpdate+0xf4>)
  40148e:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  401490:	4b23      	ldr	r3, [pc, #140]	; (401520 <SystemCoreClockUpdate+0xf0>)
  401492:	6a1b      	ldr	r3, [r3, #32]
  401494:	f003 0370 	and.w	r3, r3, #112	; 0x70
  401498:	2b10      	cmp	r3, #16
  40149a:	d005      	beq.n	4014a8 <SystemCoreClockUpdate+0x78>
  40149c:	2b20      	cmp	r3, #32
  40149e:	d1d0      	bne.n	401442 <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 3U;
  4014a0:	4a22      	ldr	r2, [pc, #136]	; (40152c <SystemCoreClockUpdate+0xfc>)
  4014a2:	4b20      	ldr	r3, [pc, #128]	; (401524 <SystemCoreClockUpdate+0xf4>)
  4014a4:	601a      	str	r2, [r3, #0]
          break;
  4014a6:	e7cc      	b.n	401442 <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 2U;
  4014a8:	4a22      	ldr	r2, [pc, #136]	; (401534 <SystemCoreClockUpdate+0x104>)
  4014aa:	4b1e      	ldr	r3, [pc, #120]	; (401524 <SystemCoreClockUpdate+0xf4>)
  4014ac:	601a      	str	r2, [r3, #0]
          break;
  4014ae:	e7c8      	b.n	401442 <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  4014b0:	4b1b      	ldr	r3, [pc, #108]	; (401520 <SystemCoreClockUpdate+0xf0>)
  4014b2:	6a1b      	ldr	r3, [r3, #32]
  4014b4:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  4014b8:	d016      	beq.n	4014e8 <SystemCoreClockUpdate+0xb8>
        SystemCoreClock = CHIP_FREQ_XTAL_12M ;
  4014ba:	4a1c      	ldr	r2, [pc, #112]	; (40152c <SystemCoreClockUpdate+0xfc>)
  4014bc:	4b19      	ldr	r3, [pc, #100]	; (401524 <SystemCoreClockUpdate+0xf4>)
  4014be:	601a      	str	r2, [r3, #0]
      if ( (uint32_t) (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK )
  4014c0:	4b17      	ldr	r3, [pc, #92]	; (401520 <SystemCoreClockUpdate+0xf0>)
  4014c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4014c4:	f003 0303 	and.w	r3, r3, #3
  4014c8:	2b02      	cmp	r3, #2
  4014ca:	d1ba      	bne.n	401442 <SystemCoreClockUpdate+0x12>
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  4014cc:	4a14      	ldr	r2, [pc, #80]	; (401520 <SystemCoreClockUpdate+0xf0>)
  4014ce:	6a91      	ldr	r1, [r2, #40]	; 0x28
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  4014d0:	6a92      	ldr	r2, [r2, #40]	; 0x28
  4014d2:	4814      	ldr	r0, [pc, #80]	; (401524 <SystemCoreClockUpdate+0xf4>)
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  4014d4:	f3c1 410a 	ubfx	r1, r1, #16, #11
  4014d8:	6803      	ldr	r3, [r0, #0]
  4014da:	fb01 3303 	mla	r3, r1, r3, r3
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  4014de:	b2d2      	uxtb	r2, r2
  4014e0:	fbb3 f3f2 	udiv	r3, r3, r2
  4014e4:	6003      	str	r3, [r0, #0]
  4014e6:	e7ac      	b.n	401442 <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  4014e8:	4a11      	ldr	r2, [pc, #68]	; (401530 <SystemCoreClockUpdate+0x100>)
  4014ea:	4b0e      	ldr	r3, [pc, #56]	; (401524 <SystemCoreClockUpdate+0xf4>)
  4014ec:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  4014ee:	4b0c      	ldr	r3, [pc, #48]	; (401520 <SystemCoreClockUpdate+0xf0>)
  4014f0:	6a1b      	ldr	r3, [r3, #32]
  4014f2:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4014f6:	2b10      	cmp	r3, #16
  4014f8:	d005      	beq.n	401506 <SystemCoreClockUpdate+0xd6>
  4014fa:	2b20      	cmp	r3, #32
  4014fc:	d1e0      	bne.n	4014c0 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 3U;
  4014fe:	4a0b      	ldr	r2, [pc, #44]	; (40152c <SystemCoreClockUpdate+0xfc>)
  401500:	4b08      	ldr	r3, [pc, #32]	; (401524 <SystemCoreClockUpdate+0xf4>)
  401502:	601a      	str	r2, [r3, #0]
          break;
  401504:	e7dc      	b.n	4014c0 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 2U;
  401506:	4a0b      	ldr	r2, [pc, #44]	; (401534 <SystemCoreClockUpdate+0x104>)
  401508:	4b06      	ldr	r3, [pc, #24]	; (401524 <SystemCoreClockUpdate+0xf4>)
  40150a:	601a      	str	r2, [r3, #0]
          break;
  40150c:	e7d8      	b.n	4014c0 <SystemCoreClockUpdate+0x90>
    SystemCoreClock /= 3U;
  40150e:	4a05      	ldr	r2, [pc, #20]	; (401524 <SystemCoreClockUpdate+0xf4>)
  401510:	6813      	ldr	r3, [r2, #0]
  401512:	4909      	ldr	r1, [pc, #36]	; (401538 <SystemCoreClockUpdate+0x108>)
  401514:	fba1 1303 	umull	r1, r3, r1, r3
  401518:	085b      	lsrs	r3, r3, #1
  40151a:	6013      	str	r3, [r2, #0]
  40151c:	4770      	bx	lr
  40151e:	bf00      	nop
  401520:	400e0600 	.word	0x400e0600
  401524:	2040001c 	.word	0x2040001c
  401528:	400e1810 	.word	0x400e1810
  40152c:	00b71b00 	.word	0x00b71b00
  401530:	003d0900 	.word	0x003d0900
  401534:	007a1200 	.word	0x007a1200
  401538:	aaaaaaab 	.word	0xaaaaaaab

0040153c <system_init_flash>:
 * Initialize flash.
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
  if ( ul_clk < CHIP_FREQ_FWS_0 )
  40153c:	4b16      	ldr	r3, [pc, #88]	; (401598 <system_init_flash+0x5c>)
  40153e:	4298      	cmp	r0, r3
  401540:	d913      	bls.n	40156a <system_init_flash+0x2e>
  {
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  }
  else
  {
    if (ul_clk < CHIP_FREQ_FWS_1)
  401542:	4b16      	ldr	r3, [pc, #88]	; (40159c <system_init_flash+0x60>)
  401544:	4298      	cmp	r0, r3
  401546:	d915      	bls.n	401574 <system_init_flash+0x38>
    {
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
    }
    else
    {
      if (ul_clk < CHIP_FREQ_FWS_2)
  401548:	4b15      	ldr	r3, [pc, #84]	; (4015a0 <system_init_flash+0x64>)
  40154a:	4298      	cmp	r0, r3
  40154c:	d916      	bls.n	40157c <system_init_flash+0x40>
      {
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
      }
      else
      {
        if ( ul_clk < CHIP_FREQ_FWS_3 )
  40154e:	4b15      	ldr	r3, [pc, #84]	; (4015a4 <system_init_flash+0x68>)
  401550:	4298      	cmp	r0, r3
  401552:	d917      	bls.n	401584 <system_init_flash+0x48>
        {
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
        }
        else
        {
          if ( ul_clk < CHIP_FREQ_FWS_4 )
  401554:	4b14      	ldr	r3, [pc, #80]	; (4015a8 <system_init_flash+0x6c>)
  401556:	4298      	cmp	r0, r3
  401558:	d918      	bls.n	40158c <system_init_flash+0x50>
          {
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
          }
          else
          {
            if ( ul_clk < CHIP_FREQ_FWS_5 )
  40155a:	4b14      	ldr	r3, [pc, #80]	; (4015ac <system_init_flash+0x70>)
  40155c:	4298      	cmp	r0, r3
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  40155e:	bf94      	ite	ls
  401560:	4a13      	ldrls	r2, [pc, #76]	; (4015b0 <system_init_flash+0x74>)
            }
            else
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(6)|EEFC_FMR_CLOE;
  401562:	4a14      	ldrhi	r2, [pc, #80]	; (4015b4 <system_init_flash+0x78>)
  401564:	4b14      	ldr	r3, [pc, #80]	; (4015b8 <system_init_flash+0x7c>)
  401566:	601a      	str	r2, [r3, #0]
  401568:	4770      	bx	lr
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  40156a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  40156e:	4b12      	ldr	r3, [pc, #72]	; (4015b8 <system_init_flash+0x7c>)
  401570:	601a      	str	r2, [r3, #0]
  401572:	4770      	bx	lr
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  401574:	4a11      	ldr	r2, [pc, #68]	; (4015bc <system_init_flash+0x80>)
  401576:	4b10      	ldr	r3, [pc, #64]	; (4015b8 <system_init_flash+0x7c>)
  401578:	601a      	str	r2, [r3, #0]
  40157a:	4770      	bx	lr
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  40157c:	4a10      	ldr	r2, [pc, #64]	; (4015c0 <system_init_flash+0x84>)
  40157e:	4b0e      	ldr	r3, [pc, #56]	; (4015b8 <system_init_flash+0x7c>)
  401580:	601a      	str	r2, [r3, #0]
  401582:	4770      	bx	lr
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  401584:	4a0f      	ldr	r2, [pc, #60]	; (4015c4 <system_init_flash+0x88>)
  401586:	4b0c      	ldr	r3, [pc, #48]	; (4015b8 <system_init_flash+0x7c>)
  401588:	601a      	str	r2, [r3, #0]
  40158a:	4770      	bx	lr
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  40158c:	f04f 2204 	mov.w	r2, #67109888	; 0x4000400
  401590:	4b09      	ldr	r3, [pc, #36]	; (4015b8 <system_init_flash+0x7c>)
  401592:	601a      	str	r2, [r3, #0]
  401594:	4770      	bx	lr
  401596:	bf00      	nop
  401598:	015ef3bf 	.word	0x015ef3bf
  40159c:	02bde77f 	.word	0x02bde77f
  4015a0:	041cdb3f 	.word	0x041cdb3f
  4015a4:	057bceff 	.word	0x057bceff
  4015a8:	06dac2bf 	.word	0x06dac2bf
  4015ac:	0839b67f 	.word	0x0839b67f
  4015b0:	04000500 	.word	0x04000500
  4015b4:	04000600 	.word	0x04000600
  4015b8:	400e0c00 	.word	0x400e0c00
  4015bc:	04000100 	.word	0x04000100
  4015c0:	04000200 	.word	0x04000200
  4015c4:	04000300 	.word	0x04000300

004015c8 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  4015c8:	4b0a      	ldr	r3, [pc, #40]	; (4015f4 <_sbrk+0x2c>)
  4015ca:	681b      	ldr	r3, [r3, #0]
  4015cc:	b153      	cbz	r3, 4015e4 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  4015ce:	4b09      	ldr	r3, [pc, #36]	; (4015f4 <_sbrk+0x2c>)
  4015d0:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  4015d2:	181a      	adds	r2, r3, r0
  4015d4:	4908      	ldr	r1, [pc, #32]	; (4015f8 <_sbrk+0x30>)
  4015d6:	4291      	cmp	r1, r2
  4015d8:	db08      	blt.n	4015ec <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  4015da:	4610      	mov	r0, r2
  4015dc:	4a05      	ldr	r2, [pc, #20]	; (4015f4 <_sbrk+0x2c>)
  4015de:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  4015e0:	4618      	mov	r0, r3
  4015e2:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  4015e4:	4a05      	ldr	r2, [pc, #20]	; (4015fc <_sbrk+0x34>)
  4015e6:	4b03      	ldr	r3, [pc, #12]	; (4015f4 <_sbrk+0x2c>)
  4015e8:	601a      	str	r2, [r3, #0]
  4015ea:	e7f0      	b.n	4015ce <_sbrk+0x6>
		return (caddr_t) -1;	
  4015ec:	f04f 30ff 	mov.w	r0, #4294967295
}
  4015f0:	4770      	bx	lr
  4015f2:	bf00      	nop
  4015f4:	20400c6c 	.word	0x20400c6c
  4015f8:	2045fffc 	.word	0x2045fffc
  4015fc:	20402ed8 	.word	0x20402ed8

00401600 <but1_callback>:
int led_freq;

void but1_callback(void)
{
	//pisca_led(5, 200);
	led_freq++;
  401600:	4a03      	ldr	r2, [pc, #12]	; (401610 <but1_callback+0x10>)
  401602:	6813      	ldr	r3, [r2, #0]
  401604:	3301      	adds	r3, #1
  401606:	6013      	str	r3, [r2, #0]
	but_flag1 = 1;
  401608:	2201      	movs	r2, #1
  40160a:	4b02      	ldr	r3, [pc, #8]	; (401614 <but1_callback+0x14>)
  40160c:	701a      	strb	r2, [r3, #0]
  40160e:	4770      	bx	lr
  401610:	20400ca8 	.word	0x20400ca8
  401614:	20400ca6 	.word	0x20400ca6

00401618 <but2_callback>:
}
void but2_callback(void)
{
	but_flag2 = 1;
  401618:	2201      	movs	r2, #1
  40161a:	4b01      	ldr	r3, [pc, #4]	; (401620 <but2_callback+0x8>)
  40161c:	701a      	strb	r2, [r3, #0]
  40161e:	4770      	bx	lr
  401620:	20400ca5 	.word	0x20400ca5

00401624 <but3_callback>:
}
void but3_callback(void)
{
	led_freq--;
  401624:	4a03      	ldr	r2, [pc, #12]	; (401634 <but3_callback+0x10>)
  401626:	6813      	ldr	r3, [r2, #0]
  401628:	3b01      	subs	r3, #1
  40162a:	6013      	str	r3, [r2, #0]
	but_flag3 = 1;
  40162c:	2201      	movs	r2, #1
  40162e:	4b02      	ldr	r3, [pc, #8]	; (401638 <but3_callback+0x14>)
  401630:	701a      	strb	r2, [r3, #0]
  401632:	4770      	bx	lr
  401634:	20400ca8 	.word	0x20400ca8
  401638:	20400ca4 	.word	0x20400ca4

0040163c <pisca_led>:
}

void pisca_led(int n, int t){
  40163c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401640:	b083      	sub	sp, #12
	for (int i=0;i<n;i++){
  401642:	f1b0 0900 	subs.w	r9, r0, #0
  401646:	dd4e      	ble.n	4016e6 <pisca_led+0xaa>
  401648:	468b      	mov	fp, r1
  40164a:	2400      	movs	r4, #0
		pio_clear(LED2_PIO, LED2_PIO_IDX_MASK);
  40164c:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 401718 <pisca_led+0xdc>
  401650:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 40171c <pisca_led+0xe0>
		delay_s(1/(2.0*t));
  401654:	4d25      	ldr	r5, [pc, #148]	; (4016ec <pisca_led+0xb0>)
  401656:	e00c      	b.n	401672 <pisca_led+0x36>
  401658:	2033      	movs	r0, #51	; 0x33
  40165a:	4e25      	ldr	r6, [pc, #148]	; (4016f0 <pisca_led+0xb4>)
  40165c:	47b0      	blx	r6
		pio_set(LED2_PIO, LED2_PIO_IDX_MASK);
  40165e:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  401662:	4650      	mov	r0, sl
  401664:	4b23      	ldr	r3, [pc, #140]	; (4016f4 <pisca_led+0xb8>)
  401666:	4798      	blx	r3
		delay_s(1/(2.0*t));
  401668:	2033      	movs	r0, #51	; 0x33
  40166a:	47b0      	blx	r6
	for (int i=0;i<n;i++){
  40166c:	3401      	adds	r4, #1
  40166e:	45a1      	cmp	r9, r4
  401670:	d039      	beq.n	4016e6 <pisca_led+0xaa>
		pio_clear(LED2_PIO, LED2_PIO_IDX_MASK);
  401672:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  401676:	4650      	mov	r0, sl
  401678:	47c0      	blx	r8
		delay_s(1/(2.0*t));
  40167a:	4658      	mov	r0, fp
  40167c:	4b1e      	ldr	r3, [pc, #120]	; (4016f8 <pisca_led+0xbc>)
  40167e:	4798      	blx	r3
  401680:	4602      	mov	r2, r0
  401682:	460b      	mov	r3, r1
  401684:	4e1d      	ldr	r6, [pc, #116]	; (4016fc <pisca_led+0xc0>)
  401686:	47b0      	blx	r6
  401688:	e9cd 0100 	strd	r0, r1, [sp]
  40168c:	4602      	mov	r2, r0
  40168e:	460b      	mov	r3, r1
  401690:	2000      	movs	r0, #0
  401692:	491b      	ldr	r1, [pc, #108]	; (401700 <pisca_led+0xc4>)
  401694:	4e1b      	ldr	r6, [pc, #108]	; (401704 <pisca_led+0xc8>)
  401696:	47b0      	blx	r6
  401698:	2200      	movs	r2, #0
  40169a:	2300      	movs	r3, #0
  40169c:	4e1a      	ldr	r6, [pc, #104]	; (401708 <pisca_led+0xcc>)
  40169e:	47b0      	blx	r6
  4016a0:	2800      	cmp	r0, #0
  4016a2:	d1d9      	bne.n	401658 <pisca_led+0x1c>
  4016a4:	e9dd 2300 	ldrd	r2, r3, [sp]
  4016a8:	2000      	movs	r0, #0
  4016aa:	4918      	ldr	r1, [pc, #96]	; (40170c <pisca_led+0xd0>)
  4016ac:	4e15      	ldr	r6, [pc, #84]	; (401704 <pisca_led+0xc8>)
  4016ae:	47b0      	blx	r6
  4016b0:	4b17      	ldr	r3, [pc, #92]	; (401710 <pisca_led+0xd4>)
  4016b2:	4798      	blx	r3
  4016b4:	fba0 6705 	umull	r6, r7, r0, r5
  4016b8:	fb05 7701 	mla	r7, r5, r1, r7
  4016bc:	f241 722c 	movw	r2, #5932	; 0x172c
  4016c0:	2300      	movs	r3, #0
  4016c2:	f241 702b 	movw	r0, #5931	; 0x172b
  4016c6:	2100      	movs	r1, #0
  4016c8:	1980      	adds	r0, r0, r6
  4016ca:	4179      	adcs	r1, r7
  4016cc:	4e11      	ldr	r6, [pc, #68]	; (401714 <pisca_led+0xd8>)
  4016ce:	47b0      	blx	r6
  4016d0:	4607      	mov	r7, r0
  4016d2:	4e07      	ldr	r6, [pc, #28]	; (4016f0 <pisca_led+0xb4>)
  4016d4:	47b0      	blx	r6
		pio_set(LED2_PIO, LED2_PIO_IDX_MASK);
  4016d6:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  4016da:	4650      	mov	r0, sl
  4016dc:	4b05      	ldr	r3, [pc, #20]	; (4016f4 <pisca_led+0xb8>)
  4016de:	4798      	blx	r3
		delay_s(1/(2.0*t));
  4016e0:	4638      	mov	r0, r7
  4016e2:	47b0      	blx	r6
  4016e4:	e7c2      	b.n	40166c <pisca_led+0x30>
	}
}
  4016e6:	b003      	add	sp, #12
  4016e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4016ec:	11e1a300 	.word	0x11e1a300
  4016f0:	20400001 	.word	0x20400001
  4016f4:	00400c41 	.word	0x00400c41
  4016f8:	00401bd1 	.word	0x00401bd1
  4016fc:	00401939 	.word	0x00401939
  401700:	3ff00000 	.word	0x3ff00000
  401704:	00401ef1 	.word	0x00401ef1
  401708:	0040216d 	.word	0x0040216d
  40170c:	408f4000 	.word	0x408f4000
  401710:	00402201 	.word	0x00402201
  401714:	004021d1 	.word	0x004021d1
  401718:	400e1200 	.word	0x400e1200
  40171c:	00400c45 	.word	0x00400c45

00401720 <init>:

void init(void){
  401720:	b5f0      	push	{r4, r5, r6, r7, lr}
  401722:	b083      	sub	sp, #12
	sysclk_init();
  401724:	4b3c      	ldr	r3, [pc, #240]	; (401818 <init+0xf8>)
  401726:	4798      	blx	r3
	
	WDT->WDT_MR=WDT_MR_WDDIS;
  401728:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  40172c:	4b3b      	ldr	r3, [pc, #236]	; (40181c <init+0xfc>)
  40172e:	605a      	str	r2, [r3, #4]
	// Ativa o PIO na qual o LED foi conectado
	// para que possamos controlar o LED.
	pmc_enable_periph_clk(LED1_PIO_ID);
  401730:	200a      	movs	r0, #10
  401732:	4d3b      	ldr	r5, [pc, #236]	; (401820 <init+0x100>)
  401734:	47a8      	blx	r5
	pmc_enable_periph_clk(LED2_PIO_ID);
  401736:	200c      	movs	r0, #12
  401738:	47a8      	blx	r5
	pmc_enable_periph_clk(LED3_PIO_ID);	
  40173a:	200b      	movs	r0, #11
  40173c:	47a8      	blx	r5
	
	pio_configure(LED1_PIO, PIO_OUTPUT_0, LED1_PIO_IDX_MASK, PIO_DEFAULT);
  40173e:	4e39      	ldr	r6, [pc, #228]	; (401824 <init+0x104>)
  401740:	2300      	movs	r3, #0
  401742:	2201      	movs	r2, #1
  401744:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
  401748:	4630      	mov	r0, r6
  40174a:	4c37      	ldr	r4, [pc, #220]	; (401828 <init+0x108>)
  40174c:	47a0      	blx	r4
	pio_configure(LED2_PIO, PIO_OUTPUT_0, LED2_PIO_IDX_MASK, PIO_DEFAULT);
  40174e:	4f37      	ldr	r7, [pc, #220]	; (40182c <init+0x10c>)
  401750:	2300      	movs	r3, #0
  401752:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
  401756:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
  40175a:	4638      	mov	r0, r7
  40175c:	47a0      	blx	r4
	pio_configure(LED3_PIO, PIO_OUTPUT_0, LED3_PIO_IDX_MASK, PIO_DEFAULT);
  40175e:	2300      	movs	r3, #0
  401760:	2208      	movs	r2, #8
  401762:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
  401766:	4832      	ldr	r0, [pc, #200]	; (401830 <init+0x110>)
  401768:	47a0      	blx	r4
	
	// Inicializa PIO do botao
	pmc_enable_periph_clk(BUT1_PIO_ID);
  40176a:	2010      	movs	r0, #16
  40176c:	47a8      	blx	r5
	pmc_enable_periph_clk(BUT2_PIO_ID);
  40176e:	200c      	movs	r0, #12
  401770:	47a8      	blx	r5
	pmc_enable_periph_clk(BUT3_PIO_ID);
  401772:	200a      	movs	r0, #10
  401774:	47a8      	blx	r5
	
	pio_configure(BUT1_PIO, PIO_INPUT, BUT1_PIO_IDX_MASK, PIO_PULLUP);
  401776:	4d2f      	ldr	r5, [pc, #188]	; (401834 <init+0x114>)
  401778:	2301      	movs	r3, #1
  40177a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  40177e:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  401782:	4628      	mov	r0, r5
  401784:	47a0      	blx	r4
	pio_configure(BUT2_PIO, PIO_INPUT, BUT2_PIO_IDX_MASK, PIO_PULLUP);
  401786:	2301      	movs	r3, #1
  401788:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
  40178c:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  401790:	4638      	mov	r0, r7
  401792:	47a0      	blx	r4
	pio_configure(BUT3_PIO, PIO_INPUT, BUT3_PIO_IDX_MASK, PIO_PULLUP);
  401794:	2301      	movs	r3, #1
  401796:	f44f 2200 	mov.w	r2, #524288	; 0x80000
  40179a:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  40179e:	4630      	mov	r0, r6
  4017a0:	47a0      	blx	r4
	
	pio_handler_set(BUT1_PIO,
  4017a2:	4b25      	ldr	r3, [pc, #148]	; (401838 <init+0x118>)
  4017a4:	9300      	str	r3, [sp, #0]
  4017a6:	2350      	movs	r3, #80	; 0x50
  4017a8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  4017ac:	2110      	movs	r1, #16
  4017ae:	4628      	mov	r0, r5
  4017b0:	4c22      	ldr	r4, [pc, #136]	; (40183c <init+0x11c>)
  4017b2:	47a0      	blx	r4
		BUT1_PIO_ID,
		BUT1_PIO_IDX_MASK,
		PIO_IT_FALL_EDGE,
		but1_callback);
	
	pio_handler_set(BUT2_PIO,
  4017b4:	4b22      	ldr	r3, [pc, #136]	; (401840 <init+0x120>)
  4017b6:	9300      	str	r3, [sp, #0]
  4017b8:	2350      	movs	r3, #80	; 0x50
  4017ba:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
  4017be:	210c      	movs	r1, #12
  4017c0:	4638      	mov	r0, r7
  4017c2:	47a0      	blx	r4
		BUT2_PIO_ID,
		BUT2_PIO_IDX_MASK,
		PIO_IT_FALL_EDGE,
		but2_callback);
	
	pio_handler_set(BUT3_PIO,
  4017c4:	4b1f      	ldr	r3, [pc, #124]	; (401844 <init+0x124>)
  4017c6:	9300      	str	r3, [sp, #0]
  4017c8:	2350      	movs	r3, #80	; 0x50
  4017ca:	f44f 2200 	mov.w	r2, #524288	; 0x80000
  4017ce:	210a      	movs	r1, #10
  4017d0:	4630      	mov	r0, r6
  4017d2:	47a0      	blx	r4
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  4017d4:	4b1c      	ldr	r3, [pc, #112]	; (401848 <init+0x128>)
  4017d6:	f44f 3280 	mov.w	r2, #65536	; 0x10000
  4017da:	601a      	str	r2, [r3, #0]
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  4017dc:	2280      	movs	r2, #128	; 0x80
  4017de:	f883 2310 	strb.w	r2, [r3, #784]	; 0x310
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  4017e2:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  4017e6:	601a      	str	r2, [r3, #0]
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  4017e8:	22c0      	movs	r2, #192	; 0xc0
  4017ea:	f883 230c 	strb.w	r2, [r3, #780]	; 0x30c
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  4017ee:	f44f 6280 	mov.w	r2, #1024	; 0x400
  4017f2:	601a      	str	r2, [r3, #0]
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  4017f4:	22a0      	movs	r2, #160	; 0xa0
  4017f6:	f883 230a 	strb.w	r2, [r3, #778]	; 0x30a
	NVIC_SetPriority(BUT2_PIO_ID, 6);
	
	NVIC_EnableIRQ(BUT3_PIO_ID);
	NVIC_SetPriority(BUT3_PIO_ID, 5); 
	
	pio_enable_interrupt(BUT1_PIO, BUT1_PIO_IDX_MASK);
  4017fa:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4017fe:	4628      	mov	r0, r5
  401800:	4c12      	ldr	r4, [pc, #72]	; (40184c <init+0x12c>)
  401802:	47a0      	blx	r4
	pio_enable_interrupt(BUT2_PIO, BUT2_PIO_IDX_MASK);
  401804:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  401808:	4638      	mov	r0, r7
  40180a:	47a0      	blx	r4
	pio_enable_interrupt(BUT3_PIO, BUT3_PIO_IDX_MASK);
  40180c:	f44f 2100 	mov.w	r1, #524288	; 0x80000
  401810:	4630      	mov	r0, r6
  401812:	47a0      	blx	r4
}
  401814:	b003      	add	sp, #12
  401816:	bdf0      	pop	{r4, r5, r6, r7, pc}
  401818:	00400a91 	.word	0x00400a91
  40181c:	400e1850 	.word	0x400e1850
  401820:	0040104d 	.word	0x0040104d
  401824:	400e0e00 	.word	0x400e0e00
  401828:	00400d39 	.word	0x00400d39
  40182c:	400e1200 	.word	0x400e1200
  401830:	400e1000 	.word	0x400e1000
  401834:	400e1400 	.word	0x400e1400
  401838:	00401601 	.word	0x00401601
  40183c:	00400e59 	.word	0x00400e59
  401840:	00401619 	.word	0x00401619
  401844:	00401625 	.word	0x00401625
  401848:	e000e100 	.word	0xe000e100
  40184c:	00400dfb 	.word	0x00400dfb

00401850 <main>:

int main (void)
{
  401850:	b580      	push	{r7, lr}
  401852:	b084      	sub	sp, #16
	/* Insert system clock initialization code here (sysclk_init()). */
	
	board_init();
  401854:	4b24      	ldr	r3, [pc, #144]	; (4018e8 <main+0x98>)
  401856:	4798      	blx	r3
	sysclk_init();
  401858:	4b24      	ldr	r3, [pc, #144]	; (4018ec <main+0x9c>)
  40185a:	4798      	blx	r3
	init();
  40185c:	4b24      	ldr	r3, [pc, #144]	; (4018f0 <main+0xa0>)
  40185e:	4798      	blx	r3
	char buffer[8];
	led_freq = 5;
  401860:	2205      	movs	r2, #5
  401862:	4b24      	ldr	r3, [pc, #144]	; (4018f4 <main+0xa4>)
  401864:	601a      	str	r2, [r3, #0]

	delay_init();

	gfx_mono_ssd1306_init();
  401866:	4b24      	ldr	r3, [pc, #144]	; (4018f8 <main+0xa8>)
  401868:	4798      	blx	r3
	gfx_mono_draw_filled_circle(20, 16, 16, GFX_PIXEL_SET, GFX_WHOLE);
  40186a:	23ff      	movs	r3, #255	; 0xff
  40186c:	9300      	str	r3, [sp, #0]
  40186e:	2301      	movs	r3, #1
  401870:	2210      	movs	r2, #16
  401872:	4611      	mov	r1, r2
  401874:	2014      	movs	r0, #20
  401876:	4c21      	ldr	r4, [pc, #132]	; (4018fc <main+0xac>)
  401878:	47a0      	blx	r4
	gfx_mono_draw_string("world", 50,16, &sysfont);
  40187a:	4b21      	ldr	r3, [pc, #132]	; (401900 <main+0xb0>)
  40187c:	2210      	movs	r2, #16
  40187e:	2132      	movs	r1, #50	; 0x32
  401880:	4820      	ldr	r0, [pc, #128]	; (401904 <main+0xb4>)
  401882:	4c21      	ldr	r4, [pc, #132]	; (401908 <main+0xb8>)
  401884:	47a0      	blx	r4


  /* Insert application code here, after the board has been initialized. */
	while(1) {
		pmc_sleep(SAM_PM_SMODE_SLEEP_WFI);
  401886:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 401928 <main+0xd8>
		if(but_flag1){
  40188a:	4e20      	ldr	r6, [pc, #128]	; (40190c <main+0xbc>)
			but_flag1 = 0;
		}
		if(but_flag2){
			pisca_led(5, led_freq);
  40188c:	4f19      	ldr	r7, [pc, #100]	; (4018f4 <main+0xa4>)
  40188e:	e018      	b.n	4018c2 <main+0x72>
  401890:	6839      	ldr	r1, [r7, #0]
  401892:	2005      	movs	r0, #5
  401894:	4b1e      	ldr	r3, [pc, #120]	; (401910 <main+0xc0>)
  401896:	4798      	blx	r3
			but_flag2 = 0;
  401898:	2200      	movs	r2, #0
  40189a:	4b1e      	ldr	r3, [pc, #120]	; (401914 <main+0xc4>)
  40189c:	701a      	strb	r2, [r3, #0]
  40189e:	e01a      	b.n	4018d6 <main+0x86>
		}
		if(but_flag3){
			but_flag3 = 0;
		}
		gfx_mono_draw_string("      ", 50,16, &sysfont);
  4018a0:	4d17      	ldr	r5, [pc, #92]	; (401900 <main+0xb0>)
  4018a2:	462b      	mov	r3, r5
  4018a4:	2210      	movs	r2, #16
  4018a6:	2132      	movs	r1, #50	; 0x32
  4018a8:	481b      	ldr	r0, [pc, #108]	; (401918 <main+0xc8>)
  4018aa:	4c17      	ldr	r4, [pc, #92]	; (401908 <main+0xb8>)
  4018ac:	47a0      	blx	r4
		sprintf(buffer,"%d",led_freq);
  4018ae:	683a      	ldr	r2, [r7, #0]
  4018b0:	491a      	ldr	r1, [pc, #104]	; (40191c <main+0xcc>)
  4018b2:	a802      	add	r0, sp, #8
  4018b4:	4b1a      	ldr	r3, [pc, #104]	; (401920 <main+0xd0>)
  4018b6:	4798      	blx	r3
		gfx_mono_draw_string(buffer, 50,16, &sysfont);
  4018b8:	462b      	mov	r3, r5
  4018ba:	2210      	movs	r2, #16
  4018bc:	2132      	movs	r1, #50	; 0x32
  4018be:	a802      	add	r0, sp, #8
  4018c0:	47a0      	blx	r4
		pmc_sleep(SAM_PM_SMODE_SLEEP_WFI);
  4018c2:	2002      	movs	r0, #2
  4018c4:	47c0      	blx	r8
		if(but_flag1){
  4018c6:	7833      	ldrb	r3, [r6, #0]
  4018c8:	b10b      	cbz	r3, 4018ce <main+0x7e>
			but_flag1 = 0;
  4018ca:	2300      	movs	r3, #0
  4018cc:	7033      	strb	r3, [r6, #0]
		if(but_flag2){
  4018ce:	4b11      	ldr	r3, [pc, #68]	; (401914 <main+0xc4>)
  4018d0:	781b      	ldrb	r3, [r3, #0]
  4018d2:	2b00      	cmp	r3, #0
  4018d4:	d1dc      	bne.n	401890 <main+0x40>
		if(but_flag3){
  4018d6:	4b13      	ldr	r3, [pc, #76]	; (401924 <main+0xd4>)
  4018d8:	781b      	ldrb	r3, [r3, #0]
  4018da:	2b00      	cmp	r3, #0
  4018dc:	d0e0      	beq.n	4018a0 <main+0x50>
			but_flag3 = 0;
  4018de:	2200      	movs	r2, #0
  4018e0:	4b10      	ldr	r3, [pc, #64]	; (401924 <main+0xd4>)
  4018e2:	701a      	strb	r2, [r3, #0]
  4018e4:	e7dc      	b.n	4018a0 <main+0x50>
  4018e6:	bf00      	nop
  4018e8:	00400b01 	.word	0x00400b01
  4018ec:	00400a91 	.word	0x00400a91
  4018f0:	00401721 	.word	0x00401721
  4018f4:	20400ca8 	.word	0x20400ca8
  4018f8:	0040072d 	.word	0x0040072d
  4018fc:	004004cd 	.word	0x004004cd
  401900:	2040000c 	.word	0x2040000c
  401904:	00406d08 	.word	0x00406d08
  401908:	00400695 	.word	0x00400695
  40190c:	20400ca6 	.word	0x20400ca6
  401910:	0040163d 	.word	0x0040163d
  401914:	20400ca5 	.word	0x20400ca5
  401918:	00406d10 	.word	0x00406d10
  40191c:	00406d18 	.word	0x00406d18
  401920:	00402655 	.word	0x00402655
  401924:	20400ca4 	.word	0x20400ca4
  401928:	004010f1 	.word	0x004010f1

0040192c <__aeabi_drsub>:
  40192c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  401930:	e002      	b.n	401938 <__adddf3>
  401932:	bf00      	nop

00401934 <__aeabi_dsub>:
  401934:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00401938 <__adddf3>:
  401938:	b530      	push	{r4, r5, lr}
  40193a:	ea4f 0441 	mov.w	r4, r1, lsl #1
  40193e:	ea4f 0543 	mov.w	r5, r3, lsl #1
  401942:	ea94 0f05 	teq	r4, r5
  401946:	bf08      	it	eq
  401948:	ea90 0f02 	teqeq	r0, r2
  40194c:	bf1f      	itttt	ne
  40194e:	ea54 0c00 	orrsne.w	ip, r4, r0
  401952:	ea55 0c02 	orrsne.w	ip, r5, r2
  401956:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  40195a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  40195e:	f000 80e2 	beq.w	401b26 <__adddf3+0x1ee>
  401962:	ea4f 5454 	mov.w	r4, r4, lsr #21
  401966:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  40196a:	bfb8      	it	lt
  40196c:	426d      	neglt	r5, r5
  40196e:	dd0c      	ble.n	40198a <__adddf3+0x52>
  401970:	442c      	add	r4, r5
  401972:	ea80 0202 	eor.w	r2, r0, r2
  401976:	ea81 0303 	eor.w	r3, r1, r3
  40197a:	ea82 0000 	eor.w	r0, r2, r0
  40197e:	ea83 0101 	eor.w	r1, r3, r1
  401982:	ea80 0202 	eor.w	r2, r0, r2
  401986:	ea81 0303 	eor.w	r3, r1, r3
  40198a:	2d36      	cmp	r5, #54	; 0x36
  40198c:	bf88      	it	hi
  40198e:	bd30      	pophi	{r4, r5, pc}
  401990:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  401994:	ea4f 3101 	mov.w	r1, r1, lsl #12
  401998:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  40199c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  4019a0:	d002      	beq.n	4019a8 <__adddf3+0x70>
  4019a2:	4240      	negs	r0, r0
  4019a4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  4019a8:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  4019ac:	ea4f 3303 	mov.w	r3, r3, lsl #12
  4019b0:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  4019b4:	d002      	beq.n	4019bc <__adddf3+0x84>
  4019b6:	4252      	negs	r2, r2
  4019b8:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  4019bc:	ea94 0f05 	teq	r4, r5
  4019c0:	f000 80a7 	beq.w	401b12 <__adddf3+0x1da>
  4019c4:	f1a4 0401 	sub.w	r4, r4, #1
  4019c8:	f1d5 0e20 	rsbs	lr, r5, #32
  4019cc:	db0d      	blt.n	4019ea <__adddf3+0xb2>
  4019ce:	fa02 fc0e 	lsl.w	ip, r2, lr
  4019d2:	fa22 f205 	lsr.w	r2, r2, r5
  4019d6:	1880      	adds	r0, r0, r2
  4019d8:	f141 0100 	adc.w	r1, r1, #0
  4019dc:	fa03 f20e 	lsl.w	r2, r3, lr
  4019e0:	1880      	adds	r0, r0, r2
  4019e2:	fa43 f305 	asr.w	r3, r3, r5
  4019e6:	4159      	adcs	r1, r3
  4019e8:	e00e      	b.n	401a08 <__adddf3+0xd0>
  4019ea:	f1a5 0520 	sub.w	r5, r5, #32
  4019ee:	f10e 0e20 	add.w	lr, lr, #32
  4019f2:	2a01      	cmp	r2, #1
  4019f4:	fa03 fc0e 	lsl.w	ip, r3, lr
  4019f8:	bf28      	it	cs
  4019fa:	f04c 0c02 	orrcs.w	ip, ip, #2
  4019fe:	fa43 f305 	asr.w	r3, r3, r5
  401a02:	18c0      	adds	r0, r0, r3
  401a04:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  401a08:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401a0c:	d507      	bpl.n	401a1e <__adddf3+0xe6>
  401a0e:	f04f 0e00 	mov.w	lr, #0
  401a12:	f1dc 0c00 	rsbs	ip, ip, #0
  401a16:	eb7e 0000 	sbcs.w	r0, lr, r0
  401a1a:	eb6e 0101 	sbc.w	r1, lr, r1
  401a1e:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  401a22:	d31b      	bcc.n	401a5c <__adddf3+0x124>
  401a24:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  401a28:	d30c      	bcc.n	401a44 <__adddf3+0x10c>
  401a2a:	0849      	lsrs	r1, r1, #1
  401a2c:	ea5f 0030 	movs.w	r0, r0, rrx
  401a30:	ea4f 0c3c 	mov.w	ip, ip, rrx
  401a34:	f104 0401 	add.w	r4, r4, #1
  401a38:	ea4f 5244 	mov.w	r2, r4, lsl #21
  401a3c:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  401a40:	f080 809a 	bcs.w	401b78 <__adddf3+0x240>
  401a44:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  401a48:	bf08      	it	eq
  401a4a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  401a4e:	f150 0000 	adcs.w	r0, r0, #0
  401a52:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  401a56:	ea41 0105 	orr.w	r1, r1, r5
  401a5a:	bd30      	pop	{r4, r5, pc}
  401a5c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  401a60:	4140      	adcs	r0, r0
  401a62:	eb41 0101 	adc.w	r1, r1, r1
  401a66:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401a6a:	f1a4 0401 	sub.w	r4, r4, #1
  401a6e:	d1e9      	bne.n	401a44 <__adddf3+0x10c>
  401a70:	f091 0f00 	teq	r1, #0
  401a74:	bf04      	itt	eq
  401a76:	4601      	moveq	r1, r0
  401a78:	2000      	moveq	r0, #0
  401a7a:	fab1 f381 	clz	r3, r1
  401a7e:	bf08      	it	eq
  401a80:	3320      	addeq	r3, #32
  401a82:	f1a3 030b 	sub.w	r3, r3, #11
  401a86:	f1b3 0220 	subs.w	r2, r3, #32
  401a8a:	da0c      	bge.n	401aa6 <__adddf3+0x16e>
  401a8c:	320c      	adds	r2, #12
  401a8e:	dd08      	ble.n	401aa2 <__adddf3+0x16a>
  401a90:	f102 0c14 	add.w	ip, r2, #20
  401a94:	f1c2 020c 	rsb	r2, r2, #12
  401a98:	fa01 f00c 	lsl.w	r0, r1, ip
  401a9c:	fa21 f102 	lsr.w	r1, r1, r2
  401aa0:	e00c      	b.n	401abc <__adddf3+0x184>
  401aa2:	f102 0214 	add.w	r2, r2, #20
  401aa6:	bfd8      	it	le
  401aa8:	f1c2 0c20 	rsble	ip, r2, #32
  401aac:	fa01 f102 	lsl.w	r1, r1, r2
  401ab0:	fa20 fc0c 	lsr.w	ip, r0, ip
  401ab4:	bfdc      	itt	le
  401ab6:	ea41 010c 	orrle.w	r1, r1, ip
  401aba:	4090      	lslle	r0, r2
  401abc:	1ae4      	subs	r4, r4, r3
  401abe:	bfa2      	ittt	ge
  401ac0:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  401ac4:	4329      	orrge	r1, r5
  401ac6:	bd30      	popge	{r4, r5, pc}
  401ac8:	ea6f 0404 	mvn.w	r4, r4
  401acc:	3c1f      	subs	r4, #31
  401ace:	da1c      	bge.n	401b0a <__adddf3+0x1d2>
  401ad0:	340c      	adds	r4, #12
  401ad2:	dc0e      	bgt.n	401af2 <__adddf3+0x1ba>
  401ad4:	f104 0414 	add.w	r4, r4, #20
  401ad8:	f1c4 0220 	rsb	r2, r4, #32
  401adc:	fa20 f004 	lsr.w	r0, r0, r4
  401ae0:	fa01 f302 	lsl.w	r3, r1, r2
  401ae4:	ea40 0003 	orr.w	r0, r0, r3
  401ae8:	fa21 f304 	lsr.w	r3, r1, r4
  401aec:	ea45 0103 	orr.w	r1, r5, r3
  401af0:	bd30      	pop	{r4, r5, pc}
  401af2:	f1c4 040c 	rsb	r4, r4, #12
  401af6:	f1c4 0220 	rsb	r2, r4, #32
  401afa:	fa20 f002 	lsr.w	r0, r0, r2
  401afe:	fa01 f304 	lsl.w	r3, r1, r4
  401b02:	ea40 0003 	orr.w	r0, r0, r3
  401b06:	4629      	mov	r1, r5
  401b08:	bd30      	pop	{r4, r5, pc}
  401b0a:	fa21 f004 	lsr.w	r0, r1, r4
  401b0e:	4629      	mov	r1, r5
  401b10:	bd30      	pop	{r4, r5, pc}
  401b12:	f094 0f00 	teq	r4, #0
  401b16:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  401b1a:	bf06      	itte	eq
  401b1c:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  401b20:	3401      	addeq	r4, #1
  401b22:	3d01      	subne	r5, #1
  401b24:	e74e      	b.n	4019c4 <__adddf3+0x8c>
  401b26:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  401b2a:	bf18      	it	ne
  401b2c:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  401b30:	d029      	beq.n	401b86 <__adddf3+0x24e>
  401b32:	ea94 0f05 	teq	r4, r5
  401b36:	bf08      	it	eq
  401b38:	ea90 0f02 	teqeq	r0, r2
  401b3c:	d005      	beq.n	401b4a <__adddf3+0x212>
  401b3e:	ea54 0c00 	orrs.w	ip, r4, r0
  401b42:	bf04      	itt	eq
  401b44:	4619      	moveq	r1, r3
  401b46:	4610      	moveq	r0, r2
  401b48:	bd30      	pop	{r4, r5, pc}
  401b4a:	ea91 0f03 	teq	r1, r3
  401b4e:	bf1e      	ittt	ne
  401b50:	2100      	movne	r1, #0
  401b52:	2000      	movne	r0, #0
  401b54:	bd30      	popne	{r4, r5, pc}
  401b56:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  401b5a:	d105      	bne.n	401b68 <__adddf3+0x230>
  401b5c:	0040      	lsls	r0, r0, #1
  401b5e:	4149      	adcs	r1, r1
  401b60:	bf28      	it	cs
  401b62:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  401b66:	bd30      	pop	{r4, r5, pc}
  401b68:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  401b6c:	bf3c      	itt	cc
  401b6e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  401b72:	bd30      	popcc	{r4, r5, pc}
  401b74:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401b78:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  401b7c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  401b80:	f04f 0000 	mov.w	r0, #0
  401b84:	bd30      	pop	{r4, r5, pc}
  401b86:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  401b8a:	bf1a      	itte	ne
  401b8c:	4619      	movne	r1, r3
  401b8e:	4610      	movne	r0, r2
  401b90:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  401b94:	bf1c      	itt	ne
  401b96:	460b      	movne	r3, r1
  401b98:	4602      	movne	r2, r0
  401b9a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  401b9e:	bf06      	itte	eq
  401ba0:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  401ba4:	ea91 0f03 	teqeq	r1, r3
  401ba8:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  401bac:	bd30      	pop	{r4, r5, pc}
  401bae:	bf00      	nop

00401bb0 <__aeabi_ui2d>:
  401bb0:	f090 0f00 	teq	r0, #0
  401bb4:	bf04      	itt	eq
  401bb6:	2100      	moveq	r1, #0
  401bb8:	4770      	bxeq	lr
  401bba:	b530      	push	{r4, r5, lr}
  401bbc:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401bc0:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401bc4:	f04f 0500 	mov.w	r5, #0
  401bc8:	f04f 0100 	mov.w	r1, #0
  401bcc:	e750      	b.n	401a70 <__adddf3+0x138>
  401bce:	bf00      	nop

00401bd0 <__aeabi_i2d>:
  401bd0:	f090 0f00 	teq	r0, #0
  401bd4:	bf04      	itt	eq
  401bd6:	2100      	moveq	r1, #0
  401bd8:	4770      	bxeq	lr
  401bda:	b530      	push	{r4, r5, lr}
  401bdc:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401be0:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401be4:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  401be8:	bf48      	it	mi
  401bea:	4240      	negmi	r0, r0
  401bec:	f04f 0100 	mov.w	r1, #0
  401bf0:	e73e      	b.n	401a70 <__adddf3+0x138>
  401bf2:	bf00      	nop

00401bf4 <__aeabi_f2d>:
  401bf4:	0042      	lsls	r2, r0, #1
  401bf6:	ea4f 01e2 	mov.w	r1, r2, asr #3
  401bfa:	ea4f 0131 	mov.w	r1, r1, rrx
  401bfe:	ea4f 7002 	mov.w	r0, r2, lsl #28
  401c02:	bf1f      	itttt	ne
  401c04:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  401c08:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  401c0c:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  401c10:	4770      	bxne	lr
  401c12:	f092 0f00 	teq	r2, #0
  401c16:	bf14      	ite	ne
  401c18:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  401c1c:	4770      	bxeq	lr
  401c1e:	b530      	push	{r4, r5, lr}
  401c20:	f44f 7460 	mov.w	r4, #896	; 0x380
  401c24:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401c28:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  401c2c:	e720      	b.n	401a70 <__adddf3+0x138>
  401c2e:	bf00      	nop

00401c30 <__aeabi_ul2d>:
  401c30:	ea50 0201 	orrs.w	r2, r0, r1
  401c34:	bf08      	it	eq
  401c36:	4770      	bxeq	lr
  401c38:	b530      	push	{r4, r5, lr}
  401c3a:	f04f 0500 	mov.w	r5, #0
  401c3e:	e00a      	b.n	401c56 <__aeabi_l2d+0x16>

00401c40 <__aeabi_l2d>:
  401c40:	ea50 0201 	orrs.w	r2, r0, r1
  401c44:	bf08      	it	eq
  401c46:	4770      	bxeq	lr
  401c48:	b530      	push	{r4, r5, lr}
  401c4a:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  401c4e:	d502      	bpl.n	401c56 <__aeabi_l2d+0x16>
  401c50:	4240      	negs	r0, r0
  401c52:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  401c56:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401c5a:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401c5e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  401c62:	f43f aedc 	beq.w	401a1e <__adddf3+0xe6>
  401c66:	f04f 0203 	mov.w	r2, #3
  401c6a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  401c6e:	bf18      	it	ne
  401c70:	3203      	addne	r2, #3
  401c72:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  401c76:	bf18      	it	ne
  401c78:	3203      	addne	r2, #3
  401c7a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  401c7e:	f1c2 0320 	rsb	r3, r2, #32
  401c82:	fa00 fc03 	lsl.w	ip, r0, r3
  401c86:	fa20 f002 	lsr.w	r0, r0, r2
  401c8a:	fa01 fe03 	lsl.w	lr, r1, r3
  401c8e:	ea40 000e 	orr.w	r0, r0, lr
  401c92:	fa21 f102 	lsr.w	r1, r1, r2
  401c96:	4414      	add	r4, r2
  401c98:	e6c1      	b.n	401a1e <__adddf3+0xe6>
  401c9a:	bf00      	nop

00401c9c <__aeabi_dmul>:
  401c9c:	b570      	push	{r4, r5, r6, lr}
  401c9e:	f04f 0cff 	mov.w	ip, #255	; 0xff
  401ca2:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  401ca6:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  401caa:	bf1d      	ittte	ne
  401cac:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  401cb0:	ea94 0f0c 	teqne	r4, ip
  401cb4:	ea95 0f0c 	teqne	r5, ip
  401cb8:	f000 f8de 	bleq	401e78 <__aeabi_dmul+0x1dc>
  401cbc:	442c      	add	r4, r5
  401cbe:	ea81 0603 	eor.w	r6, r1, r3
  401cc2:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  401cc6:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  401cca:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  401cce:	bf18      	it	ne
  401cd0:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  401cd4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401cd8:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  401cdc:	d038      	beq.n	401d50 <__aeabi_dmul+0xb4>
  401cde:	fba0 ce02 	umull	ip, lr, r0, r2
  401ce2:	f04f 0500 	mov.w	r5, #0
  401ce6:	fbe1 e502 	umlal	lr, r5, r1, r2
  401cea:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  401cee:	fbe0 e503 	umlal	lr, r5, r0, r3
  401cf2:	f04f 0600 	mov.w	r6, #0
  401cf6:	fbe1 5603 	umlal	r5, r6, r1, r3
  401cfa:	f09c 0f00 	teq	ip, #0
  401cfe:	bf18      	it	ne
  401d00:	f04e 0e01 	orrne.w	lr, lr, #1
  401d04:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  401d08:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  401d0c:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  401d10:	d204      	bcs.n	401d1c <__aeabi_dmul+0x80>
  401d12:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  401d16:	416d      	adcs	r5, r5
  401d18:	eb46 0606 	adc.w	r6, r6, r6
  401d1c:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  401d20:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  401d24:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  401d28:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  401d2c:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  401d30:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  401d34:	bf88      	it	hi
  401d36:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  401d3a:	d81e      	bhi.n	401d7a <__aeabi_dmul+0xde>
  401d3c:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  401d40:	bf08      	it	eq
  401d42:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  401d46:	f150 0000 	adcs.w	r0, r0, #0
  401d4a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  401d4e:	bd70      	pop	{r4, r5, r6, pc}
  401d50:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  401d54:	ea46 0101 	orr.w	r1, r6, r1
  401d58:	ea40 0002 	orr.w	r0, r0, r2
  401d5c:	ea81 0103 	eor.w	r1, r1, r3
  401d60:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  401d64:	bfc2      	ittt	gt
  401d66:	ebd4 050c 	rsbsgt	r5, r4, ip
  401d6a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  401d6e:	bd70      	popgt	{r4, r5, r6, pc}
  401d70:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401d74:	f04f 0e00 	mov.w	lr, #0
  401d78:	3c01      	subs	r4, #1
  401d7a:	f300 80ab 	bgt.w	401ed4 <__aeabi_dmul+0x238>
  401d7e:	f114 0f36 	cmn.w	r4, #54	; 0x36
  401d82:	bfde      	ittt	le
  401d84:	2000      	movle	r0, #0
  401d86:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  401d8a:	bd70      	pople	{r4, r5, r6, pc}
  401d8c:	f1c4 0400 	rsb	r4, r4, #0
  401d90:	3c20      	subs	r4, #32
  401d92:	da35      	bge.n	401e00 <__aeabi_dmul+0x164>
  401d94:	340c      	adds	r4, #12
  401d96:	dc1b      	bgt.n	401dd0 <__aeabi_dmul+0x134>
  401d98:	f104 0414 	add.w	r4, r4, #20
  401d9c:	f1c4 0520 	rsb	r5, r4, #32
  401da0:	fa00 f305 	lsl.w	r3, r0, r5
  401da4:	fa20 f004 	lsr.w	r0, r0, r4
  401da8:	fa01 f205 	lsl.w	r2, r1, r5
  401dac:	ea40 0002 	orr.w	r0, r0, r2
  401db0:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  401db4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  401db8:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  401dbc:	fa21 f604 	lsr.w	r6, r1, r4
  401dc0:	eb42 0106 	adc.w	r1, r2, r6
  401dc4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401dc8:	bf08      	it	eq
  401dca:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  401dce:	bd70      	pop	{r4, r5, r6, pc}
  401dd0:	f1c4 040c 	rsb	r4, r4, #12
  401dd4:	f1c4 0520 	rsb	r5, r4, #32
  401dd8:	fa00 f304 	lsl.w	r3, r0, r4
  401ddc:	fa20 f005 	lsr.w	r0, r0, r5
  401de0:	fa01 f204 	lsl.w	r2, r1, r4
  401de4:	ea40 0002 	orr.w	r0, r0, r2
  401de8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401dec:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  401df0:	f141 0100 	adc.w	r1, r1, #0
  401df4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401df8:	bf08      	it	eq
  401dfa:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  401dfe:	bd70      	pop	{r4, r5, r6, pc}
  401e00:	f1c4 0520 	rsb	r5, r4, #32
  401e04:	fa00 f205 	lsl.w	r2, r0, r5
  401e08:	ea4e 0e02 	orr.w	lr, lr, r2
  401e0c:	fa20 f304 	lsr.w	r3, r0, r4
  401e10:	fa01 f205 	lsl.w	r2, r1, r5
  401e14:	ea43 0302 	orr.w	r3, r3, r2
  401e18:	fa21 f004 	lsr.w	r0, r1, r4
  401e1c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401e20:	fa21 f204 	lsr.w	r2, r1, r4
  401e24:	ea20 0002 	bic.w	r0, r0, r2
  401e28:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  401e2c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401e30:	bf08      	it	eq
  401e32:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  401e36:	bd70      	pop	{r4, r5, r6, pc}
  401e38:	f094 0f00 	teq	r4, #0
  401e3c:	d10f      	bne.n	401e5e <__aeabi_dmul+0x1c2>
  401e3e:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  401e42:	0040      	lsls	r0, r0, #1
  401e44:	eb41 0101 	adc.w	r1, r1, r1
  401e48:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401e4c:	bf08      	it	eq
  401e4e:	3c01      	subeq	r4, #1
  401e50:	d0f7      	beq.n	401e42 <__aeabi_dmul+0x1a6>
  401e52:	ea41 0106 	orr.w	r1, r1, r6
  401e56:	f095 0f00 	teq	r5, #0
  401e5a:	bf18      	it	ne
  401e5c:	4770      	bxne	lr
  401e5e:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  401e62:	0052      	lsls	r2, r2, #1
  401e64:	eb43 0303 	adc.w	r3, r3, r3
  401e68:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  401e6c:	bf08      	it	eq
  401e6e:	3d01      	subeq	r5, #1
  401e70:	d0f7      	beq.n	401e62 <__aeabi_dmul+0x1c6>
  401e72:	ea43 0306 	orr.w	r3, r3, r6
  401e76:	4770      	bx	lr
  401e78:	ea94 0f0c 	teq	r4, ip
  401e7c:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  401e80:	bf18      	it	ne
  401e82:	ea95 0f0c 	teqne	r5, ip
  401e86:	d00c      	beq.n	401ea2 <__aeabi_dmul+0x206>
  401e88:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  401e8c:	bf18      	it	ne
  401e8e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  401e92:	d1d1      	bne.n	401e38 <__aeabi_dmul+0x19c>
  401e94:	ea81 0103 	eor.w	r1, r1, r3
  401e98:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401e9c:	f04f 0000 	mov.w	r0, #0
  401ea0:	bd70      	pop	{r4, r5, r6, pc}
  401ea2:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  401ea6:	bf06      	itte	eq
  401ea8:	4610      	moveq	r0, r2
  401eaa:	4619      	moveq	r1, r3
  401eac:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  401eb0:	d019      	beq.n	401ee6 <__aeabi_dmul+0x24a>
  401eb2:	ea94 0f0c 	teq	r4, ip
  401eb6:	d102      	bne.n	401ebe <__aeabi_dmul+0x222>
  401eb8:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  401ebc:	d113      	bne.n	401ee6 <__aeabi_dmul+0x24a>
  401ebe:	ea95 0f0c 	teq	r5, ip
  401ec2:	d105      	bne.n	401ed0 <__aeabi_dmul+0x234>
  401ec4:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  401ec8:	bf1c      	itt	ne
  401eca:	4610      	movne	r0, r2
  401ecc:	4619      	movne	r1, r3
  401ece:	d10a      	bne.n	401ee6 <__aeabi_dmul+0x24a>
  401ed0:	ea81 0103 	eor.w	r1, r1, r3
  401ed4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401ed8:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  401edc:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  401ee0:	f04f 0000 	mov.w	r0, #0
  401ee4:	bd70      	pop	{r4, r5, r6, pc}
  401ee6:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  401eea:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  401eee:	bd70      	pop	{r4, r5, r6, pc}

00401ef0 <__aeabi_ddiv>:
  401ef0:	b570      	push	{r4, r5, r6, lr}
  401ef2:	f04f 0cff 	mov.w	ip, #255	; 0xff
  401ef6:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  401efa:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  401efe:	bf1d      	ittte	ne
  401f00:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  401f04:	ea94 0f0c 	teqne	r4, ip
  401f08:	ea95 0f0c 	teqne	r5, ip
  401f0c:	f000 f8a7 	bleq	40205e <__aeabi_ddiv+0x16e>
  401f10:	eba4 0405 	sub.w	r4, r4, r5
  401f14:	ea81 0e03 	eor.w	lr, r1, r3
  401f18:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  401f1c:	ea4f 3101 	mov.w	r1, r1, lsl #12
  401f20:	f000 8088 	beq.w	402034 <__aeabi_ddiv+0x144>
  401f24:	ea4f 3303 	mov.w	r3, r3, lsl #12
  401f28:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  401f2c:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  401f30:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  401f34:	ea4f 2202 	mov.w	r2, r2, lsl #8
  401f38:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  401f3c:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  401f40:	ea4f 2600 	mov.w	r6, r0, lsl #8
  401f44:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  401f48:	429d      	cmp	r5, r3
  401f4a:	bf08      	it	eq
  401f4c:	4296      	cmpeq	r6, r2
  401f4e:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  401f52:	f504 7440 	add.w	r4, r4, #768	; 0x300
  401f56:	d202      	bcs.n	401f5e <__aeabi_ddiv+0x6e>
  401f58:	085b      	lsrs	r3, r3, #1
  401f5a:	ea4f 0232 	mov.w	r2, r2, rrx
  401f5e:	1ab6      	subs	r6, r6, r2
  401f60:	eb65 0503 	sbc.w	r5, r5, r3
  401f64:	085b      	lsrs	r3, r3, #1
  401f66:	ea4f 0232 	mov.w	r2, r2, rrx
  401f6a:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  401f6e:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  401f72:	ebb6 0e02 	subs.w	lr, r6, r2
  401f76:	eb75 0e03 	sbcs.w	lr, r5, r3
  401f7a:	bf22      	ittt	cs
  401f7c:	1ab6      	subcs	r6, r6, r2
  401f7e:	4675      	movcs	r5, lr
  401f80:	ea40 000c 	orrcs.w	r0, r0, ip
  401f84:	085b      	lsrs	r3, r3, #1
  401f86:	ea4f 0232 	mov.w	r2, r2, rrx
  401f8a:	ebb6 0e02 	subs.w	lr, r6, r2
  401f8e:	eb75 0e03 	sbcs.w	lr, r5, r3
  401f92:	bf22      	ittt	cs
  401f94:	1ab6      	subcs	r6, r6, r2
  401f96:	4675      	movcs	r5, lr
  401f98:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  401f9c:	085b      	lsrs	r3, r3, #1
  401f9e:	ea4f 0232 	mov.w	r2, r2, rrx
  401fa2:	ebb6 0e02 	subs.w	lr, r6, r2
  401fa6:	eb75 0e03 	sbcs.w	lr, r5, r3
  401faa:	bf22      	ittt	cs
  401fac:	1ab6      	subcs	r6, r6, r2
  401fae:	4675      	movcs	r5, lr
  401fb0:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  401fb4:	085b      	lsrs	r3, r3, #1
  401fb6:	ea4f 0232 	mov.w	r2, r2, rrx
  401fba:	ebb6 0e02 	subs.w	lr, r6, r2
  401fbe:	eb75 0e03 	sbcs.w	lr, r5, r3
  401fc2:	bf22      	ittt	cs
  401fc4:	1ab6      	subcs	r6, r6, r2
  401fc6:	4675      	movcs	r5, lr
  401fc8:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  401fcc:	ea55 0e06 	orrs.w	lr, r5, r6
  401fd0:	d018      	beq.n	402004 <__aeabi_ddiv+0x114>
  401fd2:	ea4f 1505 	mov.w	r5, r5, lsl #4
  401fd6:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  401fda:	ea4f 1606 	mov.w	r6, r6, lsl #4
  401fde:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  401fe2:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  401fe6:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  401fea:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  401fee:	d1c0      	bne.n	401f72 <__aeabi_ddiv+0x82>
  401ff0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401ff4:	d10b      	bne.n	40200e <__aeabi_ddiv+0x11e>
  401ff6:	ea41 0100 	orr.w	r1, r1, r0
  401ffa:	f04f 0000 	mov.w	r0, #0
  401ffe:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  402002:	e7b6      	b.n	401f72 <__aeabi_ddiv+0x82>
  402004:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  402008:	bf04      	itt	eq
  40200a:	4301      	orreq	r1, r0
  40200c:	2000      	moveq	r0, #0
  40200e:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  402012:	bf88      	it	hi
  402014:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  402018:	f63f aeaf 	bhi.w	401d7a <__aeabi_dmul+0xde>
  40201c:	ebb5 0c03 	subs.w	ip, r5, r3
  402020:	bf04      	itt	eq
  402022:	ebb6 0c02 	subseq.w	ip, r6, r2
  402026:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  40202a:	f150 0000 	adcs.w	r0, r0, #0
  40202e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  402032:	bd70      	pop	{r4, r5, r6, pc}
  402034:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  402038:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  40203c:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  402040:	bfc2      	ittt	gt
  402042:	ebd4 050c 	rsbsgt	r5, r4, ip
  402046:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  40204a:	bd70      	popgt	{r4, r5, r6, pc}
  40204c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  402050:	f04f 0e00 	mov.w	lr, #0
  402054:	3c01      	subs	r4, #1
  402056:	e690      	b.n	401d7a <__aeabi_dmul+0xde>
  402058:	ea45 0e06 	orr.w	lr, r5, r6
  40205c:	e68d      	b.n	401d7a <__aeabi_dmul+0xde>
  40205e:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  402062:	ea94 0f0c 	teq	r4, ip
  402066:	bf08      	it	eq
  402068:	ea95 0f0c 	teqeq	r5, ip
  40206c:	f43f af3b 	beq.w	401ee6 <__aeabi_dmul+0x24a>
  402070:	ea94 0f0c 	teq	r4, ip
  402074:	d10a      	bne.n	40208c <__aeabi_ddiv+0x19c>
  402076:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  40207a:	f47f af34 	bne.w	401ee6 <__aeabi_dmul+0x24a>
  40207e:	ea95 0f0c 	teq	r5, ip
  402082:	f47f af25 	bne.w	401ed0 <__aeabi_dmul+0x234>
  402086:	4610      	mov	r0, r2
  402088:	4619      	mov	r1, r3
  40208a:	e72c      	b.n	401ee6 <__aeabi_dmul+0x24a>
  40208c:	ea95 0f0c 	teq	r5, ip
  402090:	d106      	bne.n	4020a0 <__aeabi_ddiv+0x1b0>
  402092:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  402096:	f43f aefd 	beq.w	401e94 <__aeabi_dmul+0x1f8>
  40209a:	4610      	mov	r0, r2
  40209c:	4619      	mov	r1, r3
  40209e:	e722      	b.n	401ee6 <__aeabi_dmul+0x24a>
  4020a0:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  4020a4:	bf18      	it	ne
  4020a6:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  4020aa:	f47f aec5 	bne.w	401e38 <__aeabi_dmul+0x19c>
  4020ae:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  4020b2:	f47f af0d 	bne.w	401ed0 <__aeabi_dmul+0x234>
  4020b6:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  4020ba:	f47f aeeb 	bne.w	401e94 <__aeabi_dmul+0x1f8>
  4020be:	e712      	b.n	401ee6 <__aeabi_dmul+0x24a>

004020c0 <__gedf2>:
  4020c0:	f04f 3cff 	mov.w	ip, #4294967295
  4020c4:	e006      	b.n	4020d4 <__cmpdf2+0x4>
  4020c6:	bf00      	nop

004020c8 <__ledf2>:
  4020c8:	f04f 0c01 	mov.w	ip, #1
  4020cc:	e002      	b.n	4020d4 <__cmpdf2+0x4>
  4020ce:	bf00      	nop

004020d0 <__cmpdf2>:
  4020d0:	f04f 0c01 	mov.w	ip, #1
  4020d4:	f84d cd04 	str.w	ip, [sp, #-4]!
  4020d8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  4020dc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4020e0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  4020e4:	bf18      	it	ne
  4020e6:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  4020ea:	d01b      	beq.n	402124 <__cmpdf2+0x54>
  4020ec:	b001      	add	sp, #4
  4020ee:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  4020f2:	bf0c      	ite	eq
  4020f4:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  4020f8:	ea91 0f03 	teqne	r1, r3
  4020fc:	bf02      	ittt	eq
  4020fe:	ea90 0f02 	teqeq	r0, r2
  402102:	2000      	moveq	r0, #0
  402104:	4770      	bxeq	lr
  402106:	f110 0f00 	cmn.w	r0, #0
  40210a:	ea91 0f03 	teq	r1, r3
  40210e:	bf58      	it	pl
  402110:	4299      	cmppl	r1, r3
  402112:	bf08      	it	eq
  402114:	4290      	cmpeq	r0, r2
  402116:	bf2c      	ite	cs
  402118:	17d8      	asrcs	r0, r3, #31
  40211a:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  40211e:	f040 0001 	orr.w	r0, r0, #1
  402122:	4770      	bx	lr
  402124:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  402128:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  40212c:	d102      	bne.n	402134 <__cmpdf2+0x64>
  40212e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  402132:	d107      	bne.n	402144 <__cmpdf2+0x74>
  402134:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  402138:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  40213c:	d1d6      	bne.n	4020ec <__cmpdf2+0x1c>
  40213e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  402142:	d0d3      	beq.n	4020ec <__cmpdf2+0x1c>
  402144:	f85d 0b04 	ldr.w	r0, [sp], #4
  402148:	4770      	bx	lr
  40214a:	bf00      	nop

0040214c <__aeabi_cdrcmple>:
  40214c:	4684      	mov	ip, r0
  40214e:	4610      	mov	r0, r2
  402150:	4662      	mov	r2, ip
  402152:	468c      	mov	ip, r1
  402154:	4619      	mov	r1, r3
  402156:	4663      	mov	r3, ip
  402158:	e000      	b.n	40215c <__aeabi_cdcmpeq>
  40215a:	bf00      	nop

0040215c <__aeabi_cdcmpeq>:
  40215c:	b501      	push	{r0, lr}
  40215e:	f7ff ffb7 	bl	4020d0 <__cmpdf2>
  402162:	2800      	cmp	r0, #0
  402164:	bf48      	it	mi
  402166:	f110 0f00 	cmnmi.w	r0, #0
  40216a:	bd01      	pop	{r0, pc}

0040216c <__aeabi_dcmpeq>:
  40216c:	f84d ed08 	str.w	lr, [sp, #-8]!
  402170:	f7ff fff4 	bl	40215c <__aeabi_cdcmpeq>
  402174:	bf0c      	ite	eq
  402176:	2001      	moveq	r0, #1
  402178:	2000      	movne	r0, #0
  40217a:	f85d fb08 	ldr.w	pc, [sp], #8
  40217e:	bf00      	nop

00402180 <__aeabi_dcmplt>:
  402180:	f84d ed08 	str.w	lr, [sp, #-8]!
  402184:	f7ff ffea 	bl	40215c <__aeabi_cdcmpeq>
  402188:	bf34      	ite	cc
  40218a:	2001      	movcc	r0, #1
  40218c:	2000      	movcs	r0, #0
  40218e:	f85d fb08 	ldr.w	pc, [sp], #8
  402192:	bf00      	nop

00402194 <__aeabi_dcmple>:
  402194:	f84d ed08 	str.w	lr, [sp, #-8]!
  402198:	f7ff ffe0 	bl	40215c <__aeabi_cdcmpeq>
  40219c:	bf94      	ite	ls
  40219e:	2001      	movls	r0, #1
  4021a0:	2000      	movhi	r0, #0
  4021a2:	f85d fb08 	ldr.w	pc, [sp], #8
  4021a6:	bf00      	nop

004021a8 <__aeabi_dcmpge>:
  4021a8:	f84d ed08 	str.w	lr, [sp, #-8]!
  4021ac:	f7ff ffce 	bl	40214c <__aeabi_cdrcmple>
  4021b0:	bf94      	ite	ls
  4021b2:	2001      	movls	r0, #1
  4021b4:	2000      	movhi	r0, #0
  4021b6:	f85d fb08 	ldr.w	pc, [sp], #8
  4021ba:	bf00      	nop

004021bc <__aeabi_dcmpgt>:
  4021bc:	f84d ed08 	str.w	lr, [sp, #-8]!
  4021c0:	f7ff ffc4 	bl	40214c <__aeabi_cdrcmple>
  4021c4:	bf34      	ite	cc
  4021c6:	2001      	movcc	r0, #1
  4021c8:	2000      	movcs	r0, #0
  4021ca:	f85d fb08 	ldr.w	pc, [sp], #8
  4021ce:	bf00      	nop

004021d0 <__aeabi_uldivmod>:
  4021d0:	b953      	cbnz	r3, 4021e8 <__aeabi_uldivmod+0x18>
  4021d2:	b94a      	cbnz	r2, 4021e8 <__aeabi_uldivmod+0x18>
  4021d4:	2900      	cmp	r1, #0
  4021d6:	bf08      	it	eq
  4021d8:	2800      	cmpeq	r0, #0
  4021da:	bf1c      	itt	ne
  4021dc:	f04f 31ff 	movne.w	r1, #4294967295
  4021e0:	f04f 30ff 	movne.w	r0, #4294967295
  4021e4:	f000 b99e 	b.w	402524 <__aeabi_idiv0>
  4021e8:	f1ad 0c08 	sub.w	ip, sp, #8
  4021ec:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  4021f0:	f000 f82a 	bl	402248 <__udivmoddi4>
  4021f4:	f8dd e004 	ldr.w	lr, [sp, #4]
  4021f8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  4021fc:	b004      	add	sp, #16
  4021fe:	4770      	bx	lr

00402200 <__aeabi_d2ulz>:
  402200:	b5d0      	push	{r4, r6, r7, lr}
  402202:	2200      	movs	r2, #0
  402204:	4b0e      	ldr	r3, [pc, #56]	; (402240 <__aeabi_d2ulz+0x40>)
  402206:	4606      	mov	r6, r0
  402208:	460f      	mov	r7, r1
  40220a:	f7ff fd47 	bl	401c9c <__aeabi_dmul>
  40220e:	f000 f98b 	bl	402528 <__aeabi_d2uiz>
  402212:	4604      	mov	r4, r0
  402214:	f7ff fccc 	bl	401bb0 <__aeabi_ui2d>
  402218:	2200      	movs	r2, #0
  40221a:	4b0a      	ldr	r3, [pc, #40]	; (402244 <__aeabi_d2ulz+0x44>)
  40221c:	f7ff fd3e 	bl	401c9c <__aeabi_dmul>
  402220:	4602      	mov	r2, r0
  402222:	460b      	mov	r3, r1
  402224:	4630      	mov	r0, r6
  402226:	4639      	mov	r1, r7
  402228:	f7ff fb84 	bl	401934 <__aeabi_dsub>
  40222c:	f000 f97c 	bl	402528 <__aeabi_d2uiz>
  402230:	4623      	mov	r3, r4
  402232:	2200      	movs	r2, #0
  402234:	ea42 0200 	orr.w	r2, r2, r0
  402238:	4610      	mov	r0, r2
  40223a:	4619      	mov	r1, r3
  40223c:	bdd0      	pop	{r4, r6, r7, pc}
  40223e:	bf00      	nop
  402240:	3df00000 	.word	0x3df00000
  402244:	41f00000 	.word	0x41f00000

00402248 <__udivmoddi4>:
  402248:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  40224c:	468c      	mov	ip, r1
  40224e:	460d      	mov	r5, r1
  402250:	4604      	mov	r4, r0
  402252:	9e08      	ldr	r6, [sp, #32]
  402254:	2b00      	cmp	r3, #0
  402256:	d151      	bne.n	4022fc <__udivmoddi4+0xb4>
  402258:	428a      	cmp	r2, r1
  40225a:	4617      	mov	r7, r2
  40225c:	d96d      	bls.n	40233a <__udivmoddi4+0xf2>
  40225e:	fab2 fe82 	clz	lr, r2
  402262:	f1be 0f00 	cmp.w	lr, #0
  402266:	d00b      	beq.n	402280 <__udivmoddi4+0x38>
  402268:	f1ce 0c20 	rsb	ip, lr, #32
  40226c:	fa01 f50e 	lsl.w	r5, r1, lr
  402270:	fa20 fc0c 	lsr.w	ip, r0, ip
  402274:	fa02 f70e 	lsl.w	r7, r2, lr
  402278:	ea4c 0c05 	orr.w	ip, ip, r5
  40227c:	fa00 f40e 	lsl.w	r4, r0, lr
  402280:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  402284:	0c25      	lsrs	r5, r4, #16
  402286:	fbbc f8fa 	udiv	r8, ip, sl
  40228a:	fa1f f987 	uxth.w	r9, r7
  40228e:	fb0a cc18 	mls	ip, sl, r8, ip
  402292:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  402296:	fb08 f309 	mul.w	r3, r8, r9
  40229a:	42ab      	cmp	r3, r5
  40229c:	d90a      	bls.n	4022b4 <__udivmoddi4+0x6c>
  40229e:	19ed      	adds	r5, r5, r7
  4022a0:	f108 32ff 	add.w	r2, r8, #4294967295
  4022a4:	f080 8123 	bcs.w	4024ee <__udivmoddi4+0x2a6>
  4022a8:	42ab      	cmp	r3, r5
  4022aa:	f240 8120 	bls.w	4024ee <__udivmoddi4+0x2a6>
  4022ae:	f1a8 0802 	sub.w	r8, r8, #2
  4022b2:	443d      	add	r5, r7
  4022b4:	1aed      	subs	r5, r5, r3
  4022b6:	b2a4      	uxth	r4, r4
  4022b8:	fbb5 f0fa 	udiv	r0, r5, sl
  4022bc:	fb0a 5510 	mls	r5, sl, r0, r5
  4022c0:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  4022c4:	fb00 f909 	mul.w	r9, r0, r9
  4022c8:	45a1      	cmp	r9, r4
  4022ca:	d909      	bls.n	4022e0 <__udivmoddi4+0x98>
  4022cc:	19e4      	adds	r4, r4, r7
  4022ce:	f100 33ff 	add.w	r3, r0, #4294967295
  4022d2:	f080 810a 	bcs.w	4024ea <__udivmoddi4+0x2a2>
  4022d6:	45a1      	cmp	r9, r4
  4022d8:	f240 8107 	bls.w	4024ea <__udivmoddi4+0x2a2>
  4022dc:	3802      	subs	r0, #2
  4022de:	443c      	add	r4, r7
  4022e0:	eba4 0409 	sub.w	r4, r4, r9
  4022e4:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  4022e8:	2100      	movs	r1, #0
  4022ea:	2e00      	cmp	r6, #0
  4022ec:	d061      	beq.n	4023b2 <__udivmoddi4+0x16a>
  4022ee:	fa24 f40e 	lsr.w	r4, r4, lr
  4022f2:	2300      	movs	r3, #0
  4022f4:	6034      	str	r4, [r6, #0]
  4022f6:	6073      	str	r3, [r6, #4]
  4022f8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4022fc:	428b      	cmp	r3, r1
  4022fe:	d907      	bls.n	402310 <__udivmoddi4+0xc8>
  402300:	2e00      	cmp	r6, #0
  402302:	d054      	beq.n	4023ae <__udivmoddi4+0x166>
  402304:	2100      	movs	r1, #0
  402306:	e886 0021 	stmia.w	r6, {r0, r5}
  40230a:	4608      	mov	r0, r1
  40230c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  402310:	fab3 f183 	clz	r1, r3
  402314:	2900      	cmp	r1, #0
  402316:	f040 808e 	bne.w	402436 <__udivmoddi4+0x1ee>
  40231a:	42ab      	cmp	r3, r5
  40231c:	d302      	bcc.n	402324 <__udivmoddi4+0xdc>
  40231e:	4282      	cmp	r2, r0
  402320:	f200 80fa 	bhi.w	402518 <__udivmoddi4+0x2d0>
  402324:	1a84      	subs	r4, r0, r2
  402326:	eb65 0503 	sbc.w	r5, r5, r3
  40232a:	2001      	movs	r0, #1
  40232c:	46ac      	mov	ip, r5
  40232e:	2e00      	cmp	r6, #0
  402330:	d03f      	beq.n	4023b2 <__udivmoddi4+0x16a>
  402332:	e886 1010 	stmia.w	r6, {r4, ip}
  402336:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40233a:	b912      	cbnz	r2, 402342 <__udivmoddi4+0xfa>
  40233c:	2701      	movs	r7, #1
  40233e:	fbb7 f7f2 	udiv	r7, r7, r2
  402342:	fab7 fe87 	clz	lr, r7
  402346:	f1be 0f00 	cmp.w	lr, #0
  40234a:	d134      	bne.n	4023b6 <__udivmoddi4+0x16e>
  40234c:	1beb      	subs	r3, r5, r7
  40234e:	0c3a      	lsrs	r2, r7, #16
  402350:	fa1f fc87 	uxth.w	ip, r7
  402354:	2101      	movs	r1, #1
  402356:	fbb3 f8f2 	udiv	r8, r3, r2
  40235a:	0c25      	lsrs	r5, r4, #16
  40235c:	fb02 3318 	mls	r3, r2, r8, r3
  402360:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  402364:	fb0c f308 	mul.w	r3, ip, r8
  402368:	42ab      	cmp	r3, r5
  40236a:	d907      	bls.n	40237c <__udivmoddi4+0x134>
  40236c:	19ed      	adds	r5, r5, r7
  40236e:	f108 30ff 	add.w	r0, r8, #4294967295
  402372:	d202      	bcs.n	40237a <__udivmoddi4+0x132>
  402374:	42ab      	cmp	r3, r5
  402376:	f200 80d1 	bhi.w	40251c <__udivmoddi4+0x2d4>
  40237a:	4680      	mov	r8, r0
  40237c:	1aed      	subs	r5, r5, r3
  40237e:	b2a3      	uxth	r3, r4
  402380:	fbb5 f0f2 	udiv	r0, r5, r2
  402384:	fb02 5510 	mls	r5, r2, r0, r5
  402388:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  40238c:	fb0c fc00 	mul.w	ip, ip, r0
  402390:	45a4      	cmp	ip, r4
  402392:	d907      	bls.n	4023a4 <__udivmoddi4+0x15c>
  402394:	19e4      	adds	r4, r4, r7
  402396:	f100 33ff 	add.w	r3, r0, #4294967295
  40239a:	d202      	bcs.n	4023a2 <__udivmoddi4+0x15a>
  40239c:	45a4      	cmp	ip, r4
  40239e:	f200 80b8 	bhi.w	402512 <__udivmoddi4+0x2ca>
  4023a2:	4618      	mov	r0, r3
  4023a4:	eba4 040c 	sub.w	r4, r4, ip
  4023a8:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  4023ac:	e79d      	b.n	4022ea <__udivmoddi4+0xa2>
  4023ae:	4631      	mov	r1, r6
  4023b0:	4630      	mov	r0, r6
  4023b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4023b6:	f1ce 0420 	rsb	r4, lr, #32
  4023ba:	fa05 f30e 	lsl.w	r3, r5, lr
  4023be:	fa07 f70e 	lsl.w	r7, r7, lr
  4023c2:	fa20 f804 	lsr.w	r8, r0, r4
  4023c6:	0c3a      	lsrs	r2, r7, #16
  4023c8:	fa25 f404 	lsr.w	r4, r5, r4
  4023cc:	ea48 0803 	orr.w	r8, r8, r3
  4023d0:	fbb4 f1f2 	udiv	r1, r4, r2
  4023d4:	ea4f 4518 	mov.w	r5, r8, lsr #16
  4023d8:	fb02 4411 	mls	r4, r2, r1, r4
  4023dc:	fa1f fc87 	uxth.w	ip, r7
  4023e0:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  4023e4:	fb01 f30c 	mul.w	r3, r1, ip
  4023e8:	42ab      	cmp	r3, r5
  4023ea:	fa00 f40e 	lsl.w	r4, r0, lr
  4023ee:	d909      	bls.n	402404 <__udivmoddi4+0x1bc>
  4023f0:	19ed      	adds	r5, r5, r7
  4023f2:	f101 30ff 	add.w	r0, r1, #4294967295
  4023f6:	f080 808a 	bcs.w	40250e <__udivmoddi4+0x2c6>
  4023fa:	42ab      	cmp	r3, r5
  4023fc:	f240 8087 	bls.w	40250e <__udivmoddi4+0x2c6>
  402400:	3902      	subs	r1, #2
  402402:	443d      	add	r5, r7
  402404:	1aeb      	subs	r3, r5, r3
  402406:	fa1f f588 	uxth.w	r5, r8
  40240a:	fbb3 f0f2 	udiv	r0, r3, r2
  40240e:	fb02 3310 	mls	r3, r2, r0, r3
  402412:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  402416:	fb00 f30c 	mul.w	r3, r0, ip
  40241a:	42ab      	cmp	r3, r5
  40241c:	d907      	bls.n	40242e <__udivmoddi4+0x1e6>
  40241e:	19ed      	adds	r5, r5, r7
  402420:	f100 38ff 	add.w	r8, r0, #4294967295
  402424:	d26f      	bcs.n	402506 <__udivmoddi4+0x2be>
  402426:	42ab      	cmp	r3, r5
  402428:	d96d      	bls.n	402506 <__udivmoddi4+0x2be>
  40242a:	3802      	subs	r0, #2
  40242c:	443d      	add	r5, r7
  40242e:	1aeb      	subs	r3, r5, r3
  402430:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  402434:	e78f      	b.n	402356 <__udivmoddi4+0x10e>
  402436:	f1c1 0720 	rsb	r7, r1, #32
  40243a:	fa22 f807 	lsr.w	r8, r2, r7
  40243e:	408b      	lsls	r3, r1
  402440:	fa05 f401 	lsl.w	r4, r5, r1
  402444:	ea48 0303 	orr.w	r3, r8, r3
  402448:	fa20 fe07 	lsr.w	lr, r0, r7
  40244c:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  402450:	40fd      	lsrs	r5, r7
  402452:	ea4e 0e04 	orr.w	lr, lr, r4
  402456:	fbb5 f9fc 	udiv	r9, r5, ip
  40245a:	ea4f 441e 	mov.w	r4, lr, lsr #16
  40245e:	fb0c 5519 	mls	r5, ip, r9, r5
  402462:	fa1f f883 	uxth.w	r8, r3
  402466:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  40246a:	fb09 f408 	mul.w	r4, r9, r8
  40246e:	42ac      	cmp	r4, r5
  402470:	fa02 f201 	lsl.w	r2, r2, r1
  402474:	fa00 fa01 	lsl.w	sl, r0, r1
  402478:	d908      	bls.n	40248c <__udivmoddi4+0x244>
  40247a:	18ed      	adds	r5, r5, r3
  40247c:	f109 30ff 	add.w	r0, r9, #4294967295
  402480:	d243      	bcs.n	40250a <__udivmoddi4+0x2c2>
  402482:	42ac      	cmp	r4, r5
  402484:	d941      	bls.n	40250a <__udivmoddi4+0x2c2>
  402486:	f1a9 0902 	sub.w	r9, r9, #2
  40248a:	441d      	add	r5, r3
  40248c:	1b2d      	subs	r5, r5, r4
  40248e:	fa1f fe8e 	uxth.w	lr, lr
  402492:	fbb5 f0fc 	udiv	r0, r5, ip
  402496:	fb0c 5510 	mls	r5, ip, r0, r5
  40249a:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  40249e:	fb00 f808 	mul.w	r8, r0, r8
  4024a2:	45a0      	cmp	r8, r4
  4024a4:	d907      	bls.n	4024b6 <__udivmoddi4+0x26e>
  4024a6:	18e4      	adds	r4, r4, r3
  4024a8:	f100 35ff 	add.w	r5, r0, #4294967295
  4024ac:	d229      	bcs.n	402502 <__udivmoddi4+0x2ba>
  4024ae:	45a0      	cmp	r8, r4
  4024b0:	d927      	bls.n	402502 <__udivmoddi4+0x2ba>
  4024b2:	3802      	subs	r0, #2
  4024b4:	441c      	add	r4, r3
  4024b6:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  4024ba:	eba4 0408 	sub.w	r4, r4, r8
  4024be:	fba0 8902 	umull	r8, r9, r0, r2
  4024c2:	454c      	cmp	r4, r9
  4024c4:	46c6      	mov	lr, r8
  4024c6:	464d      	mov	r5, r9
  4024c8:	d315      	bcc.n	4024f6 <__udivmoddi4+0x2ae>
  4024ca:	d012      	beq.n	4024f2 <__udivmoddi4+0x2aa>
  4024cc:	b156      	cbz	r6, 4024e4 <__udivmoddi4+0x29c>
  4024ce:	ebba 030e 	subs.w	r3, sl, lr
  4024d2:	eb64 0405 	sbc.w	r4, r4, r5
  4024d6:	fa04 f707 	lsl.w	r7, r4, r7
  4024da:	40cb      	lsrs	r3, r1
  4024dc:	431f      	orrs	r7, r3
  4024de:	40cc      	lsrs	r4, r1
  4024e0:	6037      	str	r7, [r6, #0]
  4024e2:	6074      	str	r4, [r6, #4]
  4024e4:	2100      	movs	r1, #0
  4024e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4024ea:	4618      	mov	r0, r3
  4024ec:	e6f8      	b.n	4022e0 <__udivmoddi4+0x98>
  4024ee:	4690      	mov	r8, r2
  4024f0:	e6e0      	b.n	4022b4 <__udivmoddi4+0x6c>
  4024f2:	45c2      	cmp	sl, r8
  4024f4:	d2ea      	bcs.n	4024cc <__udivmoddi4+0x284>
  4024f6:	ebb8 0e02 	subs.w	lr, r8, r2
  4024fa:	eb69 0503 	sbc.w	r5, r9, r3
  4024fe:	3801      	subs	r0, #1
  402500:	e7e4      	b.n	4024cc <__udivmoddi4+0x284>
  402502:	4628      	mov	r0, r5
  402504:	e7d7      	b.n	4024b6 <__udivmoddi4+0x26e>
  402506:	4640      	mov	r0, r8
  402508:	e791      	b.n	40242e <__udivmoddi4+0x1e6>
  40250a:	4681      	mov	r9, r0
  40250c:	e7be      	b.n	40248c <__udivmoddi4+0x244>
  40250e:	4601      	mov	r1, r0
  402510:	e778      	b.n	402404 <__udivmoddi4+0x1bc>
  402512:	3802      	subs	r0, #2
  402514:	443c      	add	r4, r7
  402516:	e745      	b.n	4023a4 <__udivmoddi4+0x15c>
  402518:	4608      	mov	r0, r1
  40251a:	e708      	b.n	40232e <__udivmoddi4+0xe6>
  40251c:	f1a8 0802 	sub.w	r8, r8, #2
  402520:	443d      	add	r5, r7
  402522:	e72b      	b.n	40237c <__udivmoddi4+0x134>

00402524 <__aeabi_idiv0>:
  402524:	4770      	bx	lr
  402526:	bf00      	nop

00402528 <__aeabi_d2uiz>:
  402528:	004a      	lsls	r2, r1, #1
  40252a:	d211      	bcs.n	402550 <__aeabi_d2uiz+0x28>
  40252c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  402530:	d211      	bcs.n	402556 <__aeabi_d2uiz+0x2e>
  402532:	d50d      	bpl.n	402550 <__aeabi_d2uiz+0x28>
  402534:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  402538:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  40253c:	d40e      	bmi.n	40255c <__aeabi_d2uiz+0x34>
  40253e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  402542:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  402546:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  40254a:	fa23 f002 	lsr.w	r0, r3, r2
  40254e:	4770      	bx	lr
  402550:	f04f 0000 	mov.w	r0, #0
  402554:	4770      	bx	lr
  402556:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  40255a:	d102      	bne.n	402562 <__aeabi_d2uiz+0x3a>
  40255c:	f04f 30ff 	mov.w	r0, #4294967295
  402560:	4770      	bx	lr
  402562:	f04f 0000 	mov.w	r0, #0
  402566:	4770      	bx	lr

00402568 <__libc_init_array>:
  402568:	b570      	push	{r4, r5, r6, lr}
  40256a:	4e0f      	ldr	r6, [pc, #60]	; (4025a8 <__libc_init_array+0x40>)
  40256c:	4d0f      	ldr	r5, [pc, #60]	; (4025ac <__libc_init_array+0x44>)
  40256e:	1b76      	subs	r6, r6, r5
  402570:	10b6      	asrs	r6, r6, #2
  402572:	bf18      	it	ne
  402574:	2400      	movne	r4, #0
  402576:	d005      	beq.n	402584 <__libc_init_array+0x1c>
  402578:	3401      	adds	r4, #1
  40257a:	f855 3b04 	ldr.w	r3, [r5], #4
  40257e:	4798      	blx	r3
  402580:	42a6      	cmp	r6, r4
  402582:	d1f9      	bne.n	402578 <__libc_init_array+0x10>
  402584:	4e0a      	ldr	r6, [pc, #40]	; (4025b0 <__libc_init_array+0x48>)
  402586:	4d0b      	ldr	r5, [pc, #44]	; (4025b4 <__libc_init_array+0x4c>)
  402588:	1b76      	subs	r6, r6, r5
  40258a:	f004 fd0d 	bl	406fa8 <_init>
  40258e:	10b6      	asrs	r6, r6, #2
  402590:	bf18      	it	ne
  402592:	2400      	movne	r4, #0
  402594:	d006      	beq.n	4025a4 <__libc_init_array+0x3c>
  402596:	3401      	adds	r4, #1
  402598:	f855 3b04 	ldr.w	r3, [r5], #4
  40259c:	4798      	blx	r3
  40259e:	42a6      	cmp	r6, r4
  4025a0:	d1f9      	bne.n	402596 <__libc_init_array+0x2e>
  4025a2:	bd70      	pop	{r4, r5, r6, pc}
  4025a4:	bd70      	pop	{r4, r5, r6, pc}
  4025a6:	bf00      	nop
  4025a8:	00406fb4 	.word	0x00406fb4
  4025ac:	00406fb4 	.word	0x00406fb4
  4025b0:	00406fbc 	.word	0x00406fbc
  4025b4:	00406fb4 	.word	0x00406fb4

004025b8 <memset>:
  4025b8:	b470      	push	{r4, r5, r6}
  4025ba:	0786      	lsls	r6, r0, #30
  4025bc:	d046      	beq.n	40264c <memset+0x94>
  4025be:	1e54      	subs	r4, r2, #1
  4025c0:	2a00      	cmp	r2, #0
  4025c2:	d041      	beq.n	402648 <memset+0x90>
  4025c4:	b2ca      	uxtb	r2, r1
  4025c6:	4603      	mov	r3, r0
  4025c8:	e002      	b.n	4025d0 <memset+0x18>
  4025ca:	f114 34ff 	adds.w	r4, r4, #4294967295
  4025ce:	d33b      	bcc.n	402648 <memset+0x90>
  4025d0:	f803 2b01 	strb.w	r2, [r3], #1
  4025d4:	079d      	lsls	r5, r3, #30
  4025d6:	d1f8      	bne.n	4025ca <memset+0x12>
  4025d8:	2c03      	cmp	r4, #3
  4025da:	d92e      	bls.n	40263a <memset+0x82>
  4025dc:	b2cd      	uxtb	r5, r1
  4025de:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  4025e2:	2c0f      	cmp	r4, #15
  4025e4:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  4025e8:	d919      	bls.n	40261e <memset+0x66>
  4025ea:	f103 0210 	add.w	r2, r3, #16
  4025ee:	4626      	mov	r6, r4
  4025f0:	3e10      	subs	r6, #16
  4025f2:	2e0f      	cmp	r6, #15
  4025f4:	f842 5c10 	str.w	r5, [r2, #-16]
  4025f8:	f842 5c0c 	str.w	r5, [r2, #-12]
  4025fc:	f842 5c08 	str.w	r5, [r2, #-8]
  402600:	f842 5c04 	str.w	r5, [r2, #-4]
  402604:	f102 0210 	add.w	r2, r2, #16
  402608:	d8f2      	bhi.n	4025f0 <memset+0x38>
  40260a:	f1a4 0210 	sub.w	r2, r4, #16
  40260e:	f022 020f 	bic.w	r2, r2, #15
  402612:	f004 040f 	and.w	r4, r4, #15
  402616:	3210      	adds	r2, #16
  402618:	2c03      	cmp	r4, #3
  40261a:	4413      	add	r3, r2
  40261c:	d90d      	bls.n	40263a <memset+0x82>
  40261e:	461e      	mov	r6, r3
  402620:	4622      	mov	r2, r4
  402622:	3a04      	subs	r2, #4
  402624:	2a03      	cmp	r2, #3
  402626:	f846 5b04 	str.w	r5, [r6], #4
  40262a:	d8fa      	bhi.n	402622 <memset+0x6a>
  40262c:	1f22      	subs	r2, r4, #4
  40262e:	f022 0203 	bic.w	r2, r2, #3
  402632:	3204      	adds	r2, #4
  402634:	4413      	add	r3, r2
  402636:	f004 0403 	and.w	r4, r4, #3
  40263a:	b12c      	cbz	r4, 402648 <memset+0x90>
  40263c:	b2c9      	uxtb	r1, r1
  40263e:	441c      	add	r4, r3
  402640:	f803 1b01 	strb.w	r1, [r3], #1
  402644:	429c      	cmp	r4, r3
  402646:	d1fb      	bne.n	402640 <memset+0x88>
  402648:	bc70      	pop	{r4, r5, r6}
  40264a:	4770      	bx	lr
  40264c:	4614      	mov	r4, r2
  40264e:	4603      	mov	r3, r0
  402650:	e7c2      	b.n	4025d8 <memset+0x20>
  402652:	bf00      	nop

00402654 <sprintf>:
  402654:	b40e      	push	{r1, r2, r3}
  402656:	b5f0      	push	{r4, r5, r6, r7, lr}
  402658:	b09c      	sub	sp, #112	; 0x70
  40265a:	ab21      	add	r3, sp, #132	; 0x84
  40265c:	490f      	ldr	r1, [pc, #60]	; (40269c <sprintf+0x48>)
  40265e:	f853 2b04 	ldr.w	r2, [r3], #4
  402662:	9301      	str	r3, [sp, #4]
  402664:	4605      	mov	r5, r0
  402666:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  40266a:	6808      	ldr	r0, [r1, #0]
  40266c:	9502      	str	r5, [sp, #8]
  40266e:	f44f 7702 	mov.w	r7, #520	; 0x208
  402672:	f64f 76ff 	movw	r6, #65535	; 0xffff
  402676:	a902      	add	r1, sp, #8
  402678:	9506      	str	r5, [sp, #24]
  40267a:	f8ad 7014 	strh.w	r7, [sp, #20]
  40267e:	9404      	str	r4, [sp, #16]
  402680:	9407      	str	r4, [sp, #28]
  402682:	f8ad 6016 	strh.w	r6, [sp, #22]
  402686:	f000 f80b 	bl	4026a0 <_svfprintf_r>
  40268a:	9b02      	ldr	r3, [sp, #8]
  40268c:	2200      	movs	r2, #0
  40268e:	701a      	strb	r2, [r3, #0]
  402690:	b01c      	add	sp, #112	; 0x70
  402692:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  402696:	b003      	add	sp, #12
  402698:	4770      	bx	lr
  40269a:	bf00      	nop
  40269c:	20400020 	.word	0x20400020

004026a0 <_svfprintf_r>:
  4026a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4026a4:	b0c3      	sub	sp, #268	; 0x10c
  4026a6:	460c      	mov	r4, r1
  4026a8:	910b      	str	r1, [sp, #44]	; 0x2c
  4026aa:	4692      	mov	sl, r2
  4026ac:	930f      	str	r3, [sp, #60]	; 0x3c
  4026ae:	900c      	str	r0, [sp, #48]	; 0x30
  4026b0:	f002 fa0e 	bl	404ad0 <_localeconv_r>
  4026b4:	6803      	ldr	r3, [r0, #0]
  4026b6:	931a      	str	r3, [sp, #104]	; 0x68
  4026b8:	4618      	mov	r0, r3
  4026ba:	f003 f8e1 	bl	405880 <strlen>
  4026be:	89a3      	ldrh	r3, [r4, #12]
  4026c0:	9019      	str	r0, [sp, #100]	; 0x64
  4026c2:	0619      	lsls	r1, r3, #24
  4026c4:	d503      	bpl.n	4026ce <_svfprintf_r+0x2e>
  4026c6:	6923      	ldr	r3, [r4, #16]
  4026c8:	2b00      	cmp	r3, #0
  4026ca:	f001 8003 	beq.w	4036d4 <_svfprintf_r+0x1034>
  4026ce:	2300      	movs	r3, #0
  4026d0:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
  4026d4:	9313      	str	r3, [sp, #76]	; 0x4c
  4026d6:	9315      	str	r3, [sp, #84]	; 0x54
  4026d8:	9314      	str	r3, [sp, #80]	; 0x50
  4026da:	9327      	str	r3, [sp, #156]	; 0x9c
  4026dc:	9326      	str	r3, [sp, #152]	; 0x98
  4026de:	9318      	str	r3, [sp, #96]	; 0x60
  4026e0:	931b      	str	r3, [sp, #108]	; 0x6c
  4026e2:	9309      	str	r3, [sp, #36]	; 0x24
  4026e4:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
  4026e8:	46c8      	mov	r8, r9
  4026ea:	9316      	str	r3, [sp, #88]	; 0x58
  4026ec:	9317      	str	r3, [sp, #92]	; 0x5c
  4026ee:	f89a 3000 	ldrb.w	r3, [sl]
  4026f2:	4654      	mov	r4, sl
  4026f4:	b1e3      	cbz	r3, 402730 <_svfprintf_r+0x90>
  4026f6:	2b25      	cmp	r3, #37	; 0x25
  4026f8:	d102      	bne.n	402700 <_svfprintf_r+0x60>
  4026fa:	e019      	b.n	402730 <_svfprintf_r+0x90>
  4026fc:	2b25      	cmp	r3, #37	; 0x25
  4026fe:	d003      	beq.n	402708 <_svfprintf_r+0x68>
  402700:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  402704:	2b00      	cmp	r3, #0
  402706:	d1f9      	bne.n	4026fc <_svfprintf_r+0x5c>
  402708:	eba4 050a 	sub.w	r5, r4, sl
  40270c:	b185      	cbz	r5, 402730 <_svfprintf_r+0x90>
  40270e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402710:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402712:	f8c8 a000 	str.w	sl, [r8]
  402716:	3301      	adds	r3, #1
  402718:	442a      	add	r2, r5
  40271a:	2b07      	cmp	r3, #7
  40271c:	f8c8 5004 	str.w	r5, [r8, #4]
  402720:	9227      	str	r2, [sp, #156]	; 0x9c
  402722:	9326      	str	r3, [sp, #152]	; 0x98
  402724:	dc7f      	bgt.n	402826 <_svfprintf_r+0x186>
  402726:	f108 0808 	add.w	r8, r8, #8
  40272a:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40272c:	442b      	add	r3, r5
  40272e:	9309      	str	r3, [sp, #36]	; 0x24
  402730:	7823      	ldrb	r3, [r4, #0]
  402732:	2b00      	cmp	r3, #0
  402734:	d07f      	beq.n	402836 <_svfprintf_r+0x196>
  402736:	2300      	movs	r3, #0
  402738:	461a      	mov	r2, r3
  40273a:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  40273e:	4619      	mov	r1, r3
  402740:	930d      	str	r3, [sp, #52]	; 0x34
  402742:	469b      	mov	fp, r3
  402744:	f04f 30ff 	mov.w	r0, #4294967295
  402748:	7863      	ldrb	r3, [r4, #1]
  40274a:	900a      	str	r0, [sp, #40]	; 0x28
  40274c:	f104 0a01 	add.w	sl, r4, #1
  402750:	f10a 0a01 	add.w	sl, sl, #1
  402754:	f1a3 0020 	sub.w	r0, r3, #32
  402758:	2858      	cmp	r0, #88	; 0x58
  40275a:	f200 83c1 	bhi.w	402ee0 <_svfprintf_r+0x840>
  40275e:	e8df f010 	tbh	[pc, r0, lsl #1]
  402762:	0238      	.short	0x0238
  402764:	03bf03bf 	.word	0x03bf03bf
  402768:	03bf0240 	.word	0x03bf0240
  40276c:	03bf03bf 	.word	0x03bf03bf
  402770:	03bf03bf 	.word	0x03bf03bf
  402774:	024503bf 	.word	0x024503bf
  402778:	03bf0203 	.word	0x03bf0203
  40277c:	026b005d 	.word	0x026b005d
  402780:	028603bf 	.word	0x028603bf
  402784:	039d039d 	.word	0x039d039d
  402788:	039d039d 	.word	0x039d039d
  40278c:	039d039d 	.word	0x039d039d
  402790:	039d039d 	.word	0x039d039d
  402794:	03bf039d 	.word	0x03bf039d
  402798:	03bf03bf 	.word	0x03bf03bf
  40279c:	03bf03bf 	.word	0x03bf03bf
  4027a0:	03bf03bf 	.word	0x03bf03bf
  4027a4:	03bf03bf 	.word	0x03bf03bf
  4027a8:	033703bf 	.word	0x033703bf
  4027ac:	03bf0357 	.word	0x03bf0357
  4027b0:	03bf0357 	.word	0x03bf0357
  4027b4:	03bf03bf 	.word	0x03bf03bf
  4027b8:	039803bf 	.word	0x039803bf
  4027bc:	03bf03bf 	.word	0x03bf03bf
  4027c0:	03bf03ad 	.word	0x03bf03ad
  4027c4:	03bf03bf 	.word	0x03bf03bf
  4027c8:	03bf03bf 	.word	0x03bf03bf
  4027cc:	03bf0259 	.word	0x03bf0259
  4027d0:	031e03bf 	.word	0x031e03bf
  4027d4:	03bf03bf 	.word	0x03bf03bf
  4027d8:	03bf03bf 	.word	0x03bf03bf
  4027dc:	03bf03bf 	.word	0x03bf03bf
  4027e0:	03bf03bf 	.word	0x03bf03bf
  4027e4:	03bf03bf 	.word	0x03bf03bf
  4027e8:	02db02c6 	.word	0x02db02c6
  4027ec:	03570357 	.word	0x03570357
  4027f0:	028b0357 	.word	0x028b0357
  4027f4:	03bf02db 	.word	0x03bf02db
  4027f8:	029003bf 	.word	0x029003bf
  4027fc:	029d03bf 	.word	0x029d03bf
  402800:	02b401cc 	.word	0x02b401cc
  402804:	03bf0208 	.word	0x03bf0208
  402808:	03bf01e1 	.word	0x03bf01e1
  40280c:	03bf007e 	.word	0x03bf007e
  402810:	020d03bf 	.word	0x020d03bf
  402814:	980d      	ldr	r0, [sp, #52]	; 0x34
  402816:	930f      	str	r3, [sp, #60]	; 0x3c
  402818:	4240      	negs	r0, r0
  40281a:	900d      	str	r0, [sp, #52]	; 0x34
  40281c:	f04b 0b04 	orr.w	fp, fp, #4
  402820:	f89a 3000 	ldrb.w	r3, [sl]
  402824:	e794      	b.n	402750 <_svfprintf_r+0xb0>
  402826:	aa25      	add	r2, sp, #148	; 0x94
  402828:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40282a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40282c:	f003 f896 	bl	40595c <__ssprint_r>
  402830:	b940      	cbnz	r0, 402844 <_svfprintf_r+0x1a4>
  402832:	46c8      	mov	r8, r9
  402834:	e779      	b.n	40272a <_svfprintf_r+0x8a>
  402836:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  402838:	b123      	cbz	r3, 402844 <_svfprintf_r+0x1a4>
  40283a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40283c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40283e:	aa25      	add	r2, sp, #148	; 0x94
  402840:	f003 f88c 	bl	40595c <__ssprint_r>
  402844:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  402846:	899b      	ldrh	r3, [r3, #12]
  402848:	f013 0f40 	tst.w	r3, #64	; 0x40
  40284c:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40284e:	bf18      	it	ne
  402850:	f04f 33ff 	movne.w	r3, #4294967295
  402854:	9309      	str	r3, [sp, #36]	; 0x24
  402856:	9809      	ldr	r0, [sp, #36]	; 0x24
  402858:	b043      	add	sp, #268	; 0x10c
  40285a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40285e:	f01b 0f20 	tst.w	fp, #32
  402862:	9311      	str	r3, [sp, #68]	; 0x44
  402864:	f040 81dd 	bne.w	402c22 <_svfprintf_r+0x582>
  402868:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40286a:	f01b 0f10 	tst.w	fp, #16
  40286e:	4613      	mov	r3, r2
  402870:	f040 856e 	bne.w	403350 <_svfprintf_r+0xcb0>
  402874:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402878:	f000 856a 	beq.w	403350 <_svfprintf_r+0xcb0>
  40287c:	8814      	ldrh	r4, [r2, #0]
  40287e:	3204      	adds	r2, #4
  402880:	2500      	movs	r5, #0
  402882:	2301      	movs	r3, #1
  402884:	920f      	str	r2, [sp, #60]	; 0x3c
  402886:	2700      	movs	r7, #0
  402888:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  40288c:	990a      	ldr	r1, [sp, #40]	; 0x28
  40288e:	1c4a      	adds	r2, r1, #1
  402890:	f000 8265 	beq.w	402d5e <_svfprintf_r+0x6be>
  402894:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  402898:	9207      	str	r2, [sp, #28]
  40289a:	ea54 0205 	orrs.w	r2, r4, r5
  40289e:	f040 8264 	bne.w	402d6a <_svfprintf_r+0x6ca>
  4028a2:	2900      	cmp	r1, #0
  4028a4:	f040 843c 	bne.w	403120 <_svfprintf_r+0xa80>
  4028a8:	2b00      	cmp	r3, #0
  4028aa:	f040 84d7 	bne.w	40325c <_svfprintf_r+0xbbc>
  4028ae:	f01b 0301 	ands.w	r3, fp, #1
  4028b2:	930e      	str	r3, [sp, #56]	; 0x38
  4028b4:	f000 8604 	beq.w	4034c0 <_svfprintf_r+0xe20>
  4028b8:	ae42      	add	r6, sp, #264	; 0x108
  4028ba:	2330      	movs	r3, #48	; 0x30
  4028bc:	f806 3d41 	strb.w	r3, [r6, #-65]!
  4028c0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4028c2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4028c4:	4293      	cmp	r3, r2
  4028c6:	bfb8      	it	lt
  4028c8:	4613      	movlt	r3, r2
  4028ca:	9308      	str	r3, [sp, #32]
  4028cc:	2300      	movs	r3, #0
  4028ce:	9312      	str	r3, [sp, #72]	; 0x48
  4028d0:	b117      	cbz	r7, 4028d8 <_svfprintf_r+0x238>
  4028d2:	9b08      	ldr	r3, [sp, #32]
  4028d4:	3301      	adds	r3, #1
  4028d6:	9308      	str	r3, [sp, #32]
  4028d8:	9b07      	ldr	r3, [sp, #28]
  4028da:	f013 0302 	ands.w	r3, r3, #2
  4028de:	9310      	str	r3, [sp, #64]	; 0x40
  4028e0:	d002      	beq.n	4028e8 <_svfprintf_r+0x248>
  4028e2:	9b08      	ldr	r3, [sp, #32]
  4028e4:	3302      	adds	r3, #2
  4028e6:	9308      	str	r3, [sp, #32]
  4028e8:	9b07      	ldr	r3, [sp, #28]
  4028ea:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  4028ee:	f040 830e 	bne.w	402f0e <_svfprintf_r+0x86e>
  4028f2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4028f4:	9a08      	ldr	r2, [sp, #32]
  4028f6:	eba3 0b02 	sub.w	fp, r3, r2
  4028fa:	f1bb 0f00 	cmp.w	fp, #0
  4028fe:	f340 8306 	ble.w	402f0e <_svfprintf_r+0x86e>
  402902:	f1bb 0f10 	cmp.w	fp, #16
  402906:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402908:	9a26      	ldr	r2, [sp, #152]	; 0x98
  40290a:	dd29      	ble.n	402960 <_svfprintf_r+0x2c0>
  40290c:	4643      	mov	r3, r8
  40290e:	4621      	mov	r1, r4
  402910:	46a8      	mov	r8, r5
  402912:	2710      	movs	r7, #16
  402914:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402916:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402918:	e006      	b.n	402928 <_svfprintf_r+0x288>
  40291a:	f1ab 0b10 	sub.w	fp, fp, #16
  40291e:	f1bb 0f10 	cmp.w	fp, #16
  402922:	f103 0308 	add.w	r3, r3, #8
  402926:	dd18      	ble.n	40295a <_svfprintf_r+0x2ba>
  402928:	3201      	adds	r2, #1
  40292a:	48b7      	ldr	r0, [pc, #732]	; (402c08 <_svfprintf_r+0x568>)
  40292c:	9226      	str	r2, [sp, #152]	; 0x98
  40292e:	3110      	adds	r1, #16
  402930:	2a07      	cmp	r2, #7
  402932:	9127      	str	r1, [sp, #156]	; 0x9c
  402934:	e883 0081 	stmia.w	r3, {r0, r7}
  402938:	ddef      	ble.n	40291a <_svfprintf_r+0x27a>
  40293a:	aa25      	add	r2, sp, #148	; 0x94
  40293c:	4629      	mov	r1, r5
  40293e:	4620      	mov	r0, r4
  402940:	f003 f80c 	bl	40595c <__ssprint_r>
  402944:	2800      	cmp	r0, #0
  402946:	f47f af7d 	bne.w	402844 <_svfprintf_r+0x1a4>
  40294a:	f1ab 0b10 	sub.w	fp, fp, #16
  40294e:	f1bb 0f10 	cmp.w	fp, #16
  402952:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402954:	9a26      	ldr	r2, [sp, #152]	; 0x98
  402956:	464b      	mov	r3, r9
  402958:	dce6      	bgt.n	402928 <_svfprintf_r+0x288>
  40295a:	4645      	mov	r5, r8
  40295c:	460c      	mov	r4, r1
  40295e:	4698      	mov	r8, r3
  402960:	3201      	adds	r2, #1
  402962:	4ba9      	ldr	r3, [pc, #676]	; (402c08 <_svfprintf_r+0x568>)
  402964:	9226      	str	r2, [sp, #152]	; 0x98
  402966:	445c      	add	r4, fp
  402968:	2a07      	cmp	r2, #7
  40296a:	9427      	str	r4, [sp, #156]	; 0x9c
  40296c:	e888 0808 	stmia.w	r8, {r3, fp}
  402970:	f300 8498 	bgt.w	4032a4 <_svfprintf_r+0xc04>
  402974:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402978:	f108 0808 	add.w	r8, r8, #8
  40297c:	b177      	cbz	r7, 40299c <_svfprintf_r+0x2fc>
  40297e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402980:	3301      	adds	r3, #1
  402982:	3401      	adds	r4, #1
  402984:	f10d 0177 	add.w	r1, sp, #119	; 0x77
  402988:	2201      	movs	r2, #1
  40298a:	2b07      	cmp	r3, #7
  40298c:	9427      	str	r4, [sp, #156]	; 0x9c
  40298e:	9326      	str	r3, [sp, #152]	; 0x98
  402990:	e888 0006 	stmia.w	r8, {r1, r2}
  402994:	f300 83db 	bgt.w	40314e <_svfprintf_r+0xaae>
  402998:	f108 0808 	add.w	r8, r8, #8
  40299c:	9b10      	ldr	r3, [sp, #64]	; 0x40
  40299e:	b16b      	cbz	r3, 4029bc <_svfprintf_r+0x31c>
  4029a0:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4029a2:	3301      	adds	r3, #1
  4029a4:	3402      	adds	r4, #2
  4029a6:	a91e      	add	r1, sp, #120	; 0x78
  4029a8:	2202      	movs	r2, #2
  4029aa:	2b07      	cmp	r3, #7
  4029ac:	9427      	str	r4, [sp, #156]	; 0x9c
  4029ae:	9326      	str	r3, [sp, #152]	; 0x98
  4029b0:	e888 0006 	stmia.w	r8, {r1, r2}
  4029b4:	f300 83d6 	bgt.w	403164 <_svfprintf_r+0xac4>
  4029b8:	f108 0808 	add.w	r8, r8, #8
  4029bc:	2d80      	cmp	r5, #128	; 0x80
  4029be:	f000 8315 	beq.w	402fec <_svfprintf_r+0x94c>
  4029c2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4029c4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4029c6:	1a9f      	subs	r7, r3, r2
  4029c8:	2f00      	cmp	r7, #0
  4029ca:	dd36      	ble.n	402a3a <_svfprintf_r+0x39a>
  4029cc:	2f10      	cmp	r7, #16
  4029ce:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4029d0:	4d8e      	ldr	r5, [pc, #568]	; (402c0c <_svfprintf_r+0x56c>)
  4029d2:	dd27      	ble.n	402a24 <_svfprintf_r+0x384>
  4029d4:	4642      	mov	r2, r8
  4029d6:	4621      	mov	r1, r4
  4029d8:	46b0      	mov	r8, r6
  4029da:	f04f 0b10 	mov.w	fp, #16
  4029de:	462e      	mov	r6, r5
  4029e0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4029e2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4029e4:	e004      	b.n	4029f0 <_svfprintf_r+0x350>
  4029e6:	3f10      	subs	r7, #16
  4029e8:	2f10      	cmp	r7, #16
  4029ea:	f102 0208 	add.w	r2, r2, #8
  4029ee:	dd15      	ble.n	402a1c <_svfprintf_r+0x37c>
  4029f0:	3301      	adds	r3, #1
  4029f2:	3110      	adds	r1, #16
  4029f4:	2b07      	cmp	r3, #7
  4029f6:	9127      	str	r1, [sp, #156]	; 0x9c
  4029f8:	9326      	str	r3, [sp, #152]	; 0x98
  4029fa:	e882 0840 	stmia.w	r2, {r6, fp}
  4029fe:	ddf2      	ble.n	4029e6 <_svfprintf_r+0x346>
  402a00:	aa25      	add	r2, sp, #148	; 0x94
  402a02:	4629      	mov	r1, r5
  402a04:	4620      	mov	r0, r4
  402a06:	f002 ffa9 	bl	40595c <__ssprint_r>
  402a0a:	2800      	cmp	r0, #0
  402a0c:	f47f af1a 	bne.w	402844 <_svfprintf_r+0x1a4>
  402a10:	3f10      	subs	r7, #16
  402a12:	2f10      	cmp	r7, #16
  402a14:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402a16:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402a18:	464a      	mov	r2, r9
  402a1a:	dce9      	bgt.n	4029f0 <_svfprintf_r+0x350>
  402a1c:	4635      	mov	r5, r6
  402a1e:	460c      	mov	r4, r1
  402a20:	4646      	mov	r6, r8
  402a22:	4690      	mov	r8, r2
  402a24:	3301      	adds	r3, #1
  402a26:	443c      	add	r4, r7
  402a28:	2b07      	cmp	r3, #7
  402a2a:	9427      	str	r4, [sp, #156]	; 0x9c
  402a2c:	9326      	str	r3, [sp, #152]	; 0x98
  402a2e:	e888 00a0 	stmia.w	r8, {r5, r7}
  402a32:	f300 8381 	bgt.w	403138 <_svfprintf_r+0xa98>
  402a36:	f108 0808 	add.w	r8, r8, #8
  402a3a:	9b07      	ldr	r3, [sp, #28]
  402a3c:	05df      	lsls	r7, r3, #23
  402a3e:	f100 8268 	bmi.w	402f12 <_svfprintf_r+0x872>
  402a42:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402a44:	990e      	ldr	r1, [sp, #56]	; 0x38
  402a46:	f8c8 6000 	str.w	r6, [r8]
  402a4a:	3301      	adds	r3, #1
  402a4c:	440c      	add	r4, r1
  402a4e:	2b07      	cmp	r3, #7
  402a50:	9427      	str	r4, [sp, #156]	; 0x9c
  402a52:	f8c8 1004 	str.w	r1, [r8, #4]
  402a56:	9326      	str	r3, [sp, #152]	; 0x98
  402a58:	f300 834d 	bgt.w	4030f6 <_svfprintf_r+0xa56>
  402a5c:	f108 0808 	add.w	r8, r8, #8
  402a60:	9b07      	ldr	r3, [sp, #28]
  402a62:	075b      	lsls	r3, r3, #29
  402a64:	d53a      	bpl.n	402adc <_svfprintf_r+0x43c>
  402a66:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402a68:	9a08      	ldr	r2, [sp, #32]
  402a6a:	1a9d      	subs	r5, r3, r2
  402a6c:	2d00      	cmp	r5, #0
  402a6e:	dd35      	ble.n	402adc <_svfprintf_r+0x43c>
  402a70:	2d10      	cmp	r5, #16
  402a72:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402a74:	dd20      	ble.n	402ab8 <_svfprintf_r+0x418>
  402a76:	2610      	movs	r6, #16
  402a78:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  402a7a:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
  402a7e:	e004      	b.n	402a8a <_svfprintf_r+0x3ea>
  402a80:	3d10      	subs	r5, #16
  402a82:	2d10      	cmp	r5, #16
  402a84:	f108 0808 	add.w	r8, r8, #8
  402a88:	dd16      	ble.n	402ab8 <_svfprintf_r+0x418>
  402a8a:	3301      	adds	r3, #1
  402a8c:	4a5e      	ldr	r2, [pc, #376]	; (402c08 <_svfprintf_r+0x568>)
  402a8e:	9326      	str	r3, [sp, #152]	; 0x98
  402a90:	3410      	adds	r4, #16
  402a92:	2b07      	cmp	r3, #7
  402a94:	9427      	str	r4, [sp, #156]	; 0x9c
  402a96:	e888 0044 	stmia.w	r8, {r2, r6}
  402a9a:	ddf1      	ble.n	402a80 <_svfprintf_r+0x3e0>
  402a9c:	aa25      	add	r2, sp, #148	; 0x94
  402a9e:	4659      	mov	r1, fp
  402aa0:	4638      	mov	r0, r7
  402aa2:	f002 ff5b 	bl	40595c <__ssprint_r>
  402aa6:	2800      	cmp	r0, #0
  402aa8:	f47f aecc 	bne.w	402844 <_svfprintf_r+0x1a4>
  402aac:	3d10      	subs	r5, #16
  402aae:	2d10      	cmp	r5, #16
  402ab0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402ab2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402ab4:	46c8      	mov	r8, r9
  402ab6:	dce8      	bgt.n	402a8a <_svfprintf_r+0x3ea>
  402ab8:	3301      	adds	r3, #1
  402aba:	4a53      	ldr	r2, [pc, #332]	; (402c08 <_svfprintf_r+0x568>)
  402abc:	9326      	str	r3, [sp, #152]	; 0x98
  402abe:	442c      	add	r4, r5
  402ac0:	2b07      	cmp	r3, #7
  402ac2:	9427      	str	r4, [sp, #156]	; 0x9c
  402ac4:	e888 0024 	stmia.w	r8, {r2, r5}
  402ac8:	dd08      	ble.n	402adc <_svfprintf_r+0x43c>
  402aca:	aa25      	add	r2, sp, #148	; 0x94
  402acc:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402ace:	980c      	ldr	r0, [sp, #48]	; 0x30
  402ad0:	f002 ff44 	bl	40595c <__ssprint_r>
  402ad4:	2800      	cmp	r0, #0
  402ad6:	f47f aeb5 	bne.w	402844 <_svfprintf_r+0x1a4>
  402ada:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402adc:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402ade:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  402ae0:	9908      	ldr	r1, [sp, #32]
  402ae2:	428a      	cmp	r2, r1
  402ae4:	bfac      	ite	ge
  402ae6:	189b      	addge	r3, r3, r2
  402ae8:	185b      	addlt	r3, r3, r1
  402aea:	9309      	str	r3, [sp, #36]	; 0x24
  402aec:	2c00      	cmp	r4, #0
  402aee:	f040 830d 	bne.w	40310c <_svfprintf_r+0xa6c>
  402af2:	2300      	movs	r3, #0
  402af4:	9326      	str	r3, [sp, #152]	; 0x98
  402af6:	46c8      	mov	r8, r9
  402af8:	e5f9      	b.n	4026ee <_svfprintf_r+0x4e>
  402afa:	9311      	str	r3, [sp, #68]	; 0x44
  402afc:	f01b 0320 	ands.w	r3, fp, #32
  402b00:	f040 81e3 	bne.w	402eca <_svfprintf_r+0x82a>
  402b04:	f01b 0210 	ands.w	r2, fp, #16
  402b08:	f040 842e 	bne.w	403368 <_svfprintf_r+0xcc8>
  402b0c:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  402b10:	f000 842a 	beq.w	403368 <_svfprintf_r+0xcc8>
  402b14:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402b16:	4613      	mov	r3, r2
  402b18:	460a      	mov	r2, r1
  402b1a:	3204      	adds	r2, #4
  402b1c:	880c      	ldrh	r4, [r1, #0]
  402b1e:	920f      	str	r2, [sp, #60]	; 0x3c
  402b20:	2500      	movs	r5, #0
  402b22:	e6b0      	b.n	402886 <_svfprintf_r+0x1e6>
  402b24:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402b26:	9311      	str	r3, [sp, #68]	; 0x44
  402b28:	6816      	ldr	r6, [r2, #0]
  402b2a:	2400      	movs	r4, #0
  402b2c:	f88d 4077 	strb.w	r4, [sp, #119]	; 0x77
  402b30:	1d15      	adds	r5, r2, #4
  402b32:	2e00      	cmp	r6, #0
  402b34:	f000 86a7 	beq.w	403886 <_svfprintf_r+0x11e6>
  402b38:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  402b3a:	1c53      	adds	r3, r2, #1
  402b3c:	f000 8609 	beq.w	403752 <_svfprintf_r+0x10b2>
  402b40:	4621      	mov	r1, r4
  402b42:	4630      	mov	r0, r6
  402b44:	f002 fa8c 	bl	405060 <memchr>
  402b48:	2800      	cmp	r0, #0
  402b4a:	f000 86e1 	beq.w	403910 <_svfprintf_r+0x1270>
  402b4e:	1b83      	subs	r3, r0, r6
  402b50:	930e      	str	r3, [sp, #56]	; 0x38
  402b52:	940a      	str	r4, [sp, #40]	; 0x28
  402b54:	950f      	str	r5, [sp, #60]	; 0x3c
  402b56:	f8cd b01c 	str.w	fp, [sp, #28]
  402b5a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402b5e:	9308      	str	r3, [sp, #32]
  402b60:	9412      	str	r4, [sp, #72]	; 0x48
  402b62:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402b66:	e6b3      	b.n	4028d0 <_svfprintf_r+0x230>
  402b68:	f89a 3000 	ldrb.w	r3, [sl]
  402b6c:	2201      	movs	r2, #1
  402b6e:	212b      	movs	r1, #43	; 0x2b
  402b70:	e5ee      	b.n	402750 <_svfprintf_r+0xb0>
  402b72:	f04b 0b20 	orr.w	fp, fp, #32
  402b76:	f89a 3000 	ldrb.w	r3, [sl]
  402b7a:	e5e9      	b.n	402750 <_svfprintf_r+0xb0>
  402b7c:	9311      	str	r3, [sp, #68]	; 0x44
  402b7e:	2a00      	cmp	r2, #0
  402b80:	f040 8795 	bne.w	403aae <_svfprintf_r+0x140e>
  402b84:	4b22      	ldr	r3, [pc, #136]	; (402c10 <_svfprintf_r+0x570>)
  402b86:	9318      	str	r3, [sp, #96]	; 0x60
  402b88:	f01b 0f20 	tst.w	fp, #32
  402b8c:	f040 8111 	bne.w	402db2 <_svfprintf_r+0x712>
  402b90:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402b92:	f01b 0f10 	tst.w	fp, #16
  402b96:	4613      	mov	r3, r2
  402b98:	f040 83e1 	bne.w	40335e <_svfprintf_r+0xcbe>
  402b9c:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402ba0:	f000 83dd 	beq.w	40335e <_svfprintf_r+0xcbe>
  402ba4:	3304      	adds	r3, #4
  402ba6:	8814      	ldrh	r4, [r2, #0]
  402ba8:	930f      	str	r3, [sp, #60]	; 0x3c
  402baa:	2500      	movs	r5, #0
  402bac:	f01b 0f01 	tst.w	fp, #1
  402bb0:	f000 810c 	beq.w	402dcc <_svfprintf_r+0x72c>
  402bb4:	ea54 0305 	orrs.w	r3, r4, r5
  402bb8:	f000 8108 	beq.w	402dcc <_svfprintf_r+0x72c>
  402bbc:	2330      	movs	r3, #48	; 0x30
  402bbe:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  402bc2:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
  402bc6:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
  402bca:	f04b 0b02 	orr.w	fp, fp, #2
  402bce:	2302      	movs	r3, #2
  402bd0:	e659      	b.n	402886 <_svfprintf_r+0x1e6>
  402bd2:	f89a 3000 	ldrb.w	r3, [sl]
  402bd6:	2900      	cmp	r1, #0
  402bd8:	f47f adba 	bne.w	402750 <_svfprintf_r+0xb0>
  402bdc:	2201      	movs	r2, #1
  402bde:	2120      	movs	r1, #32
  402be0:	e5b6      	b.n	402750 <_svfprintf_r+0xb0>
  402be2:	f04b 0b01 	orr.w	fp, fp, #1
  402be6:	f89a 3000 	ldrb.w	r3, [sl]
  402bea:	e5b1      	b.n	402750 <_svfprintf_r+0xb0>
  402bec:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  402bee:	6823      	ldr	r3, [r4, #0]
  402bf0:	930d      	str	r3, [sp, #52]	; 0x34
  402bf2:	4618      	mov	r0, r3
  402bf4:	2800      	cmp	r0, #0
  402bf6:	4623      	mov	r3, r4
  402bf8:	f103 0304 	add.w	r3, r3, #4
  402bfc:	f6ff ae0a 	blt.w	402814 <_svfprintf_r+0x174>
  402c00:	930f      	str	r3, [sp, #60]	; 0x3c
  402c02:	f89a 3000 	ldrb.w	r3, [sl]
  402c06:	e5a3      	b.n	402750 <_svfprintf_r+0xb0>
  402c08:	00406d64 	.word	0x00406d64
  402c0c:	00406d74 	.word	0x00406d74
  402c10:	00406d44 	.word	0x00406d44
  402c14:	f04b 0b10 	orr.w	fp, fp, #16
  402c18:	f01b 0f20 	tst.w	fp, #32
  402c1c:	9311      	str	r3, [sp, #68]	; 0x44
  402c1e:	f43f ae23 	beq.w	402868 <_svfprintf_r+0x1c8>
  402c22:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402c24:	3507      	adds	r5, #7
  402c26:	f025 0307 	bic.w	r3, r5, #7
  402c2a:	f103 0208 	add.w	r2, r3, #8
  402c2e:	e9d3 4500 	ldrd	r4, r5, [r3]
  402c32:	920f      	str	r2, [sp, #60]	; 0x3c
  402c34:	2301      	movs	r3, #1
  402c36:	e626      	b.n	402886 <_svfprintf_r+0x1e6>
  402c38:	f89a 3000 	ldrb.w	r3, [sl]
  402c3c:	2b2a      	cmp	r3, #42	; 0x2a
  402c3e:	f10a 0401 	add.w	r4, sl, #1
  402c42:	f000 8727 	beq.w	403a94 <_svfprintf_r+0x13f4>
  402c46:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402c4a:	2809      	cmp	r0, #9
  402c4c:	46a2      	mov	sl, r4
  402c4e:	f200 86ad 	bhi.w	4039ac <_svfprintf_r+0x130c>
  402c52:	2300      	movs	r3, #0
  402c54:	461c      	mov	r4, r3
  402c56:	f81a 3b01 	ldrb.w	r3, [sl], #1
  402c5a:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  402c5e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  402c62:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402c66:	2809      	cmp	r0, #9
  402c68:	d9f5      	bls.n	402c56 <_svfprintf_r+0x5b6>
  402c6a:	940a      	str	r4, [sp, #40]	; 0x28
  402c6c:	e572      	b.n	402754 <_svfprintf_r+0xb4>
  402c6e:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  402c72:	f89a 3000 	ldrb.w	r3, [sl]
  402c76:	e56b      	b.n	402750 <_svfprintf_r+0xb0>
  402c78:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  402c7c:	f89a 3000 	ldrb.w	r3, [sl]
  402c80:	e566      	b.n	402750 <_svfprintf_r+0xb0>
  402c82:	f89a 3000 	ldrb.w	r3, [sl]
  402c86:	2b6c      	cmp	r3, #108	; 0x6c
  402c88:	bf03      	ittte	eq
  402c8a:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
  402c8e:	f04b 0b20 	orreq.w	fp, fp, #32
  402c92:	f10a 0a01 	addeq.w	sl, sl, #1
  402c96:	f04b 0b10 	orrne.w	fp, fp, #16
  402c9a:	e559      	b.n	402750 <_svfprintf_r+0xb0>
  402c9c:	2a00      	cmp	r2, #0
  402c9e:	f040 8711 	bne.w	403ac4 <_svfprintf_r+0x1424>
  402ca2:	f01b 0f20 	tst.w	fp, #32
  402ca6:	f040 84f9 	bne.w	40369c <_svfprintf_r+0xffc>
  402caa:	f01b 0f10 	tst.w	fp, #16
  402cae:	f040 84ac 	bne.w	40360a <_svfprintf_r+0xf6a>
  402cb2:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402cb6:	f000 84a8 	beq.w	40360a <_svfprintf_r+0xf6a>
  402cba:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402cbc:	6813      	ldr	r3, [r2, #0]
  402cbe:	3204      	adds	r2, #4
  402cc0:	920f      	str	r2, [sp, #60]	; 0x3c
  402cc2:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
  402cc6:	801a      	strh	r2, [r3, #0]
  402cc8:	e511      	b.n	4026ee <_svfprintf_r+0x4e>
  402cca:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402ccc:	4bb3      	ldr	r3, [pc, #716]	; (402f9c <_svfprintf_r+0x8fc>)
  402cce:	680c      	ldr	r4, [r1, #0]
  402cd0:	9318      	str	r3, [sp, #96]	; 0x60
  402cd2:	2230      	movs	r2, #48	; 0x30
  402cd4:	2378      	movs	r3, #120	; 0x78
  402cd6:	3104      	adds	r1, #4
  402cd8:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
  402cdc:	9311      	str	r3, [sp, #68]	; 0x44
  402cde:	f04b 0b02 	orr.w	fp, fp, #2
  402ce2:	910f      	str	r1, [sp, #60]	; 0x3c
  402ce4:	2500      	movs	r5, #0
  402ce6:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
  402cea:	2302      	movs	r3, #2
  402cec:	e5cb      	b.n	402886 <_svfprintf_r+0x1e6>
  402cee:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402cf0:	9311      	str	r3, [sp, #68]	; 0x44
  402cf2:	680a      	ldr	r2, [r1, #0]
  402cf4:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  402cf8:	2300      	movs	r3, #0
  402cfa:	460a      	mov	r2, r1
  402cfc:	461f      	mov	r7, r3
  402cfe:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  402d02:	3204      	adds	r2, #4
  402d04:	2301      	movs	r3, #1
  402d06:	9308      	str	r3, [sp, #32]
  402d08:	f8cd b01c 	str.w	fp, [sp, #28]
  402d0c:	970a      	str	r7, [sp, #40]	; 0x28
  402d0e:	9712      	str	r7, [sp, #72]	; 0x48
  402d10:	920f      	str	r2, [sp, #60]	; 0x3c
  402d12:	930e      	str	r3, [sp, #56]	; 0x38
  402d14:	ae28      	add	r6, sp, #160	; 0xa0
  402d16:	e5df      	b.n	4028d8 <_svfprintf_r+0x238>
  402d18:	9311      	str	r3, [sp, #68]	; 0x44
  402d1a:	2a00      	cmp	r2, #0
  402d1c:	f040 86ea 	bne.w	403af4 <_svfprintf_r+0x1454>
  402d20:	f01b 0f20 	tst.w	fp, #32
  402d24:	d15d      	bne.n	402de2 <_svfprintf_r+0x742>
  402d26:	f01b 0f10 	tst.w	fp, #16
  402d2a:	f040 8308 	bne.w	40333e <_svfprintf_r+0xc9e>
  402d2e:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402d32:	f000 8304 	beq.w	40333e <_svfprintf_r+0xc9e>
  402d36:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402d38:	f9b1 4000 	ldrsh.w	r4, [r1]
  402d3c:	3104      	adds	r1, #4
  402d3e:	17e5      	asrs	r5, r4, #31
  402d40:	4622      	mov	r2, r4
  402d42:	462b      	mov	r3, r5
  402d44:	910f      	str	r1, [sp, #60]	; 0x3c
  402d46:	2a00      	cmp	r2, #0
  402d48:	f173 0300 	sbcs.w	r3, r3, #0
  402d4c:	db58      	blt.n	402e00 <_svfprintf_r+0x760>
  402d4e:	990a      	ldr	r1, [sp, #40]	; 0x28
  402d50:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402d54:	1c4a      	adds	r2, r1, #1
  402d56:	f04f 0301 	mov.w	r3, #1
  402d5a:	f47f ad9b 	bne.w	402894 <_svfprintf_r+0x1f4>
  402d5e:	ea54 0205 	orrs.w	r2, r4, r5
  402d62:	f000 81df 	beq.w	403124 <_svfprintf_r+0xa84>
  402d66:	f8cd b01c 	str.w	fp, [sp, #28]
  402d6a:	2b01      	cmp	r3, #1
  402d6c:	f000 827b 	beq.w	403266 <_svfprintf_r+0xbc6>
  402d70:	2b02      	cmp	r3, #2
  402d72:	f040 8206 	bne.w	403182 <_svfprintf_r+0xae2>
  402d76:	9818      	ldr	r0, [sp, #96]	; 0x60
  402d78:	464e      	mov	r6, r9
  402d7a:	0923      	lsrs	r3, r4, #4
  402d7c:	f004 010f 	and.w	r1, r4, #15
  402d80:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  402d84:	092a      	lsrs	r2, r5, #4
  402d86:	461c      	mov	r4, r3
  402d88:	4615      	mov	r5, r2
  402d8a:	5c43      	ldrb	r3, [r0, r1]
  402d8c:	f806 3d01 	strb.w	r3, [r6, #-1]!
  402d90:	ea54 0305 	orrs.w	r3, r4, r5
  402d94:	d1f1      	bne.n	402d7a <_svfprintf_r+0x6da>
  402d96:	eba9 0306 	sub.w	r3, r9, r6
  402d9a:	930e      	str	r3, [sp, #56]	; 0x38
  402d9c:	e590      	b.n	4028c0 <_svfprintf_r+0x220>
  402d9e:	9311      	str	r3, [sp, #68]	; 0x44
  402da0:	2a00      	cmp	r2, #0
  402da2:	f040 86a3 	bne.w	403aec <_svfprintf_r+0x144c>
  402da6:	4b7e      	ldr	r3, [pc, #504]	; (402fa0 <_svfprintf_r+0x900>)
  402da8:	9318      	str	r3, [sp, #96]	; 0x60
  402daa:	f01b 0f20 	tst.w	fp, #32
  402dae:	f43f aeef 	beq.w	402b90 <_svfprintf_r+0x4f0>
  402db2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402db4:	3507      	adds	r5, #7
  402db6:	f025 0307 	bic.w	r3, r5, #7
  402dba:	f103 0208 	add.w	r2, r3, #8
  402dbe:	f01b 0f01 	tst.w	fp, #1
  402dc2:	920f      	str	r2, [sp, #60]	; 0x3c
  402dc4:	e9d3 4500 	ldrd	r4, r5, [r3]
  402dc8:	f47f aef4 	bne.w	402bb4 <_svfprintf_r+0x514>
  402dcc:	2302      	movs	r3, #2
  402dce:	e55a      	b.n	402886 <_svfprintf_r+0x1e6>
  402dd0:	9311      	str	r3, [sp, #68]	; 0x44
  402dd2:	2a00      	cmp	r2, #0
  402dd4:	f040 8686 	bne.w	403ae4 <_svfprintf_r+0x1444>
  402dd8:	f04b 0b10 	orr.w	fp, fp, #16
  402ddc:	f01b 0f20 	tst.w	fp, #32
  402de0:	d0a1      	beq.n	402d26 <_svfprintf_r+0x686>
  402de2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402de4:	3507      	adds	r5, #7
  402de6:	f025 0507 	bic.w	r5, r5, #7
  402dea:	e9d5 2300 	ldrd	r2, r3, [r5]
  402dee:	2a00      	cmp	r2, #0
  402df0:	f105 0108 	add.w	r1, r5, #8
  402df4:	461d      	mov	r5, r3
  402df6:	f173 0300 	sbcs.w	r3, r3, #0
  402dfa:	910f      	str	r1, [sp, #60]	; 0x3c
  402dfc:	4614      	mov	r4, r2
  402dfe:	daa6      	bge.n	402d4e <_svfprintf_r+0x6ae>
  402e00:	272d      	movs	r7, #45	; 0x2d
  402e02:	4264      	negs	r4, r4
  402e04:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  402e08:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402e0c:	2301      	movs	r3, #1
  402e0e:	e53d      	b.n	40288c <_svfprintf_r+0x1ec>
  402e10:	9311      	str	r3, [sp, #68]	; 0x44
  402e12:	2a00      	cmp	r2, #0
  402e14:	f040 8662 	bne.w	403adc <_svfprintf_r+0x143c>
  402e18:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402e1a:	3507      	adds	r5, #7
  402e1c:	f025 0307 	bic.w	r3, r5, #7
  402e20:	f103 0208 	add.w	r2, r3, #8
  402e24:	920f      	str	r2, [sp, #60]	; 0x3c
  402e26:	681a      	ldr	r2, [r3, #0]
  402e28:	9215      	str	r2, [sp, #84]	; 0x54
  402e2a:	685b      	ldr	r3, [r3, #4]
  402e2c:	9314      	str	r3, [sp, #80]	; 0x50
  402e2e:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402e30:	9d15      	ldr	r5, [sp, #84]	; 0x54
  402e32:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  402e36:	4628      	mov	r0, r5
  402e38:	4621      	mov	r1, r4
  402e3a:	f04f 32ff 	mov.w	r2, #4294967295
  402e3e:	4b59      	ldr	r3, [pc, #356]	; (402fa4 <_svfprintf_r+0x904>)
  402e40:	f003 fa00 	bl	406244 <__aeabi_dcmpun>
  402e44:	2800      	cmp	r0, #0
  402e46:	f040 834a 	bne.w	4034de <_svfprintf_r+0xe3e>
  402e4a:	4628      	mov	r0, r5
  402e4c:	4621      	mov	r1, r4
  402e4e:	f04f 32ff 	mov.w	r2, #4294967295
  402e52:	4b54      	ldr	r3, [pc, #336]	; (402fa4 <_svfprintf_r+0x904>)
  402e54:	f7ff f99e 	bl	402194 <__aeabi_dcmple>
  402e58:	2800      	cmp	r0, #0
  402e5a:	f040 8340 	bne.w	4034de <_svfprintf_r+0xe3e>
  402e5e:	a815      	add	r0, sp, #84	; 0x54
  402e60:	c80d      	ldmia	r0, {r0, r2, r3}
  402e62:	9914      	ldr	r1, [sp, #80]	; 0x50
  402e64:	f7ff f98c 	bl	402180 <__aeabi_dcmplt>
  402e68:	2800      	cmp	r0, #0
  402e6a:	f040 8530 	bne.w	4038ce <_svfprintf_r+0x122e>
  402e6e:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402e72:	4e4d      	ldr	r6, [pc, #308]	; (402fa8 <_svfprintf_r+0x908>)
  402e74:	4b4d      	ldr	r3, [pc, #308]	; (402fac <_svfprintf_r+0x90c>)
  402e76:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  402e7a:	9007      	str	r0, [sp, #28]
  402e7c:	9811      	ldr	r0, [sp, #68]	; 0x44
  402e7e:	2203      	movs	r2, #3
  402e80:	2100      	movs	r1, #0
  402e82:	9208      	str	r2, [sp, #32]
  402e84:	910a      	str	r1, [sp, #40]	; 0x28
  402e86:	2847      	cmp	r0, #71	; 0x47
  402e88:	bfd8      	it	le
  402e8a:	461e      	movle	r6, r3
  402e8c:	920e      	str	r2, [sp, #56]	; 0x38
  402e8e:	9112      	str	r1, [sp, #72]	; 0x48
  402e90:	e51e      	b.n	4028d0 <_svfprintf_r+0x230>
  402e92:	f04b 0b08 	orr.w	fp, fp, #8
  402e96:	f89a 3000 	ldrb.w	r3, [sl]
  402e9a:	e459      	b.n	402750 <_svfprintf_r+0xb0>
  402e9c:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402ea0:	2300      	movs	r3, #0
  402ea2:	461c      	mov	r4, r3
  402ea4:	f81a 3b01 	ldrb.w	r3, [sl], #1
  402ea8:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  402eac:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  402eb0:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402eb4:	2809      	cmp	r0, #9
  402eb6:	d9f5      	bls.n	402ea4 <_svfprintf_r+0x804>
  402eb8:	940d      	str	r4, [sp, #52]	; 0x34
  402eba:	e44b      	b.n	402754 <_svfprintf_r+0xb4>
  402ebc:	f04b 0b10 	orr.w	fp, fp, #16
  402ec0:	9311      	str	r3, [sp, #68]	; 0x44
  402ec2:	f01b 0320 	ands.w	r3, fp, #32
  402ec6:	f43f ae1d 	beq.w	402b04 <_svfprintf_r+0x464>
  402eca:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402ecc:	3507      	adds	r5, #7
  402ece:	f025 0307 	bic.w	r3, r5, #7
  402ed2:	f103 0208 	add.w	r2, r3, #8
  402ed6:	e9d3 4500 	ldrd	r4, r5, [r3]
  402eda:	920f      	str	r2, [sp, #60]	; 0x3c
  402edc:	2300      	movs	r3, #0
  402ede:	e4d2      	b.n	402886 <_svfprintf_r+0x1e6>
  402ee0:	9311      	str	r3, [sp, #68]	; 0x44
  402ee2:	2a00      	cmp	r2, #0
  402ee4:	f040 85e7 	bne.w	403ab6 <_svfprintf_r+0x1416>
  402ee8:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402eea:	2a00      	cmp	r2, #0
  402eec:	f43f aca3 	beq.w	402836 <_svfprintf_r+0x196>
  402ef0:	2300      	movs	r3, #0
  402ef2:	2101      	movs	r1, #1
  402ef4:	461f      	mov	r7, r3
  402ef6:	9108      	str	r1, [sp, #32]
  402ef8:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  402efc:	f8cd b01c 	str.w	fp, [sp, #28]
  402f00:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  402f04:	930a      	str	r3, [sp, #40]	; 0x28
  402f06:	9312      	str	r3, [sp, #72]	; 0x48
  402f08:	910e      	str	r1, [sp, #56]	; 0x38
  402f0a:	ae28      	add	r6, sp, #160	; 0xa0
  402f0c:	e4e4      	b.n	4028d8 <_svfprintf_r+0x238>
  402f0e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402f10:	e534      	b.n	40297c <_svfprintf_r+0x2dc>
  402f12:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402f14:	2b65      	cmp	r3, #101	; 0x65
  402f16:	f340 80a7 	ble.w	403068 <_svfprintf_r+0x9c8>
  402f1a:	a815      	add	r0, sp, #84	; 0x54
  402f1c:	c80d      	ldmia	r0, {r0, r2, r3}
  402f1e:	9914      	ldr	r1, [sp, #80]	; 0x50
  402f20:	f7ff f924 	bl	40216c <__aeabi_dcmpeq>
  402f24:	2800      	cmp	r0, #0
  402f26:	f000 8150 	beq.w	4031ca <_svfprintf_r+0xb2a>
  402f2a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402f2c:	4a20      	ldr	r2, [pc, #128]	; (402fb0 <_svfprintf_r+0x910>)
  402f2e:	f8c8 2000 	str.w	r2, [r8]
  402f32:	3301      	adds	r3, #1
  402f34:	3401      	adds	r4, #1
  402f36:	2201      	movs	r2, #1
  402f38:	2b07      	cmp	r3, #7
  402f3a:	9427      	str	r4, [sp, #156]	; 0x9c
  402f3c:	9326      	str	r3, [sp, #152]	; 0x98
  402f3e:	f8c8 2004 	str.w	r2, [r8, #4]
  402f42:	f300 836a 	bgt.w	40361a <_svfprintf_r+0xf7a>
  402f46:	f108 0808 	add.w	r8, r8, #8
  402f4a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402f4c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402f4e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402f50:	4293      	cmp	r3, r2
  402f52:	db03      	blt.n	402f5c <_svfprintf_r+0x8bc>
  402f54:	9b07      	ldr	r3, [sp, #28]
  402f56:	07dd      	lsls	r5, r3, #31
  402f58:	f57f ad82 	bpl.w	402a60 <_svfprintf_r+0x3c0>
  402f5c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402f5e:	9919      	ldr	r1, [sp, #100]	; 0x64
  402f60:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  402f62:	f8c8 2000 	str.w	r2, [r8]
  402f66:	3301      	adds	r3, #1
  402f68:	440c      	add	r4, r1
  402f6a:	2b07      	cmp	r3, #7
  402f6c:	f8c8 1004 	str.w	r1, [r8, #4]
  402f70:	9427      	str	r4, [sp, #156]	; 0x9c
  402f72:	9326      	str	r3, [sp, #152]	; 0x98
  402f74:	f300 839e 	bgt.w	4036b4 <_svfprintf_r+0x1014>
  402f78:	f108 0808 	add.w	r8, r8, #8
  402f7c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402f7e:	1e5e      	subs	r6, r3, #1
  402f80:	2e00      	cmp	r6, #0
  402f82:	f77f ad6d 	ble.w	402a60 <_svfprintf_r+0x3c0>
  402f86:	2e10      	cmp	r6, #16
  402f88:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402f8a:	4d0a      	ldr	r5, [pc, #40]	; (402fb4 <_svfprintf_r+0x914>)
  402f8c:	f340 81f5 	ble.w	40337a <_svfprintf_r+0xcda>
  402f90:	4622      	mov	r2, r4
  402f92:	2710      	movs	r7, #16
  402f94:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402f98:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  402f9a:	e013      	b.n	402fc4 <_svfprintf_r+0x924>
  402f9c:	00406d44 	.word	0x00406d44
  402fa0:	00406d30 	.word	0x00406d30
  402fa4:	7fefffff 	.word	0x7fefffff
  402fa8:	00406d24 	.word	0x00406d24
  402fac:	00406d20 	.word	0x00406d20
  402fb0:	00406d60 	.word	0x00406d60
  402fb4:	00406d74 	.word	0x00406d74
  402fb8:	f108 0808 	add.w	r8, r8, #8
  402fbc:	3e10      	subs	r6, #16
  402fbe:	2e10      	cmp	r6, #16
  402fc0:	f340 81da 	ble.w	403378 <_svfprintf_r+0xcd8>
  402fc4:	3301      	adds	r3, #1
  402fc6:	3210      	adds	r2, #16
  402fc8:	2b07      	cmp	r3, #7
  402fca:	9227      	str	r2, [sp, #156]	; 0x9c
  402fcc:	9326      	str	r3, [sp, #152]	; 0x98
  402fce:	e888 00a0 	stmia.w	r8, {r5, r7}
  402fd2:	ddf1      	ble.n	402fb8 <_svfprintf_r+0x918>
  402fd4:	aa25      	add	r2, sp, #148	; 0x94
  402fd6:	4621      	mov	r1, r4
  402fd8:	4658      	mov	r0, fp
  402fda:	f002 fcbf 	bl	40595c <__ssprint_r>
  402fde:	2800      	cmp	r0, #0
  402fe0:	f47f ac30 	bne.w	402844 <_svfprintf_r+0x1a4>
  402fe4:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402fe6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402fe8:	46c8      	mov	r8, r9
  402fea:	e7e7      	b.n	402fbc <_svfprintf_r+0x91c>
  402fec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402fee:	9a08      	ldr	r2, [sp, #32]
  402ff0:	1a9f      	subs	r7, r3, r2
  402ff2:	2f00      	cmp	r7, #0
  402ff4:	f77f ace5 	ble.w	4029c2 <_svfprintf_r+0x322>
  402ff8:	2f10      	cmp	r7, #16
  402ffa:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402ffc:	4db6      	ldr	r5, [pc, #728]	; (4032d8 <_svfprintf_r+0xc38>)
  402ffe:	dd27      	ble.n	403050 <_svfprintf_r+0x9b0>
  403000:	4642      	mov	r2, r8
  403002:	4621      	mov	r1, r4
  403004:	46b0      	mov	r8, r6
  403006:	f04f 0b10 	mov.w	fp, #16
  40300a:	462e      	mov	r6, r5
  40300c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40300e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  403010:	e004      	b.n	40301c <_svfprintf_r+0x97c>
  403012:	3f10      	subs	r7, #16
  403014:	2f10      	cmp	r7, #16
  403016:	f102 0208 	add.w	r2, r2, #8
  40301a:	dd15      	ble.n	403048 <_svfprintf_r+0x9a8>
  40301c:	3301      	adds	r3, #1
  40301e:	3110      	adds	r1, #16
  403020:	2b07      	cmp	r3, #7
  403022:	9127      	str	r1, [sp, #156]	; 0x9c
  403024:	9326      	str	r3, [sp, #152]	; 0x98
  403026:	e882 0840 	stmia.w	r2, {r6, fp}
  40302a:	ddf2      	ble.n	403012 <_svfprintf_r+0x972>
  40302c:	aa25      	add	r2, sp, #148	; 0x94
  40302e:	4629      	mov	r1, r5
  403030:	4620      	mov	r0, r4
  403032:	f002 fc93 	bl	40595c <__ssprint_r>
  403036:	2800      	cmp	r0, #0
  403038:	f47f ac04 	bne.w	402844 <_svfprintf_r+0x1a4>
  40303c:	3f10      	subs	r7, #16
  40303e:	2f10      	cmp	r7, #16
  403040:	9927      	ldr	r1, [sp, #156]	; 0x9c
  403042:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403044:	464a      	mov	r2, r9
  403046:	dce9      	bgt.n	40301c <_svfprintf_r+0x97c>
  403048:	4635      	mov	r5, r6
  40304a:	460c      	mov	r4, r1
  40304c:	4646      	mov	r6, r8
  40304e:	4690      	mov	r8, r2
  403050:	3301      	adds	r3, #1
  403052:	443c      	add	r4, r7
  403054:	2b07      	cmp	r3, #7
  403056:	9427      	str	r4, [sp, #156]	; 0x9c
  403058:	9326      	str	r3, [sp, #152]	; 0x98
  40305a:	e888 00a0 	stmia.w	r8, {r5, r7}
  40305e:	f300 8232 	bgt.w	4034c6 <_svfprintf_r+0xe26>
  403062:	f108 0808 	add.w	r8, r8, #8
  403066:	e4ac      	b.n	4029c2 <_svfprintf_r+0x322>
  403068:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40306a:	9f26      	ldr	r7, [sp, #152]	; 0x98
  40306c:	2b01      	cmp	r3, #1
  40306e:	f340 81fe 	ble.w	40346e <_svfprintf_r+0xdce>
  403072:	3701      	adds	r7, #1
  403074:	3401      	adds	r4, #1
  403076:	2301      	movs	r3, #1
  403078:	2f07      	cmp	r7, #7
  40307a:	9427      	str	r4, [sp, #156]	; 0x9c
  40307c:	9726      	str	r7, [sp, #152]	; 0x98
  40307e:	f8c8 6000 	str.w	r6, [r8]
  403082:	f8c8 3004 	str.w	r3, [r8, #4]
  403086:	f300 8203 	bgt.w	403490 <_svfprintf_r+0xdf0>
  40308a:	f108 0808 	add.w	r8, r8, #8
  40308e:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403090:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  403092:	f8c8 3000 	str.w	r3, [r8]
  403096:	3701      	adds	r7, #1
  403098:	4414      	add	r4, r2
  40309a:	2f07      	cmp	r7, #7
  40309c:	9427      	str	r4, [sp, #156]	; 0x9c
  40309e:	9726      	str	r7, [sp, #152]	; 0x98
  4030a0:	f8c8 2004 	str.w	r2, [r8, #4]
  4030a4:	f300 8200 	bgt.w	4034a8 <_svfprintf_r+0xe08>
  4030a8:	f108 0808 	add.w	r8, r8, #8
  4030ac:	a815      	add	r0, sp, #84	; 0x54
  4030ae:	c80d      	ldmia	r0, {r0, r2, r3}
  4030b0:	9914      	ldr	r1, [sp, #80]	; 0x50
  4030b2:	f7ff f85b 	bl	40216c <__aeabi_dcmpeq>
  4030b6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4030b8:	2800      	cmp	r0, #0
  4030ba:	f040 8101 	bne.w	4032c0 <_svfprintf_r+0xc20>
  4030be:	3b01      	subs	r3, #1
  4030c0:	3701      	adds	r7, #1
  4030c2:	3601      	adds	r6, #1
  4030c4:	441c      	add	r4, r3
  4030c6:	2f07      	cmp	r7, #7
  4030c8:	9726      	str	r7, [sp, #152]	; 0x98
  4030ca:	9427      	str	r4, [sp, #156]	; 0x9c
  4030cc:	f8c8 6000 	str.w	r6, [r8]
  4030d0:	f8c8 3004 	str.w	r3, [r8, #4]
  4030d4:	f300 8127 	bgt.w	403326 <_svfprintf_r+0xc86>
  4030d8:	f108 0808 	add.w	r8, r8, #8
  4030dc:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  4030de:	f8c8 2004 	str.w	r2, [r8, #4]
  4030e2:	3701      	adds	r7, #1
  4030e4:	4414      	add	r4, r2
  4030e6:	ab21      	add	r3, sp, #132	; 0x84
  4030e8:	2f07      	cmp	r7, #7
  4030ea:	9427      	str	r4, [sp, #156]	; 0x9c
  4030ec:	9726      	str	r7, [sp, #152]	; 0x98
  4030ee:	f8c8 3000 	str.w	r3, [r8]
  4030f2:	f77f acb3 	ble.w	402a5c <_svfprintf_r+0x3bc>
  4030f6:	aa25      	add	r2, sp, #148	; 0x94
  4030f8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4030fa:	980c      	ldr	r0, [sp, #48]	; 0x30
  4030fc:	f002 fc2e 	bl	40595c <__ssprint_r>
  403100:	2800      	cmp	r0, #0
  403102:	f47f ab9f 	bne.w	402844 <_svfprintf_r+0x1a4>
  403106:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403108:	46c8      	mov	r8, r9
  40310a:	e4a9      	b.n	402a60 <_svfprintf_r+0x3c0>
  40310c:	aa25      	add	r2, sp, #148	; 0x94
  40310e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403110:	980c      	ldr	r0, [sp, #48]	; 0x30
  403112:	f002 fc23 	bl	40595c <__ssprint_r>
  403116:	2800      	cmp	r0, #0
  403118:	f43f aceb 	beq.w	402af2 <_svfprintf_r+0x452>
  40311c:	f7ff bb92 	b.w	402844 <_svfprintf_r+0x1a4>
  403120:	f8dd b01c 	ldr.w	fp, [sp, #28]
  403124:	2b01      	cmp	r3, #1
  403126:	f000 8134 	beq.w	403392 <_svfprintf_r+0xcf2>
  40312a:	2b02      	cmp	r3, #2
  40312c:	d125      	bne.n	40317a <_svfprintf_r+0xada>
  40312e:	f8cd b01c 	str.w	fp, [sp, #28]
  403132:	2400      	movs	r4, #0
  403134:	2500      	movs	r5, #0
  403136:	e61e      	b.n	402d76 <_svfprintf_r+0x6d6>
  403138:	aa25      	add	r2, sp, #148	; 0x94
  40313a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40313c:	980c      	ldr	r0, [sp, #48]	; 0x30
  40313e:	f002 fc0d 	bl	40595c <__ssprint_r>
  403142:	2800      	cmp	r0, #0
  403144:	f47f ab7e 	bne.w	402844 <_svfprintf_r+0x1a4>
  403148:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40314a:	46c8      	mov	r8, r9
  40314c:	e475      	b.n	402a3a <_svfprintf_r+0x39a>
  40314e:	aa25      	add	r2, sp, #148	; 0x94
  403150:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403152:	980c      	ldr	r0, [sp, #48]	; 0x30
  403154:	f002 fc02 	bl	40595c <__ssprint_r>
  403158:	2800      	cmp	r0, #0
  40315a:	f47f ab73 	bne.w	402844 <_svfprintf_r+0x1a4>
  40315e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403160:	46c8      	mov	r8, r9
  403162:	e41b      	b.n	40299c <_svfprintf_r+0x2fc>
  403164:	aa25      	add	r2, sp, #148	; 0x94
  403166:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403168:	980c      	ldr	r0, [sp, #48]	; 0x30
  40316a:	f002 fbf7 	bl	40595c <__ssprint_r>
  40316e:	2800      	cmp	r0, #0
  403170:	f47f ab68 	bne.w	402844 <_svfprintf_r+0x1a4>
  403174:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403176:	46c8      	mov	r8, r9
  403178:	e420      	b.n	4029bc <_svfprintf_r+0x31c>
  40317a:	f8cd b01c 	str.w	fp, [sp, #28]
  40317e:	2400      	movs	r4, #0
  403180:	2500      	movs	r5, #0
  403182:	4649      	mov	r1, r9
  403184:	e000      	b.n	403188 <_svfprintf_r+0xae8>
  403186:	4631      	mov	r1, r6
  403188:	08e2      	lsrs	r2, r4, #3
  40318a:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  40318e:	08e8      	lsrs	r0, r5, #3
  403190:	f004 0307 	and.w	r3, r4, #7
  403194:	4605      	mov	r5, r0
  403196:	4614      	mov	r4, r2
  403198:	3330      	adds	r3, #48	; 0x30
  40319a:	ea54 0205 	orrs.w	r2, r4, r5
  40319e:	f801 3c01 	strb.w	r3, [r1, #-1]
  4031a2:	f101 36ff 	add.w	r6, r1, #4294967295
  4031a6:	d1ee      	bne.n	403186 <_svfprintf_r+0xae6>
  4031a8:	9a07      	ldr	r2, [sp, #28]
  4031aa:	07d2      	lsls	r2, r2, #31
  4031ac:	f57f adf3 	bpl.w	402d96 <_svfprintf_r+0x6f6>
  4031b0:	2b30      	cmp	r3, #48	; 0x30
  4031b2:	f43f adf0 	beq.w	402d96 <_svfprintf_r+0x6f6>
  4031b6:	3902      	subs	r1, #2
  4031b8:	2330      	movs	r3, #48	; 0x30
  4031ba:	f806 3c01 	strb.w	r3, [r6, #-1]
  4031be:	eba9 0301 	sub.w	r3, r9, r1
  4031c2:	930e      	str	r3, [sp, #56]	; 0x38
  4031c4:	460e      	mov	r6, r1
  4031c6:	f7ff bb7b 	b.w	4028c0 <_svfprintf_r+0x220>
  4031ca:	991f      	ldr	r1, [sp, #124]	; 0x7c
  4031cc:	2900      	cmp	r1, #0
  4031ce:	f340 822e 	ble.w	40362e <_svfprintf_r+0xf8e>
  4031d2:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4031d4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  4031d6:	4293      	cmp	r3, r2
  4031d8:	bfa8      	it	ge
  4031da:	4613      	movge	r3, r2
  4031dc:	2b00      	cmp	r3, #0
  4031de:	461f      	mov	r7, r3
  4031e0:	dd0d      	ble.n	4031fe <_svfprintf_r+0xb5e>
  4031e2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4031e4:	f8c8 6000 	str.w	r6, [r8]
  4031e8:	3301      	adds	r3, #1
  4031ea:	443c      	add	r4, r7
  4031ec:	2b07      	cmp	r3, #7
  4031ee:	9427      	str	r4, [sp, #156]	; 0x9c
  4031f0:	f8c8 7004 	str.w	r7, [r8, #4]
  4031f4:	9326      	str	r3, [sp, #152]	; 0x98
  4031f6:	f300 831f 	bgt.w	403838 <_svfprintf_r+0x1198>
  4031fa:	f108 0808 	add.w	r8, r8, #8
  4031fe:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403200:	2f00      	cmp	r7, #0
  403202:	bfa8      	it	ge
  403204:	1bdb      	subge	r3, r3, r7
  403206:	2b00      	cmp	r3, #0
  403208:	461f      	mov	r7, r3
  40320a:	f340 80d6 	ble.w	4033ba <_svfprintf_r+0xd1a>
  40320e:	2f10      	cmp	r7, #16
  403210:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403212:	4d31      	ldr	r5, [pc, #196]	; (4032d8 <_svfprintf_r+0xc38>)
  403214:	f340 81ed 	ble.w	4035f2 <_svfprintf_r+0xf52>
  403218:	4642      	mov	r2, r8
  40321a:	4621      	mov	r1, r4
  40321c:	46b0      	mov	r8, r6
  40321e:	f04f 0b10 	mov.w	fp, #16
  403222:	462e      	mov	r6, r5
  403224:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403226:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  403228:	e004      	b.n	403234 <_svfprintf_r+0xb94>
  40322a:	3208      	adds	r2, #8
  40322c:	3f10      	subs	r7, #16
  40322e:	2f10      	cmp	r7, #16
  403230:	f340 81db 	ble.w	4035ea <_svfprintf_r+0xf4a>
  403234:	3301      	adds	r3, #1
  403236:	3110      	adds	r1, #16
  403238:	2b07      	cmp	r3, #7
  40323a:	9127      	str	r1, [sp, #156]	; 0x9c
  40323c:	9326      	str	r3, [sp, #152]	; 0x98
  40323e:	e882 0840 	stmia.w	r2, {r6, fp}
  403242:	ddf2      	ble.n	40322a <_svfprintf_r+0xb8a>
  403244:	aa25      	add	r2, sp, #148	; 0x94
  403246:	4629      	mov	r1, r5
  403248:	4620      	mov	r0, r4
  40324a:	f002 fb87 	bl	40595c <__ssprint_r>
  40324e:	2800      	cmp	r0, #0
  403250:	f47f aaf8 	bne.w	402844 <_svfprintf_r+0x1a4>
  403254:	9927      	ldr	r1, [sp, #156]	; 0x9c
  403256:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403258:	464a      	mov	r2, r9
  40325a:	e7e7      	b.n	40322c <_svfprintf_r+0xb8c>
  40325c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40325e:	930e      	str	r3, [sp, #56]	; 0x38
  403260:	464e      	mov	r6, r9
  403262:	f7ff bb2d 	b.w	4028c0 <_svfprintf_r+0x220>
  403266:	2d00      	cmp	r5, #0
  403268:	bf08      	it	eq
  40326a:	2c0a      	cmpeq	r4, #10
  40326c:	f0c0 808f 	bcc.w	40338e <_svfprintf_r+0xcee>
  403270:	464e      	mov	r6, r9
  403272:	4620      	mov	r0, r4
  403274:	4629      	mov	r1, r5
  403276:	220a      	movs	r2, #10
  403278:	2300      	movs	r3, #0
  40327a:	f7fe ffa9 	bl	4021d0 <__aeabi_uldivmod>
  40327e:	3230      	adds	r2, #48	; 0x30
  403280:	f806 2d01 	strb.w	r2, [r6, #-1]!
  403284:	4620      	mov	r0, r4
  403286:	4629      	mov	r1, r5
  403288:	2300      	movs	r3, #0
  40328a:	220a      	movs	r2, #10
  40328c:	f7fe ffa0 	bl	4021d0 <__aeabi_uldivmod>
  403290:	4604      	mov	r4, r0
  403292:	460d      	mov	r5, r1
  403294:	ea54 0305 	orrs.w	r3, r4, r5
  403298:	d1eb      	bne.n	403272 <_svfprintf_r+0xbd2>
  40329a:	eba9 0306 	sub.w	r3, r9, r6
  40329e:	930e      	str	r3, [sp, #56]	; 0x38
  4032a0:	f7ff bb0e 	b.w	4028c0 <_svfprintf_r+0x220>
  4032a4:	aa25      	add	r2, sp, #148	; 0x94
  4032a6:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4032a8:	980c      	ldr	r0, [sp, #48]	; 0x30
  4032aa:	f002 fb57 	bl	40595c <__ssprint_r>
  4032ae:	2800      	cmp	r0, #0
  4032b0:	f47f aac8 	bne.w	402844 <_svfprintf_r+0x1a4>
  4032b4:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4032b8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4032ba:	46c8      	mov	r8, r9
  4032bc:	f7ff bb5e 	b.w	40297c <_svfprintf_r+0x2dc>
  4032c0:	1e5e      	subs	r6, r3, #1
  4032c2:	2e00      	cmp	r6, #0
  4032c4:	f77f af0a 	ble.w	4030dc <_svfprintf_r+0xa3c>
  4032c8:	2e10      	cmp	r6, #16
  4032ca:	4d03      	ldr	r5, [pc, #12]	; (4032d8 <_svfprintf_r+0xc38>)
  4032cc:	dd22      	ble.n	403314 <_svfprintf_r+0xc74>
  4032ce:	4622      	mov	r2, r4
  4032d0:	f04f 0b10 	mov.w	fp, #16
  4032d4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4032d6:	e006      	b.n	4032e6 <_svfprintf_r+0xc46>
  4032d8:	00406d74 	.word	0x00406d74
  4032dc:	3e10      	subs	r6, #16
  4032de:	2e10      	cmp	r6, #16
  4032e0:	f108 0808 	add.w	r8, r8, #8
  4032e4:	dd15      	ble.n	403312 <_svfprintf_r+0xc72>
  4032e6:	3701      	adds	r7, #1
  4032e8:	3210      	adds	r2, #16
  4032ea:	2f07      	cmp	r7, #7
  4032ec:	9227      	str	r2, [sp, #156]	; 0x9c
  4032ee:	9726      	str	r7, [sp, #152]	; 0x98
  4032f0:	e888 0820 	stmia.w	r8, {r5, fp}
  4032f4:	ddf2      	ble.n	4032dc <_svfprintf_r+0xc3c>
  4032f6:	aa25      	add	r2, sp, #148	; 0x94
  4032f8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4032fa:	4620      	mov	r0, r4
  4032fc:	f002 fb2e 	bl	40595c <__ssprint_r>
  403300:	2800      	cmp	r0, #0
  403302:	f47f aa9f 	bne.w	402844 <_svfprintf_r+0x1a4>
  403306:	3e10      	subs	r6, #16
  403308:	2e10      	cmp	r6, #16
  40330a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40330c:	9f26      	ldr	r7, [sp, #152]	; 0x98
  40330e:	46c8      	mov	r8, r9
  403310:	dce9      	bgt.n	4032e6 <_svfprintf_r+0xc46>
  403312:	4614      	mov	r4, r2
  403314:	3701      	adds	r7, #1
  403316:	4434      	add	r4, r6
  403318:	2f07      	cmp	r7, #7
  40331a:	9427      	str	r4, [sp, #156]	; 0x9c
  40331c:	9726      	str	r7, [sp, #152]	; 0x98
  40331e:	e888 0060 	stmia.w	r8, {r5, r6}
  403322:	f77f aed9 	ble.w	4030d8 <_svfprintf_r+0xa38>
  403326:	aa25      	add	r2, sp, #148	; 0x94
  403328:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40332a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40332c:	f002 fb16 	bl	40595c <__ssprint_r>
  403330:	2800      	cmp	r0, #0
  403332:	f47f aa87 	bne.w	402844 <_svfprintf_r+0x1a4>
  403336:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403338:	9f26      	ldr	r7, [sp, #152]	; 0x98
  40333a:	46c8      	mov	r8, r9
  40333c:	e6ce      	b.n	4030dc <_svfprintf_r+0xa3c>
  40333e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403340:	6814      	ldr	r4, [r2, #0]
  403342:	4613      	mov	r3, r2
  403344:	3304      	adds	r3, #4
  403346:	17e5      	asrs	r5, r4, #31
  403348:	930f      	str	r3, [sp, #60]	; 0x3c
  40334a:	4622      	mov	r2, r4
  40334c:	462b      	mov	r3, r5
  40334e:	e4fa      	b.n	402d46 <_svfprintf_r+0x6a6>
  403350:	3204      	adds	r2, #4
  403352:	681c      	ldr	r4, [r3, #0]
  403354:	920f      	str	r2, [sp, #60]	; 0x3c
  403356:	2301      	movs	r3, #1
  403358:	2500      	movs	r5, #0
  40335a:	f7ff ba94 	b.w	402886 <_svfprintf_r+0x1e6>
  40335e:	681c      	ldr	r4, [r3, #0]
  403360:	3304      	adds	r3, #4
  403362:	930f      	str	r3, [sp, #60]	; 0x3c
  403364:	2500      	movs	r5, #0
  403366:	e421      	b.n	402bac <_svfprintf_r+0x50c>
  403368:	990f      	ldr	r1, [sp, #60]	; 0x3c
  40336a:	460a      	mov	r2, r1
  40336c:	3204      	adds	r2, #4
  40336e:	680c      	ldr	r4, [r1, #0]
  403370:	920f      	str	r2, [sp, #60]	; 0x3c
  403372:	2500      	movs	r5, #0
  403374:	f7ff ba87 	b.w	402886 <_svfprintf_r+0x1e6>
  403378:	4614      	mov	r4, r2
  40337a:	3301      	adds	r3, #1
  40337c:	4434      	add	r4, r6
  40337e:	2b07      	cmp	r3, #7
  403380:	9427      	str	r4, [sp, #156]	; 0x9c
  403382:	9326      	str	r3, [sp, #152]	; 0x98
  403384:	e888 0060 	stmia.w	r8, {r5, r6}
  403388:	f77f ab68 	ble.w	402a5c <_svfprintf_r+0x3bc>
  40338c:	e6b3      	b.n	4030f6 <_svfprintf_r+0xa56>
  40338e:	f8dd b01c 	ldr.w	fp, [sp, #28]
  403392:	f8cd b01c 	str.w	fp, [sp, #28]
  403396:	ae42      	add	r6, sp, #264	; 0x108
  403398:	3430      	adds	r4, #48	; 0x30
  40339a:	2301      	movs	r3, #1
  40339c:	f806 4d41 	strb.w	r4, [r6, #-65]!
  4033a0:	930e      	str	r3, [sp, #56]	; 0x38
  4033a2:	f7ff ba8d 	b.w	4028c0 <_svfprintf_r+0x220>
  4033a6:	aa25      	add	r2, sp, #148	; 0x94
  4033a8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4033aa:	980c      	ldr	r0, [sp, #48]	; 0x30
  4033ac:	f002 fad6 	bl	40595c <__ssprint_r>
  4033b0:	2800      	cmp	r0, #0
  4033b2:	f47f aa47 	bne.w	402844 <_svfprintf_r+0x1a4>
  4033b6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4033b8:	46c8      	mov	r8, r9
  4033ba:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  4033bc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4033be:	429a      	cmp	r2, r3
  4033c0:	db44      	blt.n	40344c <_svfprintf_r+0xdac>
  4033c2:	9b07      	ldr	r3, [sp, #28]
  4033c4:	07d9      	lsls	r1, r3, #31
  4033c6:	d441      	bmi.n	40344c <_svfprintf_r+0xdac>
  4033c8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4033ca:	9812      	ldr	r0, [sp, #72]	; 0x48
  4033cc:	1a9a      	subs	r2, r3, r2
  4033ce:	1a1d      	subs	r5, r3, r0
  4033d0:	4295      	cmp	r5, r2
  4033d2:	bfa8      	it	ge
  4033d4:	4615      	movge	r5, r2
  4033d6:	2d00      	cmp	r5, #0
  4033d8:	dd0e      	ble.n	4033f8 <_svfprintf_r+0xd58>
  4033da:	9926      	ldr	r1, [sp, #152]	; 0x98
  4033dc:	f8c8 5004 	str.w	r5, [r8, #4]
  4033e0:	3101      	adds	r1, #1
  4033e2:	4406      	add	r6, r0
  4033e4:	442c      	add	r4, r5
  4033e6:	2907      	cmp	r1, #7
  4033e8:	f8c8 6000 	str.w	r6, [r8]
  4033ec:	9427      	str	r4, [sp, #156]	; 0x9c
  4033ee:	9126      	str	r1, [sp, #152]	; 0x98
  4033f0:	f300 823b 	bgt.w	40386a <_svfprintf_r+0x11ca>
  4033f4:	f108 0808 	add.w	r8, r8, #8
  4033f8:	2d00      	cmp	r5, #0
  4033fa:	bfac      	ite	ge
  4033fc:	1b56      	subge	r6, r2, r5
  4033fe:	4616      	movlt	r6, r2
  403400:	2e00      	cmp	r6, #0
  403402:	f77f ab2d 	ble.w	402a60 <_svfprintf_r+0x3c0>
  403406:	2e10      	cmp	r6, #16
  403408:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40340a:	4db0      	ldr	r5, [pc, #704]	; (4036cc <_svfprintf_r+0x102c>)
  40340c:	ddb5      	ble.n	40337a <_svfprintf_r+0xcda>
  40340e:	4622      	mov	r2, r4
  403410:	2710      	movs	r7, #16
  403412:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  403416:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  403418:	e004      	b.n	403424 <_svfprintf_r+0xd84>
  40341a:	f108 0808 	add.w	r8, r8, #8
  40341e:	3e10      	subs	r6, #16
  403420:	2e10      	cmp	r6, #16
  403422:	dda9      	ble.n	403378 <_svfprintf_r+0xcd8>
  403424:	3301      	adds	r3, #1
  403426:	3210      	adds	r2, #16
  403428:	2b07      	cmp	r3, #7
  40342a:	9227      	str	r2, [sp, #156]	; 0x9c
  40342c:	9326      	str	r3, [sp, #152]	; 0x98
  40342e:	e888 00a0 	stmia.w	r8, {r5, r7}
  403432:	ddf2      	ble.n	40341a <_svfprintf_r+0xd7a>
  403434:	aa25      	add	r2, sp, #148	; 0x94
  403436:	4621      	mov	r1, r4
  403438:	4658      	mov	r0, fp
  40343a:	f002 fa8f 	bl	40595c <__ssprint_r>
  40343e:	2800      	cmp	r0, #0
  403440:	f47f aa00 	bne.w	402844 <_svfprintf_r+0x1a4>
  403444:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403446:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403448:	46c8      	mov	r8, r9
  40344a:	e7e8      	b.n	40341e <_svfprintf_r+0xd7e>
  40344c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40344e:	9819      	ldr	r0, [sp, #100]	; 0x64
  403450:	991a      	ldr	r1, [sp, #104]	; 0x68
  403452:	f8c8 1000 	str.w	r1, [r8]
  403456:	3301      	adds	r3, #1
  403458:	4404      	add	r4, r0
  40345a:	2b07      	cmp	r3, #7
  40345c:	9427      	str	r4, [sp, #156]	; 0x9c
  40345e:	f8c8 0004 	str.w	r0, [r8, #4]
  403462:	9326      	str	r3, [sp, #152]	; 0x98
  403464:	f300 81f5 	bgt.w	403852 <_svfprintf_r+0x11b2>
  403468:	f108 0808 	add.w	r8, r8, #8
  40346c:	e7ac      	b.n	4033c8 <_svfprintf_r+0xd28>
  40346e:	9b07      	ldr	r3, [sp, #28]
  403470:	07da      	lsls	r2, r3, #31
  403472:	f53f adfe 	bmi.w	403072 <_svfprintf_r+0x9d2>
  403476:	3701      	adds	r7, #1
  403478:	3401      	adds	r4, #1
  40347a:	2301      	movs	r3, #1
  40347c:	2f07      	cmp	r7, #7
  40347e:	9427      	str	r4, [sp, #156]	; 0x9c
  403480:	9726      	str	r7, [sp, #152]	; 0x98
  403482:	f8c8 6000 	str.w	r6, [r8]
  403486:	f8c8 3004 	str.w	r3, [r8, #4]
  40348a:	f77f ae25 	ble.w	4030d8 <_svfprintf_r+0xa38>
  40348e:	e74a      	b.n	403326 <_svfprintf_r+0xc86>
  403490:	aa25      	add	r2, sp, #148	; 0x94
  403492:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403494:	980c      	ldr	r0, [sp, #48]	; 0x30
  403496:	f002 fa61 	bl	40595c <__ssprint_r>
  40349a:	2800      	cmp	r0, #0
  40349c:	f47f a9d2 	bne.w	402844 <_svfprintf_r+0x1a4>
  4034a0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4034a2:	9f26      	ldr	r7, [sp, #152]	; 0x98
  4034a4:	46c8      	mov	r8, r9
  4034a6:	e5f2      	b.n	40308e <_svfprintf_r+0x9ee>
  4034a8:	aa25      	add	r2, sp, #148	; 0x94
  4034aa:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4034ac:	980c      	ldr	r0, [sp, #48]	; 0x30
  4034ae:	f002 fa55 	bl	40595c <__ssprint_r>
  4034b2:	2800      	cmp	r0, #0
  4034b4:	f47f a9c6 	bne.w	402844 <_svfprintf_r+0x1a4>
  4034b8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4034ba:	9f26      	ldr	r7, [sp, #152]	; 0x98
  4034bc:	46c8      	mov	r8, r9
  4034be:	e5f5      	b.n	4030ac <_svfprintf_r+0xa0c>
  4034c0:	464e      	mov	r6, r9
  4034c2:	f7ff b9fd 	b.w	4028c0 <_svfprintf_r+0x220>
  4034c6:	aa25      	add	r2, sp, #148	; 0x94
  4034c8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4034ca:	980c      	ldr	r0, [sp, #48]	; 0x30
  4034cc:	f002 fa46 	bl	40595c <__ssprint_r>
  4034d0:	2800      	cmp	r0, #0
  4034d2:	f47f a9b7 	bne.w	402844 <_svfprintf_r+0x1a4>
  4034d6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4034d8:	46c8      	mov	r8, r9
  4034da:	f7ff ba72 	b.w	4029c2 <_svfprintf_r+0x322>
  4034de:	9c15      	ldr	r4, [sp, #84]	; 0x54
  4034e0:	4622      	mov	r2, r4
  4034e2:	4620      	mov	r0, r4
  4034e4:	9c14      	ldr	r4, [sp, #80]	; 0x50
  4034e6:	4623      	mov	r3, r4
  4034e8:	4621      	mov	r1, r4
  4034ea:	f002 feab 	bl	406244 <__aeabi_dcmpun>
  4034ee:	2800      	cmp	r0, #0
  4034f0:	f040 8286 	bne.w	403a00 <_svfprintf_r+0x1360>
  4034f4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4034f6:	3301      	adds	r3, #1
  4034f8:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4034fa:	f023 0320 	bic.w	r3, r3, #32
  4034fe:	930e      	str	r3, [sp, #56]	; 0x38
  403500:	f000 81e2 	beq.w	4038c8 <_svfprintf_r+0x1228>
  403504:	2b47      	cmp	r3, #71	; 0x47
  403506:	f000 811e 	beq.w	403746 <_svfprintf_r+0x10a6>
  40350a:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  40350e:	9307      	str	r3, [sp, #28]
  403510:	9b14      	ldr	r3, [sp, #80]	; 0x50
  403512:	1e1f      	subs	r7, r3, #0
  403514:	9b15      	ldr	r3, [sp, #84]	; 0x54
  403516:	9308      	str	r3, [sp, #32]
  403518:	bfbb      	ittet	lt
  40351a:	463b      	movlt	r3, r7
  40351c:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  403520:	2300      	movge	r3, #0
  403522:	232d      	movlt	r3, #45	; 0x2d
  403524:	9310      	str	r3, [sp, #64]	; 0x40
  403526:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403528:	2b66      	cmp	r3, #102	; 0x66
  40352a:	f000 81bb 	beq.w	4038a4 <_svfprintf_r+0x1204>
  40352e:	2b46      	cmp	r3, #70	; 0x46
  403530:	f000 80df 	beq.w	4036f2 <_svfprintf_r+0x1052>
  403534:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403536:	9a08      	ldr	r2, [sp, #32]
  403538:	2b45      	cmp	r3, #69	; 0x45
  40353a:	bf0c      	ite	eq
  40353c:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
  40353e:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
  403540:	a823      	add	r0, sp, #140	; 0x8c
  403542:	a920      	add	r1, sp, #128	; 0x80
  403544:	bf08      	it	eq
  403546:	1c5d      	addeq	r5, r3, #1
  403548:	9004      	str	r0, [sp, #16]
  40354a:	9103      	str	r1, [sp, #12]
  40354c:	a81f      	add	r0, sp, #124	; 0x7c
  40354e:	2102      	movs	r1, #2
  403550:	463b      	mov	r3, r7
  403552:	9002      	str	r0, [sp, #8]
  403554:	9501      	str	r5, [sp, #4]
  403556:	9100      	str	r1, [sp, #0]
  403558:	980c      	ldr	r0, [sp, #48]	; 0x30
  40355a:	f000 fb75 	bl	403c48 <_dtoa_r>
  40355e:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403560:	2b67      	cmp	r3, #103	; 0x67
  403562:	4606      	mov	r6, r0
  403564:	f040 81e0 	bne.w	403928 <_svfprintf_r+0x1288>
  403568:	f01b 0f01 	tst.w	fp, #1
  40356c:	f000 8246 	beq.w	4039fc <_svfprintf_r+0x135c>
  403570:	1974      	adds	r4, r6, r5
  403572:	9a16      	ldr	r2, [sp, #88]	; 0x58
  403574:	9808      	ldr	r0, [sp, #32]
  403576:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  403578:	4639      	mov	r1, r7
  40357a:	f7fe fdf7 	bl	40216c <__aeabi_dcmpeq>
  40357e:	2800      	cmp	r0, #0
  403580:	f040 8165 	bne.w	40384e <_svfprintf_r+0x11ae>
  403584:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  403586:	42a3      	cmp	r3, r4
  403588:	d206      	bcs.n	403598 <_svfprintf_r+0xef8>
  40358a:	2130      	movs	r1, #48	; 0x30
  40358c:	1c5a      	adds	r2, r3, #1
  40358e:	9223      	str	r2, [sp, #140]	; 0x8c
  403590:	7019      	strb	r1, [r3, #0]
  403592:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  403594:	429c      	cmp	r4, r3
  403596:	d8f9      	bhi.n	40358c <_svfprintf_r+0xeec>
  403598:	1b9b      	subs	r3, r3, r6
  40359a:	9313      	str	r3, [sp, #76]	; 0x4c
  40359c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40359e:	2b47      	cmp	r3, #71	; 0x47
  4035a0:	f000 80e9 	beq.w	403776 <_svfprintf_r+0x10d6>
  4035a4:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4035a6:	2b65      	cmp	r3, #101	; 0x65
  4035a8:	f340 81cd 	ble.w	403946 <_svfprintf_r+0x12a6>
  4035ac:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4035ae:	2b66      	cmp	r3, #102	; 0x66
  4035b0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  4035b2:	9312      	str	r3, [sp, #72]	; 0x48
  4035b4:	f000 819e 	beq.w	4038f4 <_svfprintf_r+0x1254>
  4035b8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4035ba:	9a12      	ldr	r2, [sp, #72]	; 0x48
  4035bc:	4619      	mov	r1, r3
  4035be:	4291      	cmp	r1, r2
  4035c0:	f300 818a 	bgt.w	4038d8 <_svfprintf_r+0x1238>
  4035c4:	f01b 0f01 	tst.w	fp, #1
  4035c8:	f040 8213 	bne.w	4039f2 <_svfprintf_r+0x1352>
  4035cc:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  4035d0:	9308      	str	r3, [sp, #32]
  4035d2:	2367      	movs	r3, #103	; 0x67
  4035d4:	920e      	str	r2, [sp, #56]	; 0x38
  4035d6:	9311      	str	r3, [sp, #68]	; 0x44
  4035d8:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4035da:	2b00      	cmp	r3, #0
  4035dc:	f040 80c4 	bne.w	403768 <_svfprintf_r+0x10c8>
  4035e0:	930a      	str	r3, [sp, #40]	; 0x28
  4035e2:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4035e6:	f7ff b973 	b.w	4028d0 <_svfprintf_r+0x230>
  4035ea:	4635      	mov	r5, r6
  4035ec:	460c      	mov	r4, r1
  4035ee:	4646      	mov	r6, r8
  4035f0:	4690      	mov	r8, r2
  4035f2:	3301      	adds	r3, #1
  4035f4:	443c      	add	r4, r7
  4035f6:	2b07      	cmp	r3, #7
  4035f8:	9427      	str	r4, [sp, #156]	; 0x9c
  4035fa:	9326      	str	r3, [sp, #152]	; 0x98
  4035fc:	e888 00a0 	stmia.w	r8, {r5, r7}
  403600:	f73f aed1 	bgt.w	4033a6 <_svfprintf_r+0xd06>
  403604:	f108 0808 	add.w	r8, r8, #8
  403608:	e6d7      	b.n	4033ba <_svfprintf_r+0xd1a>
  40360a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40360c:	6813      	ldr	r3, [r2, #0]
  40360e:	3204      	adds	r2, #4
  403610:	920f      	str	r2, [sp, #60]	; 0x3c
  403612:	9a09      	ldr	r2, [sp, #36]	; 0x24
  403614:	601a      	str	r2, [r3, #0]
  403616:	f7ff b86a 	b.w	4026ee <_svfprintf_r+0x4e>
  40361a:	aa25      	add	r2, sp, #148	; 0x94
  40361c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40361e:	980c      	ldr	r0, [sp, #48]	; 0x30
  403620:	f002 f99c 	bl	40595c <__ssprint_r>
  403624:	2800      	cmp	r0, #0
  403626:	f47f a90d 	bne.w	402844 <_svfprintf_r+0x1a4>
  40362a:	46c8      	mov	r8, r9
  40362c:	e48d      	b.n	402f4a <_svfprintf_r+0x8aa>
  40362e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403630:	4a27      	ldr	r2, [pc, #156]	; (4036d0 <_svfprintf_r+0x1030>)
  403632:	f8c8 2000 	str.w	r2, [r8]
  403636:	3301      	adds	r3, #1
  403638:	3401      	adds	r4, #1
  40363a:	2201      	movs	r2, #1
  40363c:	2b07      	cmp	r3, #7
  40363e:	9427      	str	r4, [sp, #156]	; 0x9c
  403640:	9326      	str	r3, [sp, #152]	; 0x98
  403642:	f8c8 2004 	str.w	r2, [r8, #4]
  403646:	dc72      	bgt.n	40372e <_svfprintf_r+0x108e>
  403648:	f108 0808 	add.w	r8, r8, #8
  40364c:	b929      	cbnz	r1, 40365a <_svfprintf_r+0xfba>
  40364e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403650:	b91b      	cbnz	r3, 40365a <_svfprintf_r+0xfba>
  403652:	9b07      	ldr	r3, [sp, #28]
  403654:	07d8      	lsls	r0, r3, #31
  403656:	f57f aa03 	bpl.w	402a60 <_svfprintf_r+0x3c0>
  40365a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40365c:	9819      	ldr	r0, [sp, #100]	; 0x64
  40365e:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  403660:	f8c8 2000 	str.w	r2, [r8]
  403664:	3301      	adds	r3, #1
  403666:	4602      	mov	r2, r0
  403668:	4422      	add	r2, r4
  40366a:	2b07      	cmp	r3, #7
  40366c:	9227      	str	r2, [sp, #156]	; 0x9c
  40366e:	f8c8 0004 	str.w	r0, [r8, #4]
  403672:	9326      	str	r3, [sp, #152]	; 0x98
  403674:	f300 818d 	bgt.w	403992 <_svfprintf_r+0x12f2>
  403678:	f108 0808 	add.w	r8, r8, #8
  40367c:	2900      	cmp	r1, #0
  40367e:	f2c0 8165 	blt.w	40394c <_svfprintf_r+0x12ac>
  403682:	9913      	ldr	r1, [sp, #76]	; 0x4c
  403684:	f8c8 6000 	str.w	r6, [r8]
  403688:	3301      	adds	r3, #1
  40368a:	188c      	adds	r4, r1, r2
  40368c:	2b07      	cmp	r3, #7
  40368e:	9427      	str	r4, [sp, #156]	; 0x9c
  403690:	9326      	str	r3, [sp, #152]	; 0x98
  403692:	f8c8 1004 	str.w	r1, [r8, #4]
  403696:	f77f a9e1 	ble.w	402a5c <_svfprintf_r+0x3bc>
  40369a:	e52c      	b.n	4030f6 <_svfprintf_r+0xa56>
  40369c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40369e:	9909      	ldr	r1, [sp, #36]	; 0x24
  4036a0:	6813      	ldr	r3, [r2, #0]
  4036a2:	17cd      	asrs	r5, r1, #31
  4036a4:	4608      	mov	r0, r1
  4036a6:	3204      	adds	r2, #4
  4036a8:	4629      	mov	r1, r5
  4036aa:	920f      	str	r2, [sp, #60]	; 0x3c
  4036ac:	e9c3 0100 	strd	r0, r1, [r3]
  4036b0:	f7ff b81d 	b.w	4026ee <_svfprintf_r+0x4e>
  4036b4:	aa25      	add	r2, sp, #148	; 0x94
  4036b6:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4036b8:	980c      	ldr	r0, [sp, #48]	; 0x30
  4036ba:	f002 f94f 	bl	40595c <__ssprint_r>
  4036be:	2800      	cmp	r0, #0
  4036c0:	f47f a8c0 	bne.w	402844 <_svfprintf_r+0x1a4>
  4036c4:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4036c6:	46c8      	mov	r8, r9
  4036c8:	e458      	b.n	402f7c <_svfprintf_r+0x8dc>
  4036ca:	bf00      	nop
  4036cc:	00406d74 	.word	0x00406d74
  4036d0:	00406d60 	.word	0x00406d60
  4036d4:	2140      	movs	r1, #64	; 0x40
  4036d6:	980c      	ldr	r0, [sp, #48]	; 0x30
  4036d8:	f001 fa0c 	bl	404af4 <_malloc_r>
  4036dc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4036de:	6010      	str	r0, [r2, #0]
  4036e0:	6110      	str	r0, [r2, #16]
  4036e2:	2800      	cmp	r0, #0
  4036e4:	f000 81f2 	beq.w	403acc <_svfprintf_r+0x142c>
  4036e8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4036ea:	2340      	movs	r3, #64	; 0x40
  4036ec:	6153      	str	r3, [r2, #20]
  4036ee:	f7fe bfee 	b.w	4026ce <_svfprintf_r+0x2e>
  4036f2:	a823      	add	r0, sp, #140	; 0x8c
  4036f4:	a920      	add	r1, sp, #128	; 0x80
  4036f6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  4036f8:	9004      	str	r0, [sp, #16]
  4036fa:	9103      	str	r1, [sp, #12]
  4036fc:	a81f      	add	r0, sp, #124	; 0x7c
  4036fe:	2103      	movs	r1, #3
  403700:	9002      	str	r0, [sp, #8]
  403702:	9a08      	ldr	r2, [sp, #32]
  403704:	9401      	str	r4, [sp, #4]
  403706:	463b      	mov	r3, r7
  403708:	9100      	str	r1, [sp, #0]
  40370a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40370c:	f000 fa9c 	bl	403c48 <_dtoa_r>
  403710:	4625      	mov	r5, r4
  403712:	4606      	mov	r6, r0
  403714:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403716:	2b46      	cmp	r3, #70	; 0x46
  403718:	eb06 0405 	add.w	r4, r6, r5
  40371c:	f47f af29 	bne.w	403572 <_svfprintf_r+0xed2>
  403720:	7833      	ldrb	r3, [r6, #0]
  403722:	2b30      	cmp	r3, #48	; 0x30
  403724:	f000 8178 	beq.w	403a18 <_svfprintf_r+0x1378>
  403728:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
  40372a:	442c      	add	r4, r5
  40372c:	e721      	b.n	403572 <_svfprintf_r+0xed2>
  40372e:	aa25      	add	r2, sp, #148	; 0x94
  403730:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403732:	980c      	ldr	r0, [sp, #48]	; 0x30
  403734:	f002 f912 	bl	40595c <__ssprint_r>
  403738:	2800      	cmp	r0, #0
  40373a:	f47f a883 	bne.w	402844 <_svfprintf_r+0x1a4>
  40373e:	991f      	ldr	r1, [sp, #124]	; 0x7c
  403740:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403742:	46c8      	mov	r8, r9
  403744:	e782      	b.n	40364c <_svfprintf_r+0xfac>
  403746:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403748:	2b00      	cmp	r3, #0
  40374a:	bf08      	it	eq
  40374c:	2301      	moveq	r3, #1
  40374e:	930a      	str	r3, [sp, #40]	; 0x28
  403750:	e6db      	b.n	40350a <_svfprintf_r+0xe6a>
  403752:	4630      	mov	r0, r6
  403754:	940a      	str	r4, [sp, #40]	; 0x28
  403756:	f002 f893 	bl	405880 <strlen>
  40375a:	950f      	str	r5, [sp, #60]	; 0x3c
  40375c:	900e      	str	r0, [sp, #56]	; 0x38
  40375e:	f8cd b01c 	str.w	fp, [sp, #28]
  403762:	4603      	mov	r3, r0
  403764:	f7ff b9f9 	b.w	402b5a <_svfprintf_r+0x4ba>
  403768:	272d      	movs	r7, #45	; 0x2d
  40376a:	2300      	movs	r3, #0
  40376c:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  403770:	930a      	str	r3, [sp, #40]	; 0x28
  403772:	f7ff b8ae 	b.w	4028d2 <_svfprintf_r+0x232>
  403776:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  403778:	9312      	str	r3, [sp, #72]	; 0x48
  40377a:	461a      	mov	r2, r3
  40377c:	3303      	adds	r3, #3
  40377e:	db04      	blt.n	40378a <_svfprintf_r+0x10ea>
  403780:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403782:	4619      	mov	r1, r3
  403784:	4291      	cmp	r1, r2
  403786:	f6bf af17 	bge.w	4035b8 <_svfprintf_r+0xf18>
  40378a:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40378c:	3b02      	subs	r3, #2
  40378e:	9311      	str	r3, [sp, #68]	; 0x44
  403790:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
  403794:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
  403798:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40379a:	3b01      	subs	r3, #1
  40379c:	2b00      	cmp	r3, #0
  40379e:	931f      	str	r3, [sp, #124]	; 0x7c
  4037a0:	bfbd      	ittte	lt
  4037a2:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
  4037a4:	f1c3 0301 	rsblt	r3, r3, #1
  4037a8:	222d      	movlt	r2, #45	; 0x2d
  4037aa:	222b      	movge	r2, #43	; 0x2b
  4037ac:	2b09      	cmp	r3, #9
  4037ae:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
  4037b2:	f340 8116 	ble.w	4039e2 <_svfprintf_r+0x1342>
  4037b6:	f10d 0493 	add.w	r4, sp, #147	; 0x93
  4037ba:	4620      	mov	r0, r4
  4037bc:	4dab      	ldr	r5, [pc, #684]	; (403a6c <_svfprintf_r+0x13cc>)
  4037be:	e000      	b.n	4037c2 <_svfprintf_r+0x1122>
  4037c0:	4610      	mov	r0, r2
  4037c2:	fb85 1203 	smull	r1, r2, r5, r3
  4037c6:	17d9      	asrs	r1, r3, #31
  4037c8:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  4037cc:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  4037d0:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  4037d4:	3230      	adds	r2, #48	; 0x30
  4037d6:	2909      	cmp	r1, #9
  4037d8:	f800 2c01 	strb.w	r2, [r0, #-1]
  4037dc:	460b      	mov	r3, r1
  4037de:	f100 32ff 	add.w	r2, r0, #4294967295
  4037e2:	dced      	bgt.n	4037c0 <_svfprintf_r+0x1120>
  4037e4:	3330      	adds	r3, #48	; 0x30
  4037e6:	3802      	subs	r0, #2
  4037e8:	b2d9      	uxtb	r1, r3
  4037ea:	4284      	cmp	r4, r0
  4037ec:	f802 1c01 	strb.w	r1, [r2, #-1]
  4037f0:	f240 8165 	bls.w	403abe <_svfprintf_r+0x141e>
  4037f4:	f10d 0086 	add.w	r0, sp, #134	; 0x86
  4037f8:	4613      	mov	r3, r2
  4037fa:	e001      	b.n	403800 <_svfprintf_r+0x1160>
  4037fc:	f813 1b01 	ldrb.w	r1, [r3], #1
  403800:	f800 1b01 	strb.w	r1, [r0], #1
  403804:	42a3      	cmp	r3, r4
  403806:	d1f9      	bne.n	4037fc <_svfprintf_r+0x115c>
  403808:	3301      	adds	r3, #1
  40380a:	1a9b      	subs	r3, r3, r2
  40380c:	f10d 0286 	add.w	r2, sp, #134	; 0x86
  403810:	4413      	add	r3, r2
  403812:	aa21      	add	r2, sp, #132	; 0x84
  403814:	1a9b      	subs	r3, r3, r2
  403816:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  403818:	931b      	str	r3, [sp, #108]	; 0x6c
  40381a:	2a01      	cmp	r2, #1
  40381c:	4413      	add	r3, r2
  40381e:	930e      	str	r3, [sp, #56]	; 0x38
  403820:	f340 8119 	ble.w	403a56 <_svfprintf_r+0x13b6>
  403824:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403826:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403828:	4413      	add	r3, r2
  40382a:	930e      	str	r3, [sp, #56]	; 0x38
  40382c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403830:	9308      	str	r3, [sp, #32]
  403832:	2300      	movs	r3, #0
  403834:	9312      	str	r3, [sp, #72]	; 0x48
  403836:	e6cf      	b.n	4035d8 <_svfprintf_r+0xf38>
  403838:	aa25      	add	r2, sp, #148	; 0x94
  40383a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40383c:	980c      	ldr	r0, [sp, #48]	; 0x30
  40383e:	f002 f88d 	bl	40595c <__ssprint_r>
  403842:	2800      	cmp	r0, #0
  403844:	f47e affe 	bne.w	402844 <_svfprintf_r+0x1a4>
  403848:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40384a:	46c8      	mov	r8, r9
  40384c:	e4d7      	b.n	4031fe <_svfprintf_r+0xb5e>
  40384e:	4623      	mov	r3, r4
  403850:	e6a2      	b.n	403598 <_svfprintf_r+0xef8>
  403852:	aa25      	add	r2, sp, #148	; 0x94
  403854:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403856:	980c      	ldr	r0, [sp, #48]	; 0x30
  403858:	f002 f880 	bl	40595c <__ssprint_r>
  40385c:	2800      	cmp	r0, #0
  40385e:	f47e aff1 	bne.w	402844 <_svfprintf_r+0x1a4>
  403862:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  403864:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403866:	46c8      	mov	r8, r9
  403868:	e5ae      	b.n	4033c8 <_svfprintf_r+0xd28>
  40386a:	aa25      	add	r2, sp, #148	; 0x94
  40386c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40386e:	980c      	ldr	r0, [sp, #48]	; 0x30
  403870:	f002 f874 	bl	40595c <__ssprint_r>
  403874:	2800      	cmp	r0, #0
  403876:	f47e afe5 	bne.w	402844 <_svfprintf_r+0x1a4>
  40387a:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  40387c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40387e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403880:	1a9a      	subs	r2, r3, r2
  403882:	46c8      	mov	r8, r9
  403884:	e5b8      	b.n	4033f8 <_svfprintf_r+0xd58>
  403886:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403888:	9612      	str	r6, [sp, #72]	; 0x48
  40388a:	2b06      	cmp	r3, #6
  40388c:	bf28      	it	cs
  40388e:	2306      	movcs	r3, #6
  403890:	960a      	str	r6, [sp, #40]	; 0x28
  403892:	4637      	mov	r7, r6
  403894:	9308      	str	r3, [sp, #32]
  403896:	950f      	str	r5, [sp, #60]	; 0x3c
  403898:	f8cd b01c 	str.w	fp, [sp, #28]
  40389c:	930e      	str	r3, [sp, #56]	; 0x38
  40389e:	4e74      	ldr	r6, [pc, #464]	; (403a70 <_svfprintf_r+0x13d0>)
  4038a0:	f7ff b816 	b.w	4028d0 <_svfprintf_r+0x230>
  4038a4:	a823      	add	r0, sp, #140	; 0x8c
  4038a6:	a920      	add	r1, sp, #128	; 0x80
  4038a8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  4038aa:	9004      	str	r0, [sp, #16]
  4038ac:	9103      	str	r1, [sp, #12]
  4038ae:	a81f      	add	r0, sp, #124	; 0x7c
  4038b0:	2103      	movs	r1, #3
  4038b2:	9002      	str	r0, [sp, #8]
  4038b4:	9a08      	ldr	r2, [sp, #32]
  4038b6:	9501      	str	r5, [sp, #4]
  4038b8:	463b      	mov	r3, r7
  4038ba:	9100      	str	r1, [sp, #0]
  4038bc:	980c      	ldr	r0, [sp, #48]	; 0x30
  4038be:	f000 f9c3 	bl	403c48 <_dtoa_r>
  4038c2:	4606      	mov	r6, r0
  4038c4:	1944      	adds	r4, r0, r5
  4038c6:	e72b      	b.n	403720 <_svfprintf_r+0x1080>
  4038c8:	2306      	movs	r3, #6
  4038ca:	930a      	str	r3, [sp, #40]	; 0x28
  4038cc:	e61d      	b.n	40350a <_svfprintf_r+0xe6a>
  4038ce:	272d      	movs	r7, #45	; 0x2d
  4038d0:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  4038d4:	f7ff bacd 	b.w	402e72 <_svfprintf_r+0x7d2>
  4038d8:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4038da:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4038dc:	4413      	add	r3, r2
  4038de:	9a12      	ldr	r2, [sp, #72]	; 0x48
  4038e0:	930e      	str	r3, [sp, #56]	; 0x38
  4038e2:	2a00      	cmp	r2, #0
  4038e4:	f340 80b0 	ble.w	403a48 <_svfprintf_r+0x13a8>
  4038e8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4038ec:	9308      	str	r3, [sp, #32]
  4038ee:	2367      	movs	r3, #103	; 0x67
  4038f0:	9311      	str	r3, [sp, #68]	; 0x44
  4038f2:	e671      	b.n	4035d8 <_svfprintf_r+0xf38>
  4038f4:	2b00      	cmp	r3, #0
  4038f6:	f340 80c3 	ble.w	403a80 <_svfprintf_r+0x13e0>
  4038fa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4038fc:	2a00      	cmp	r2, #0
  4038fe:	f040 8099 	bne.w	403a34 <_svfprintf_r+0x1394>
  403902:	f01b 0f01 	tst.w	fp, #1
  403906:	f040 8095 	bne.w	403a34 <_svfprintf_r+0x1394>
  40390a:	9308      	str	r3, [sp, #32]
  40390c:	930e      	str	r3, [sp, #56]	; 0x38
  40390e:	e663      	b.n	4035d8 <_svfprintf_r+0xf38>
  403910:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403912:	9308      	str	r3, [sp, #32]
  403914:	930e      	str	r3, [sp, #56]	; 0x38
  403916:	900a      	str	r0, [sp, #40]	; 0x28
  403918:	950f      	str	r5, [sp, #60]	; 0x3c
  40391a:	f8cd b01c 	str.w	fp, [sp, #28]
  40391e:	9012      	str	r0, [sp, #72]	; 0x48
  403920:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  403924:	f7fe bfd4 	b.w	4028d0 <_svfprintf_r+0x230>
  403928:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40392a:	2b47      	cmp	r3, #71	; 0x47
  40392c:	f47f ae20 	bne.w	403570 <_svfprintf_r+0xed0>
  403930:	f01b 0f01 	tst.w	fp, #1
  403934:	f47f aeee 	bne.w	403714 <_svfprintf_r+0x1074>
  403938:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  40393a:	1b9b      	subs	r3, r3, r6
  40393c:	9313      	str	r3, [sp, #76]	; 0x4c
  40393e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403940:	2b47      	cmp	r3, #71	; 0x47
  403942:	f43f af18 	beq.w	403776 <_svfprintf_r+0x10d6>
  403946:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  403948:	9312      	str	r3, [sp, #72]	; 0x48
  40394a:	e721      	b.n	403790 <_svfprintf_r+0x10f0>
  40394c:	424f      	negs	r7, r1
  40394e:	3110      	adds	r1, #16
  403950:	4d48      	ldr	r5, [pc, #288]	; (403a74 <_svfprintf_r+0x13d4>)
  403952:	da2f      	bge.n	4039b4 <_svfprintf_r+0x1314>
  403954:	2410      	movs	r4, #16
  403956:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  40395a:	e004      	b.n	403966 <_svfprintf_r+0x12c6>
  40395c:	f108 0808 	add.w	r8, r8, #8
  403960:	3f10      	subs	r7, #16
  403962:	2f10      	cmp	r7, #16
  403964:	dd26      	ble.n	4039b4 <_svfprintf_r+0x1314>
  403966:	3301      	adds	r3, #1
  403968:	3210      	adds	r2, #16
  40396a:	2b07      	cmp	r3, #7
  40396c:	9227      	str	r2, [sp, #156]	; 0x9c
  40396e:	9326      	str	r3, [sp, #152]	; 0x98
  403970:	f8c8 5000 	str.w	r5, [r8]
  403974:	f8c8 4004 	str.w	r4, [r8, #4]
  403978:	ddf0      	ble.n	40395c <_svfprintf_r+0x12bc>
  40397a:	aa25      	add	r2, sp, #148	; 0x94
  40397c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40397e:	4658      	mov	r0, fp
  403980:	f001 ffec 	bl	40595c <__ssprint_r>
  403984:	2800      	cmp	r0, #0
  403986:	f47e af5d 	bne.w	402844 <_svfprintf_r+0x1a4>
  40398a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40398c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40398e:	46c8      	mov	r8, r9
  403990:	e7e6      	b.n	403960 <_svfprintf_r+0x12c0>
  403992:	aa25      	add	r2, sp, #148	; 0x94
  403994:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403996:	980c      	ldr	r0, [sp, #48]	; 0x30
  403998:	f001 ffe0 	bl	40595c <__ssprint_r>
  40399c:	2800      	cmp	r0, #0
  40399e:	f47e af51 	bne.w	402844 <_svfprintf_r+0x1a4>
  4039a2:	991f      	ldr	r1, [sp, #124]	; 0x7c
  4039a4:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4039a6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4039a8:	46c8      	mov	r8, r9
  4039aa:	e667      	b.n	40367c <_svfprintf_r+0xfdc>
  4039ac:	2000      	movs	r0, #0
  4039ae:	900a      	str	r0, [sp, #40]	; 0x28
  4039b0:	f7fe bed0 	b.w	402754 <_svfprintf_r+0xb4>
  4039b4:	3301      	adds	r3, #1
  4039b6:	443a      	add	r2, r7
  4039b8:	2b07      	cmp	r3, #7
  4039ba:	e888 00a0 	stmia.w	r8, {r5, r7}
  4039be:	9227      	str	r2, [sp, #156]	; 0x9c
  4039c0:	9326      	str	r3, [sp, #152]	; 0x98
  4039c2:	f108 0808 	add.w	r8, r8, #8
  4039c6:	f77f ae5c 	ble.w	403682 <_svfprintf_r+0xfe2>
  4039ca:	aa25      	add	r2, sp, #148	; 0x94
  4039cc:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4039ce:	980c      	ldr	r0, [sp, #48]	; 0x30
  4039d0:	f001 ffc4 	bl	40595c <__ssprint_r>
  4039d4:	2800      	cmp	r0, #0
  4039d6:	f47e af35 	bne.w	402844 <_svfprintf_r+0x1a4>
  4039da:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4039dc:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4039de:	46c8      	mov	r8, r9
  4039e0:	e64f      	b.n	403682 <_svfprintf_r+0xfe2>
  4039e2:	3330      	adds	r3, #48	; 0x30
  4039e4:	2230      	movs	r2, #48	; 0x30
  4039e6:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
  4039ea:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
  4039ee:	ab22      	add	r3, sp, #136	; 0x88
  4039f0:	e70f      	b.n	403812 <_svfprintf_r+0x1172>
  4039f2:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4039f4:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4039f6:	4413      	add	r3, r2
  4039f8:	930e      	str	r3, [sp, #56]	; 0x38
  4039fa:	e775      	b.n	4038e8 <_svfprintf_r+0x1248>
  4039fc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  4039fe:	e5cb      	b.n	403598 <_svfprintf_r+0xef8>
  403a00:	9b14      	ldr	r3, [sp, #80]	; 0x50
  403a02:	4e1d      	ldr	r6, [pc, #116]	; (403a78 <_svfprintf_r+0x13d8>)
  403a04:	2b00      	cmp	r3, #0
  403a06:	bfb6      	itet	lt
  403a08:	272d      	movlt	r7, #45	; 0x2d
  403a0a:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
  403a0e:	f88d 7077 	strblt.w	r7, [sp, #119]	; 0x77
  403a12:	4b1a      	ldr	r3, [pc, #104]	; (403a7c <_svfprintf_r+0x13dc>)
  403a14:	f7ff ba2f 	b.w	402e76 <_svfprintf_r+0x7d6>
  403a18:	9a16      	ldr	r2, [sp, #88]	; 0x58
  403a1a:	9808      	ldr	r0, [sp, #32]
  403a1c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  403a1e:	4639      	mov	r1, r7
  403a20:	f7fe fba4 	bl	40216c <__aeabi_dcmpeq>
  403a24:	2800      	cmp	r0, #0
  403a26:	f47f ae7f 	bne.w	403728 <_svfprintf_r+0x1088>
  403a2a:	f1c5 0501 	rsb	r5, r5, #1
  403a2e:	951f      	str	r5, [sp, #124]	; 0x7c
  403a30:	442c      	add	r4, r5
  403a32:	e59e      	b.n	403572 <_svfprintf_r+0xed2>
  403a34:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403a36:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403a38:	4413      	add	r3, r2
  403a3a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403a3c:	441a      	add	r2, r3
  403a3e:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  403a42:	920e      	str	r2, [sp, #56]	; 0x38
  403a44:	9308      	str	r3, [sp, #32]
  403a46:	e5c7      	b.n	4035d8 <_svfprintf_r+0xf38>
  403a48:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403a4a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  403a4c:	f1c3 0301 	rsb	r3, r3, #1
  403a50:	441a      	add	r2, r3
  403a52:	4613      	mov	r3, r2
  403a54:	e7d0      	b.n	4039f8 <_svfprintf_r+0x1358>
  403a56:	f01b 0301 	ands.w	r3, fp, #1
  403a5a:	9312      	str	r3, [sp, #72]	; 0x48
  403a5c:	f47f aee2 	bne.w	403824 <_svfprintf_r+0x1184>
  403a60:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403a62:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403a66:	9308      	str	r3, [sp, #32]
  403a68:	e5b6      	b.n	4035d8 <_svfprintf_r+0xf38>
  403a6a:	bf00      	nop
  403a6c:	66666667 	.word	0x66666667
  403a70:	00406d58 	.word	0x00406d58
  403a74:	00406d74 	.word	0x00406d74
  403a78:	00406d2c 	.word	0x00406d2c
  403a7c:	00406d28 	.word	0x00406d28
  403a80:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403a82:	b913      	cbnz	r3, 403a8a <_svfprintf_r+0x13ea>
  403a84:	f01b 0f01 	tst.w	fp, #1
  403a88:	d002      	beq.n	403a90 <_svfprintf_r+0x13f0>
  403a8a:	9b19      	ldr	r3, [sp, #100]	; 0x64
  403a8c:	3301      	adds	r3, #1
  403a8e:	e7d4      	b.n	403a3a <_svfprintf_r+0x139a>
  403a90:	2301      	movs	r3, #1
  403a92:	e73a      	b.n	40390a <_svfprintf_r+0x126a>
  403a94:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  403a96:	f89a 3001 	ldrb.w	r3, [sl, #1]
  403a9a:	6828      	ldr	r0, [r5, #0]
  403a9c:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
  403aa0:	900a      	str	r0, [sp, #40]	; 0x28
  403aa2:	4628      	mov	r0, r5
  403aa4:	3004      	adds	r0, #4
  403aa6:	46a2      	mov	sl, r4
  403aa8:	900f      	str	r0, [sp, #60]	; 0x3c
  403aaa:	f7fe be51 	b.w	402750 <_svfprintf_r+0xb0>
  403aae:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403ab2:	f7ff b867 	b.w	402b84 <_svfprintf_r+0x4e4>
  403ab6:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403aba:	f7ff ba15 	b.w	402ee8 <_svfprintf_r+0x848>
  403abe:	f10d 0386 	add.w	r3, sp, #134	; 0x86
  403ac2:	e6a6      	b.n	403812 <_svfprintf_r+0x1172>
  403ac4:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403ac8:	f7ff b8eb 	b.w	402ca2 <_svfprintf_r+0x602>
  403acc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403ace:	230c      	movs	r3, #12
  403ad0:	6013      	str	r3, [r2, #0]
  403ad2:	f04f 33ff 	mov.w	r3, #4294967295
  403ad6:	9309      	str	r3, [sp, #36]	; 0x24
  403ad8:	f7fe bebd 	b.w	402856 <_svfprintf_r+0x1b6>
  403adc:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403ae0:	f7ff b99a 	b.w	402e18 <_svfprintf_r+0x778>
  403ae4:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403ae8:	f7ff b976 	b.w	402dd8 <_svfprintf_r+0x738>
  403aec:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403af0:	f7ff b959 	b.w	402da6 <_svfprintf_r+0x706>
  403af4:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403af8:	f7ff b912 	b.w	402d20 <_svfprintf_r+0x680>

00403afc <register_fini>:
  403afc:	4b02      	ldr	r3, [pc, #8]	; (403b08 <register_fini+0xc>)
  403afe:	b113      	cbz	r3, 403b06 <register_fini+0xa>
  403b00:	4802      	ldr	r0, [pc, #8]	; (403b0c <register_fini+0x10>)
  403b02:	f000 b805 	b.w	403b10 <atexit>
  403b06:	4770      	bx	lr
  403b08:	00000000 	.word	0x00000000
  403b0c:	00404a9d 	.word	0x00404a9d

00403b10 <atexit>:
  403b10:	2300      	movs	r3, #0
  403b12:	4601      	mov	r1, r0
  403b14:	461a      	mov	r2, r3
  403b16:	4618      	mov	r0, r3
  403b18:	f001 bf9e 	b.w	405a58 <__register_exitproc>

00403b1c <quorem>:
  403b1c:	6902      	ldr	r2, [r0, #16]
  403b1e:	690b      	ldr	r3, [r1, #16]
  403b20:	4293      	cmp	r3, r2
  403b22:	f300 808d 	bgt.w	403c40 <quorem+0x124>
  403b26:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403b2a:	f103 38ff 	add.w	r8, r3, #4294967295
  403b2e:	f101 0714 	add.w	r7, r1, #20
  403b32:	f100 0b14 	add.w	fp, r0, #20
  403b36:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  403b3a:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  403b3e:	ea4f 0488 	mov.w	r4, r8, lsl #2
  403b42:	b083      	sub	sp, #12
  403b44:	3201      	adds	r2, #1
  403b46:	fbb3 f9f2 	udiv	r9, r3, r2
  403b4a:	eb0b 0304 	add.w	r3, fp, r4
  403b4e:	9400      	str	r4, [sp, #0]
  403b50:	eb07 0a04 	add.w	sl, r7, r4
  403b54:	9301      	str	r3, [sp, #4]
  403b56:	f1b9 0f00 	cmp.w	r9, #0
  403b5a:	d039      	beq.n	403bd0 <quorem+0xb4>
  403b5c:	2500      	movs	r5, #0
  403b5e:	462e      	mov	r6, r5
  403b60:	46bc      	mov	ip, r7
  403b62:	46de      	mov	lr, fp
  403b64:	f85c 4b04 	ldr.w	r4, [ip], #4
  403b68:	f8de 3000 	ldr.w	r3, [lr]
  403b6c:	b2a2      	uxth	r2, r4
  403b6e:	fb09 5502 	mla	r5, r9, r2, r5
  403b72:	0c22      	lsrs	r2, r4, #16
  403b74:	0c2c      	lsrs	r4, r5, #16
  403b76:	fb09 4202 	mla	r2, r9, r2, r4
  403b7a:	b2ad      	uxth	r5, r5
  403b7c:	1b75      	subs	r5, r6, r5
  403b7e:	b296      	uxth	r6, r2
  403b80:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  403b84:	fa15 f383 	uxtah	r3, r5, r3
  403b88:	eb06 4623 	add.w	r6, r6, r3, asr #16
  403b8c:	b29b      	uxth	r3, r3
  403b8e:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  403b92:	45e2      	cmp	sl, ip
  403b94:	ea4f 4512 	mov.w	r5, r2, lsr #16
  403b98:	f84e 3b04 	str.w	r3, [lr], #4
  403b9c:	ea4f 4626 	mov.w	r6, r6, asr #16
  403ba0:	d2e0      	bcs.n	403b64 <quorem+0x48>
  403ba2:	9b00      	ldr	r3, [sp, #0]
  403ba4:	f85b 3003 	ldr.w	r3, [fp, r3]
  403ba8:	b993      	cbnz	r3, 403bd0 <quorem+0xb4>
  403baa:	9c01      	ldr	r4, [sp, #4]
  403bac:	1f23      	subs	r3, r4, #4
  403bae:	459b      	cmp	fp, r3
  403bb0:	d20c      	bcs.n	403bcc <quorem+0xb0>
  403bb2:	f854 3c04 	ldr.w	r3, [r4, #-4]
  403bb6:	b94b      	cbnz	r3, 403bcc <quorem+0xb0>
  403bb8:	f1a4 0308 	sub.w	r3, r4, #8
  403bbc:	e002      	b.n	403bc4 <quorem+0xa8>
  403bbe:	681a      	ldr	r2, [r3, #0]
  403bc0:	3b04      	subs	r3, #4
  403bc2:	b91a      	cbnz	r2, 403bcc <quorem+0xb0>
  403bc4:	459b      	cmp	fp, r3
  403bc6:	f108 38ff 	add.w	r8, r8, #4294967295
  403bca:	d3f8      	bcc.n	403bbe <quorem+0xa2>
  403bcc:	f8c0 8010 	str.w	r8, [r0, #16]
  403bd0:	4604      	mov	r4, r0
  403bd2:	f001 fd39 	bl	405648 <__mcmp>
  403bd6:	2800      	cmp	r0, #0
  403bd8:	db2e      	blt.n	403c38 <quorem+0x11c>
  403bda:	f109 0901 	add.w	r9, r9, #1
  403bde:	465d      	mov	r5, fp
  403be0:	2300      	movs	r3, #0
  403be2:	f857 1b04 	ldr.w	r1, [r7], #4
  403be6:	6828      	ldr	r0, [r5, #0]
  403be8:	b28a      	uxth	r2, r1
  403bea:	1a9a      	subs	r2, r3, r2
  403bec:	0c0b      	lsrs	r3, r1, #16
  403bee:	fa12 f280 	uxtah	r2, r2, r0
  403bf2:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  403bf6:	eb03 4322 	add.w	r3, r3, r2, asr #16
  403bfa:	b292      	uxth	r2, r2
  403bfc:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  403c00:	45ba      	cmp	sl, r7
  403c02:	f845 2b04 	str.w	r2, [r5], #4
  403c06:	ea4f 4323 	mov.w	r3, r3, asr #16
  403c0a:	d2ea      	bcs.n	403be2 <quorem+0xc6>
  403c0c:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  403c10:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  403c14:	b982      	cbnz	r2, 403c38 <quorem+0x11c>
  403c16:	1f1a      	subs	r2, r3, #4
  403c18:	4593      	cmp	fp, r2
  403c1a:	d20b      	bcs.n	403c34 <quorem+0x118>
  403c1c:	f853 2c04 	ldr.w	r2, [r3, #-4]
  403c20:	b942      	cbnz	r2, 403c34 <quorem+0x118>
  403c22:	3b08      	subs	r3, #8
  403c24:	e002      	b.n	403c2c <quorem+0x110>
  403c26:	681a      	ldr	r2, [r3, #0]
  403c28:	3b04      	subs	r3, #4
  403c2a:	b91a      	cbnz	r2, 403c34 <quorem+0x118>
  403c2c:	459b      	cmp	fp, r3
  403c2e:	f108 38ff 	add.w	r8, r8, #4294967295
  403c32:	d3f8      	bcc.n	403c26 <quorem+0x10a>
  403c34:	f8c4 8010 	str.w	r8, [r4, #16]
  403c38:	4648      	mov	r0, r9
  403c3a:	b003      	add	sp, #12
  403c3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403c40:	2000      	movs	r0, #0
  403c42:	4770      	bx	lr
  403c44:	0000      	movs	r0, r0
	...

00403c48 <_dtoa_r>:
  403c48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403c4c:	6c01      	ldr	r1, [r0, #64]	; 0x40
  403c4e:	b09b      	sub	sp, #108	; 0x6c
  403c50:	4604      	mov	r4, r0
  403c52:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  403c54:	4692      	mov	sl, r2
  403c56:	469b      	mov	fp, r3
  403c58:	b141      	cbz	r1, 403c6c <_dtoa_r+0x24>
  403c5a:	6c42      	ldr	r2, [r0, #68]	; 0x44
  403c5c:	604a      	str	r2, [r1, #4]
  403c5e:	2301      	movs	r3, #1
  403c60:	4093      	lsls	r3, r2
  403c62:	608b      	str	r3, [r1, #8]
  403c64:	f001 fb18 	bl	405298 <_Bfree>
  403c68:	2300      	movs	r3, #0
  403c6a:	6423      	str	r3, [r4, #64]	; 0x40
  403c6c:	f1bb 0f00 	cmp.w	fp, #0
  403c70:	465d      	mov	r5, fp
  403c72:	db35      	blt.n	403ce0 <_dtoa_r+0x98>
  403c74:	2300      	movs	r3, #0
  403c76:	6033      	str	r3, [r6, #0]
  403c78:	4b9d      	ldr	r3, [pc, #628]	; (403ef0 <_dtoa_r+0x2a8>)
  403c7a:	43ab      	bics	r3, r5
  403c7c:	d015      	beq.n	403caa <_dtoa_r+0x62>
  403c7e:	4650      	mov	r0, sl
  403c80:	4659      	mov	r1, fp
  403c82:	2200      	movs	r2, #0
  403c84:	2300      	movs	r3, #0
  403c86:	f7fe fa71 	bl	40216c <__aeabi_dcmpeq>
  403c8a:	4680      	mov	r8, r0
  403c8c:	2800      	cmp	r0, #0
  403c8e:	d02d      	beq.n	403cec <_dtoa_r+0xa4>
  403c90:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403c92:	2301      	movs	r3, #1
  403c94:	6013      	str	r3, [r2, #0]
  403c96:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403c98:	2b00      	cmp	r3, #0
  403c9a:	f000 80bd 	beq.w	403e18 <_dtoa_r+0x1d0>
  403c9e:	4895      	ldr	r0, [pc, #596]	; (403ef4 <_dtoa_r+0x2ac>)
  403ca0:	6018      	str	r0, [r3, #0]
  403ca2:	3801      	subs	r0, #1
  403ca4:	b01b      	add	sp, #108	; 0x6c
  403ca6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403caa:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403cac:	f242 730f 	movw	r3, #9999	; 0x270f
  403cb0:	6013      	str	r3, [r2, #0]
  403cb2:	f1ba 0f00 	cmp.w	sl, #0
  403cb6:	d10d      	bne.n	403cd4 <_dtoa_r+0x8c>
  403cb8:	f3c5 0513 	ubfx	r5, r5, #0, #20
  403cbc:	b955      	cbnz	r5, 403cd4 <_dtoa_r+0x8c>
  403cbe:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403cc0:	488d      	ldr	r0, [pc, #564]	; (403ef8 <_dtoa_r+0x2b0>)
  403cc2:	2b00      	cmp	r3, #0
  403cc4:	d0ee      	beq.n	403ca4 <_dtoa_r+0x5c>
  403cc6:	f100 0308 	add.w	r3, r0, #8
  403cca:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  403ccc:	6013      	str	r3, [r2, #0]
  403cce:	b01b      	add	sp, #108	; 0x6c
  403cd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403cd4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403cd6:	4889      	ldr	r0, [pc, #548]	; (403efc <_dtoa_r+0x2b4>)
  403cd8:	2b00      	cmp	r3, #0
  403cda:	d0e3      	beq.n	403ca4 <_dtoa_r+0x5c>
  403cdc:	1cc3      	adds	r3, r0, #3
  403cde:	e7f4      	b.n	403cca <_dtoa_r+0x82>
  403ce0:	2301      	movs	r3, #1
  403ce2:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  403ce6:	6033      	str	r3, [r6, #0]
  403ce8:	46ab      	mov	fp, r5
  403cea:	e7c5      	b.n	403c78 <_dtoa_r+0x30>
  403cec:	aa18      	add	r2, sp, #96	; 0x60
  403cee:	ab19      	add	r3, sp, #100	; 0x64
  403cf0:	9201      	str	r2, [sp, #4]
  403cf2:	9300      	str	r3, [sp, #0]
  403cf4:	4652      	mov	r2, sl
  403cf6:	465b      	mov	r3, fp
  403cf8:	4620      	mov	r0, r4
  403cfa:	f001 fd45 	bl	405788 <__d2b>
  403cfe:	0d2b      	lsrs	r3, r5, #20
  403d00:	4681      	mov	r9, r0
  403d02:	d071      	beq.n	403de8 <_dtoa_r+0x1a0>
  403d04:	f3cb 0213 	ubfx	r2, fp, #0, #20
  403d08:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  403d0c:	9f18      	ldr	r7, [sp, #96]	; 0x60
  403d0e:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  403d12:	4650      	mov	r0, sl
  403d14:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  403d18:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  403d1c:	2200      	movs	r2, #0
  403d1e:	4b78      	ldr	r3, [pc, #480]	; (403f00 <_dtoa_r+0x2b8>)
  403d20:	f7fd fe08 	bl	401934 <__aeabi_dsub>
  403d24:	a36c      	add	r3, pc, #432	; (adr r3, 403ed8 <_dtoa_r+0x290>)
  403d26:	e9d3 2300 	ldrd	r2, r3, [r3]
  403d2a:	f7fd ffb7 	bl	401c9c <__aeabi_dmul>
  403d2e:	a36c      	add	r3, pc, #432	; (adr r3, 403ee0 <_dtoa_r+0x298>)
  403d30:	e9d3 2300 	ldrd	r2, r3, [r3]
  403d34:	f7fd fe00 	bl	401938 <__adddf3>
  403d38:	e9cd 0102 	strd	r0, r1, [sp, #8]
  403d3c:	4630      	mov	r0, r6
  403d3e:	f7fd ff47 	bl	401bd0 <__aeabi_i2d>
  403d42:	a369      	add	r3, pc, #420	; (adr r3, 403ee8 <_dtoa_r+0x2a0>)
  403d44:	e9d3 2300 	ldrd	r2, r3, [r3]
  403d48:	f7fd ffa8 	bl	401c9c <__aeabi_dmul>
  403d4c:	4602      	mov	r2, r0
  403d4e:	460b      	mov	r3, r1
  403d50:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  403d54:	f7fd fdf0 	bl	401938 <__adddf3>
  403d58:	e9cd 0104 	strd	r0, r1, [sp, #16]
  403d5c:	f002 fa88 	bl	406270 <__aeabi_d2iz>
  403d60:	2200      	movs	r2, #0
  403d62:	9002      	str	r0, [sp, #8]
  403d64:	2300      	movs	r3, #0
  403d66:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  403d6a:	f7fe fa09 	bl	402180 <__aeabi_dcmplt>
  403d6e:	2800      	cmp	r0, #0
  403d70:	f040 8173 	bne.w	40405a <_dtoa_r+0x412>
  403d74:	9d02      	ldr	r5, [sp, #8]
  403d76:	2d16      	cmp	r5, #22
  403d78:	f200 815d 	bhi.w	404036 <_dtoa_r+0x3ee>
  403d7c:	4b61      	ldr	r3, [pc, #388]	; (403f04 <_dtoa_r+0x2bc>)
  403d7e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  403d82:	e9d3 0100 	ldrd	r0, r1, [r3]
  403d86:	4652      	mov	r2, sl
  403d88:	465b      	mov	r3, fp
  403d8a:	f7fe fa17 	bl	4021bc <__aeabi_dcmpgt>
  403d8e:	2800      	cmp	r0, #0
  403d90:	f000 81c5 	beq.w	40411e <_dtoa_r+0x4d6>
  403d94:	1e6b      	subs	r3, r5, #1
  403d96:	9302      	str	r3, [sp, #8]
  403d98:	2300      	movs	r3, #0
  403d9a:	930e      	str	r3, [sp, #56]	; 0x38
  403d9c:	1bbf      	subs	r7, r7, r6
  403d9e:	1e7b      	subs	r3, r7, #1
  403da0:	9306      	str	r3, [sp, #24]
  403da2:	f100 8154 	bmi.w	40404e <_dtoa_r+0x406>
  403da6:	2300      	movs	r3, #0
  403da8:	9308      	str	r3, [sp, #32]
  403daa:	9b02      	ldr	r3, [sp, #8]
  403dac:	2b00      	cmp	r3, #0
  403dae:	f2c0 8145 	blt.w	40403c <_dtoa_r+0x3f4>
  403db2:	9a06      	ldr	r2, [sp, #24]
  403db4:	930d      	str	r3, [sp, #52]	; 0x34
  403db6:	4611      	mov	r1, r2
  403db8:	4419      	add	r1, r3
  403dba:	2300      	movs	r3, #0
  403dbc:	9106      	str	r1, [sp, #24]
  403dbe:	930c      	str	r3, [sp, #48]	; 0x30
  403dc0:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403dc2:	2b09      	cmp	r3, #9
  403dc4:	d82a      	bhi.n	403e1c <_dtoa_r+0x1d4>
  403dc6:	2b05      	cmp	r3, #5
  403dc8:	f340 865b 	ble.w	404a82 <_dtoa_r+0xe3a>
  403dcc:	3b04      	subs	r3, #4
  403dce:	9324      	str	r3, [sp, #144]	; 0x90
  403dd0:	2500      	movs	r5, #0
  403dd2:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403dd4:	3b02      	subs	r3, #2
  403dd6:	2b03      	cmp	r3, #3
  403dd8:	f200 8642 	bhi.w	404a60 <_dtoa_r+0xe18>
  403ddc:	e8df f013 	tbh	[pc, r3, lsl #1]
  403de0:	02c903d4 	.word	0x02c903d4
  403de4:	046103df 	.word	0x046103df
  403de8:	9f18      	ldr	r7, [sp, #96]	; 0x60
  403dea:	9e19      	ldr	r6, [sp, #100]	; 0x64
  403dec:	443e      	add	r6, r7
  403dee:	f206 4332 	addw	r3, r6, #1074	; 0x432
  403df2:	2b20      	cmp	r3, #32
  403df4:	f340 818e 	ble.w	404114 <_dtoa_r+0x4cc>
  403df8:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  403dfc:	f206 4012 	addw	r0, r6, #1042	; 0x412
  403e00:	409d      	lsls	r5, r3
  403e02:	fa2a f000 	lsr.w	r0, sl, r0
  403e06:	4328      	orrs	r0, r5
  403e08:	f7fd fed2 	bl	401bb0 <__aeabi_ui2d>
  403e0c:	2301      	movs	r3, #1
  403e0e:	3e01      	subs	r6, #1
  403e10:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  403e14:	9314      	str	r3, [sp, #80]	; 0x50
  403e16:	e781      	b.n	403d1c <_dtoa_r+0xd4>
  403e18:	483b      	ldr	r0, [pc, #236]	; (403f08 <_dtoa_r+0x2c0>)
  403e1a:	e743      	b.n	403ca4 <_dtoa_r+0x5c>
  403e1c:	2100      	movs	r1, #0
  403e1e:	6461      	str	r1, [r4, #68]	; 0x44
  403e20:	4620      	mov	r0, r4
  403e22:	9125      	str	r1, [sp, #148]	; 0x94
  403e24:	f001 fa12 	bl	40524c <_Balloc>
  403e28:	f04f 33ff 	mov.w	r3, #4294967295
  403e2c:	930a      	str	r3, [sp, #40]	; 0x28
  403e2e:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403e30:	930f      	str	r3, [sp, #60]	; 0x3c
  403e32:	2301      	movs	r3, #1
  403e34:	9004      	str	r0, [sp, #16]
  403e36:	6420      	str	r0, [r4, #64]	; 0x40
  403e38:	9224      	str	r2, [sp, #144]	; 0x90
  403e3a:	930b      	str	r3, [sp, #44]	; 0x2c
  403e3c:	9b19      	ldr	r3, [sp, #100]	; 0x64
  403e3e:	2b00      	cmp	r3, #0
  403e40:	f2c0 80d9 	blt.w	403ff6 <_dtoa_r+0x3ae>
  403e44:	9a02      	ldr	r2, [sp, #8]
  403e46:	2a0e      	cmp	r2, #14
  403e48:	f300 80d5 	bgt.w	403ff6 <_dtoa_r+0x3ae>
  403e4c:	4b2d      	ldr	r3, [pc, #180]	; (403f04 <_dtoa_r+0x2bc>)
  403e4e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403e52:	e9d3 2300 	ldrd	r2, r3, [r3]
  403e56:	e9cd 2308 	strd	r2, r3, [sp, #32]
  403e5a:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403e5c:	2b00      	cmp	r3, #0
  403e5e:	f2c0 83ba 	blt.w	4045d6 <_dtoa_r+0x98e>
  403e62:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  403e66:	4650      	mov	r0, sl
  403e68:	462a      	mov	r2, r5
  403e6a:	4633      	mov	r3, r6
  403e6c:	4659      	mov	r1, fp
  403e6e:	f7fe f83f 	bl	401ef0 <__aeabi_ddiv>
  403e72:	f002 f9fd 	bl	406270 <__aeabi_d2iz>
  403e76:	4680      	mov	r8, r0
  403e78:	f7fd feaa 	bl	401bd0 <__aeabi_i2d>
  403e7c:	462a      	mov	r2, r5
  403e7e:	4633      	mov	r3, r6
  403e80:	f7fd ff0c 	bl	401c9c <__aeabi_dmul>
  403e84:	460b      	mov	r3, r1
  403e86:	4602      	mov	r2, r0
  403e88:	4659      	mov	r1, fp
  403e8a:	4650      	mov	r0, sl
  403e8c:	f7fd fd52 	bl	401934 <__aeabi_dsub>
  403e90:	9d04      	ldr	r5, [sp, #16]
  403e92:	f108 0330 	add.w	r3, r8, #48	; 0x30
  403e96:	702b      	strb	r3, [r5, #0]
  403e98:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403e9a:	2b01      	cmp	r3, #1
  403e9c:	4606      	mov	r6, r0
  403e9e:	460f      	mov	r7, r1
  403ea0:	f105 0501 	add.w	r5, r5, #1
  403ea4:	d068      	beq.n	403f78 <_dtoa_r+0x330>
  403ea6:	2200      	movs	r2, #0
  403ea8:	4b18      	ldr	r3, [pc, #96]	; (403f0c <_dtoa_r+0x2c4>)
  403eaa:	f7fd fef7 	bl	401c9c <__aeabi_dmul>
  403eae:	2200      	movs	r2, #0
  403eb0:	2300      	movs	r3, #0
  403eb2:	4606      	mov	r6, r0
  403eb4:	460f      	mov	r7, r1
  403eb6:	f7fe f959 	bl	40216c <__aeabi_dcmpeq>
  403eba:	2800      	cmp	r0, #0
  403ebc:	f040 8088 	bne.w	403fd0 <_dtoa_r+0x388>
  403ec0:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  403ec4:	f04f 0a00 	mov.w	sl, #0
  403ec8:	f8df b040 	ldr.w	fp, [pc, #64]	; 403f0c <_dtoa_r+0x2c4>
  403ecc:	940c      	str	r4, [sp, #48]	; 0x30
  403ece:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  403ed2:	e028      	b.n	403f26 <_dtoa_r+0x2de>
  403ed4:	f3af 8000 	nop.w
  403ed8:	636f4361 	.word	0x636f4361
  403edc:	3fd287a7 	.word	0x3fd287a7
  403ee0:	8b60c8b3 	.word	0x8b60c8b3
  403ee4:	3fc68a28 	.word	0x3fc68a28
  403ee8:	509f79fb 	.word	0x509f79fb
  403eec:	3fd34413 	.word	0x3fd34413
  403ef0:	7ff00000 	.word	0x7ff00000
  403ef4:	00406d61 	.word	0x00406d61
  403ef8:	00406d84 	.word	0x00406d84
  403efc:	00406d90 	.word	0x00406d90
  403f00:	3ff80000 	.word	0x3ff80000
  403f04:	00406dc0 	.word	0x00406dc0
  403f08:	00406d60 	.word	0x00406d60
  403f0c:	40240000 	.word	0x40240000
  403f10:	f7fd fec4 	bl	401c9c <__aeabi_dmul>
  403f14:	2200      	movs	r2, #0
  403f16:	2300      	movs	r3, #0
  403f18:	4606      	mov	r6, r0
  403f1a:	460f      	mov	r7, r1
  403f1c:	f7fe f926 	bl	40216c <__aeabi_dcmpeq>
  403f20:	2800      	cmp	r0, #0
  403f22:	f040 83c1 	bne.w	4046a8 <_dtoa_r+0xa60>
  403f26:	4642      	mov	r2, r8
  403f28:	464b      	mov	r3, r9
  403f2a:	4630      	mov	r0, r6
  403f2c:	4639      	mov	r1, r7
  403f2e:	f7fd ffdf 	bl	401ef0 <__aeabi_ddiv>
  403f32:	f002 f99d 	bl	406270 <__aeabi_d2iz>
  403f36:	4604      	mov	r4, r0
  403f38:	f7fd fe4a 	bl	401bd0 <__aeabi_i2d>
  403f3c:	4642      	mov	r2, r8
  403f3e:	464b      	mov	r3, r9
  403f40:	f7fd feac 	bl	401c9c <__aeabi_dmul>
  403f44:	4602      	mov	r2, r0
  403f46:	460b      	mov	r3, r1
  403f48:	4630      	mov	r0, r6
  403f4a:	4639      	mov	r1, r7
  403f4c:	f7fd fcf2 	bl	401934 <__aeabi_dsub>
  403f50:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  403f54:	9e04      	ldr	r6, [sp, #16]
  403f56:	f805 eb01 	strb.w	lr, [r5], #1
  403f5a:	eba5 0e06 	sub.w	lr, r5, r6
  403f5e:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  403f60:	45b6      	cmp	lr, r6
  403f62:	e9cd 0106 	strd	r0, r1, [sp, #24]
  403f66:	4652      	mov	r2, sl
  403f68:	465b      	mov	r3, fp
  403f6a:	d1d1      	bne.n	403f10 <_dtoa_r+0x2c8>
  403f6c:	46a0      	mov	r8, r4
  403f6e:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  403f72:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403f74:	4606      	mov	r6, r0
  403f76:	460f      	mov	r7, r1
  403f78:	4632      	mov	r2, r6
  403f7a:	463b      	mov	r3, r7
  403f7c:	4630      	mov	r0, r6
  403f7e:	4639      	mov	r1, r7
  403f80:	f7fd fcda 	bl	401938 <__adddf3>
  403f84:	4606      	mov	r6, r0
  403f86:	460f      	mov	r7, r1
  403f88:	4602      	mov	r2, r0
  403f8a:	460b      	mov	r3, r1
  403f8c:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403f90:	f7fe f8f6 	bl	402180 <__aeabi_dcmplt>
  403f94:	b948      	cbnz	r0, 403faa <_dtoa_r+0x362>
  403f96:	4632      	mov	r2, r6
  403f98:	463b      	mov	r3, r7
  403f9a:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403f9e:	f7fe f8e5 	bl	40216c <__aeabi_dcmpeq>
  403fa2:	b1a8      	cbz	r0, 403fd0 <_dtoa_r+0x388>
  403fa4:	f018 0f01 	tst.w	r8, #1
  403fa8:	d012      	beq.n	403fd0 <_dtoa_r+0x388>
  403faa:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  403fae:	9a04      	ldr	r2, [sp, #16]
  403fb0:	1e6b      	subs	r3, r5, #1
  403fb2:	e004      	b.n	403fbe <_dtoa_r+0x376>
  403fb4:	429a      	cmp	r2, r3
  403fb6:	f000 8401 	beq.w	4047bc <_dtoa_r+0xb74>
  403fba:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  403fbe:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  403fc2:	f103 0501 	add.w	r5, r3, #1
  403fc6:	d0f5      	beq.n	403fb4 <_dtoa_r+0x36c>
  403fc8:	f108 0801 	add.w	r8, r8, #1
  403fcc:	f883 8000 	strb.w	r8, [r3]
  403fd0:	4649      	mov	r1, r9
  403fd2:	4620      	mov	r0, r4
  403fd4:	f001 f960 	bl	405298 <_Bfree>
  403fd8:	2200      	movs	r2, #0
  403fda:	9b02      	ldr	r3, [sp, #8]
  403fdc:	702a      	strb	r2, [r5, #0]
  403fde:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403fe0:	3301      	adds	r3, #1
  403fe2:	6013      	str	r3, [r2, #0]
  403fe4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403fe6:	2b00      	cmp	r3, #0
  403fe8:	f000 839e 	beq.w	404728 <_dtoa_r+0xae0>
  403fec:	9804      	ldr	r0, [sp, #16]
  403fee:	601d      	str	r5, [r3, #0]
  403ff0:	b01b      	add	sp, #108	; 0x6c
  403ff2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403ff6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403ff8:	2a00      	cmp	r2, #0
  403ffa:	d03e      	beq.n	40407a <_dtoa_r+0x432>
  403ffc:	9a24      	ldr	r2, [sp, #144]	; 0x90
  403ffe:	2a01      	cmp	r2, #1
  404000:	f340 8311 	ble.w	404626 <_dtoa_r+0x9de>
  404004:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404006:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  404008:	1e5f      	subs	r7, r3, #1
  40400a:	42ba      	cmp	r2, r7
  40400c:	f2c0 838f 	blt.w	40472e <_dtoa_r+0xae6>
  404010:	1bd7      	subs	r7, r2, r7
  404012:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404014:	2b00      	cmp	r3, #0
  404016:	f2c0 848b 	blt.w	404930 <_dtoa_r+0xce8>
  40401a:	9d08      	ldr	r5, [sp, #32]
  40401c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40401e:	9a08      	ldr	r2, [sp, #32]
  404020:	441a      	add	r2, r3
  404022:	9208      	str	r2, [sp, #32]
  404024:	9a06      	ldr	r2, [sp, #24]
  404026:	2101      	movs	r1, #1
  404028:	441a      	add	r2, r3
  40402a:	4620      	mov	r0, r4
  40402c:	9206      	str	r2, [sp, #24]
  40402e:	f001 f9cd 	bl	4053cc <__i2b>
  404032:	4606      	mov	r6, r0
  404034:	e024      	b.n	404080 <_dtoa_r+0x438>
  404036:	2301      	movs	r3, #1
  404038:	930e      	str	r3, [sp, #56]	; 0x38
  40403a:	e6af      	b.n	403d9c <_dtoa_r+0x154>
  40403c:	9a08      	ldr	r2, [sp, #32]
  40403e:	9b02      	ldr	r3, [sp, #8]
  404040:	1ad2      	subs	r2, r2, r3
  404042:	425b      	negs	r3, r3
  404044:	930c      	str	r3, [sp, #48]	; 0x30
  404046:	2300      	movs	r3, #0
  404048:	9208      	str	r2, [sp, #32]
  40404a:	930d      	str	r3, [sp, #52]	; 0x34
  40404c:	e6b8      	b.n	403dc0 <_dtoa_r+0x178>
  40404e:	f1c7 0301 	rsb	r3, r7, #1
  404052:	9308      	str	r3, [sp, #32]
  404054:	2300      	movs	r3, #0
  404056:	9306      	str	r3, [sp, #24]
  404058:	e6a7      	b.n	403daa <_dtoa_r+0x162>
  40405a:	9d02      	ldr	r5, [sp, #8]
  40405c:	4628      	mov	r0, r5
  40405e:	f7fd fdb7 	bl	401bd0 <__aeabi_i2d>
  404062:	4602      	mov	r2, r0
  404064:	460b      	mov	r3, r1
  404066:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  40406a:	f7fe f87f 	bl	40216c <__aeabi_dcmpeq>
  40406e:	2800      	cmp	r0, #0
  404070:	f47f ae80 	bne.w	403d74 <_dtoa_r+0x12c>
  404074:	1e6b      	subs	r3, r5, #1
  404076:	9302      	str	r3, [sp, #8]
  404078:	e67c      	b.n	403d74 <_dtoa_r+0x12c>
  40407a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  40407c:	9d08      	ldr	r5, [sp, #32]
  40407e:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  404080:	2d00      	cmp	r5, #0
  404082:	dd0c      	ble.n	40409e <_dtoa_r+0x456>
  404084:	9906      	ldr	r1, [sp, #24]
  404086:	2900      	cmp	r1, #0
  404088:	460b      	mov	r3, r1
  40408a:	dd08      	ble.n	40409e <_dtoa_r+0x456>
  40408c:	42a9      	cmp	r1, r5
  40408e:	9a08      	ldr	r2, [sp, #32]
  404090:	bfa8      	it	ge
  404092:	462b      	movge	r3, r5
  404094:	1ad2      	subs	r2, r2, r3
  404096:	1aed      	subs	r5, r5, r3
  404098:	1acb      	subs	r3, r1, r3
  40409a:	9208      	str	r2, [sp, #32]
  40409c:	9306      	str	r3, [sp, #24]
  40409e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4040a0:	b1d3      	cbz	r3, 4040d8 <_dtoa_r+0x490>
  4040a2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4040a4:	2b00      	cmp	r3, #0
  4040a6:	f000 82b7 	beq.w	404618 <_dtoa_r+0x9d0>
  4040aa:	2f00      	cmp	r7, #0
  4040ac:	dd10      	ble.n	4040d0 <_dtoa_r+0x488>
  4040ae:	4631      	mov	r1, r6
  4040b0:	463a      	mov	r2, r7
  4040b2:	4620      	mov	r0, r4
  4040b4:	f001 fa26 	bl	405504 <__pow5mult>
  4040b8:	464a      	mov	r2, r9
  4040ba:	4601      	mov	r1, r0
  4040bc:	4606      	mov	r6, r0
  4040be:	4620      	mov	r0, r4
  4040c0:	f001 f98e 	bl	4053e0 <__multiply>
  4040c4:	4649      	mov	r1, r9
  4040c6:	4680      	mov	r8, r0
  4040c8:	4620      	mov	r0, r4
  4040ca:	f001 f8e5 	bl	405298 <_Bfree>
  4040ce:	46c1      	mov	r9, r8
  4040d0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4040d2:	1bda      	subs	r2, r3, r7
  4040d4:	f040 82a1 	bne.w	40461a <_dtoa_r+0x9d2>
  4040d8:	2101      	movs	r1, #1
  4040da:	4620      	mov	r0, r4
  4040dc:	f001 f976 	bl	4053cc <__i2b>
  4040e0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4040e2:	2b00      	cmp	r3, #0
  4040e4:	4680      	mov	r8, r0
  4040e6:	dd1c      	ble.n	404122 <_dtoa_r+0x4da>
  4040e8:	4601      	mov	r1, r0
  4040ea:	461a      	mov	r2, r3
  4040ec:	4620      	mov	r0, r4
  4040ee:	f001 fa09 	bl	405504 <__pow5mult>
  4040f2:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4040f4:	2b01      	cmp	r3, #1
  4040f6:	4680      	mov	r8, r0
  4040f8:	f340 8254 	ble.w	4045a4 <_dtoa_r+0x95c>
  4040fc:	2300      	movs	r3, #0
  4040fe:	930c      	str	r3, [sp, #48]	; 0x30
  404100:	f8d8 3010 	ldr.w	r3, [r8, #16]
  404104:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  404108:	6918      	ldr	r0, [r3, #16]
  40410a:	f001 f90f 	bl	40532c <__hi0bits>
  40410e:	f1c0 0020 	rsb	r0, r0, #32
  404112:	e010      	b.n	404136 <_dtoa_r+0x4ee>
  404114:	f1c3 0520 	rsb	r5, r3, #32
  404118:	fa0a f005 	lsl.w	r0, sl, r5
  40411c:	e674      	b.n	403e08 <_dtoa_r+0x1c0>
  40411e:	900e      	str	r0, [sp, #56]	; 0x38
  404120:	e63c      	b.n	403d9c <_dtoa_r+0x154>
  404122:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404124:	2b01      	cmp	r3, #1
  404126:	f340 8287 	ble.w	404638 <_dtoa_r+0x9f0>
  40412a:	2300      	movs	r3, #0
  40412c:	930c      	str	r3, [sp, #48]	; 0x30
  40412e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  404130:	2001      	movs	r0, #1
  404132:	2b00      	cmp	r3, #0
  404134:	d1e4      	bne.n	404100 <_dtoa_r+0x4b8>
  404136:	9a06      	ldr	r2, [sp, #24]
  404138:	4410      	add	r0, r2
  40413a:	f010 001f 	ands.w	r0, r0, #31
  40413e:	f000 80a1 	beq.w	404284 <_dtoa_r+0x63c>
  404142:	f1c0 0320 	rsb	r3, r0, #32
  404146:	2b04      	cmp	r3, #4
  404148:	f340 849e 	ble.w	404a88 <_dtoa_r+0xe40>
  40414c:	9b08      	ldr	r3, [sp, #32]
  40414e:	f1c0 001c 	rsb	r0, r0, #28
  404152:	4403      	add	r3, r0
  404154:	9308      	str	r3, [sp, #32]
  404156:	4613      	mov	r3, r2
  404158:	4403      	add	r3, r0
  40415a:	4405      	add	r5, r0
  40415c:	9306      	str	r3, [sp, #24]
  40415e:	9b08      	ldr	r3, [sp, #32]
  404160:	2b00      	cmp	r3, #0
  404162:	dd05      	ble.n	404170 <_dtoa_r+0x528>
  404164:	4649      	mov	r1, r9
  404166:	461a      	mov	r2, r3
  404168:	4620      	mov	r0, r4
  40416a:	f001 fa1b 	bl	4055a4 <__lshift>
  40416e:	4681      	mov	r9, r0
  404170:	9b06      	ldr	r3, [sp, #24]
  404172:	2b00      	cmp	r3, #0
  404174:	dd05      	ble.n	404182 <_dtoa_r+0x53a>
  404176:	4641      	mov	r1, r8
  404178:	461a      	mov	r2, r3
  40417a:	4620      	mov	r0, r4
  40417c:	f001 fa12 	bl	4055a4 <__lshift>
  404180:	4680      	mov	r8, r0
  404182:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  404184:	2b00      	cmp	r3, #0
  404186:	f040 8086 	bne.w	404296 <_dtoa_r+0x64e>
  40418a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40418c:	2b00      	cmp	r3, #0
  40418e:	f340 8266 	ble.w	40465e <_dtoa_r+0xa16>
  404192:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  404194:	2b00      	cmp	r3, #0
  404196:	f000 8098 	beq.w	4042ca <_dtoa_r+0x682>
  40419a:	2d00      	cmp	r5, #0
  40419c:	dd05      	ble.n	4041aa <_dtoa_r+0x562>
  40419e:	4631      	mov	r1, r6
  4041a0:	462a      	mov	r2, r5
  4041a2:	4620      	mov	r0, r4
  4041a4:	f001 f9fe 	bl	4055a4 <__lshift>
  4041a8:	4606      	mov	r6, r0
  4041aa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4041ac:	2b00      	cmp	r3, #0
  4041ae:	f040 8337 	bne.w	404820 <_dtoa_r+0xbd8>
  4041b2:	9606      	str	r6, [sp, #24]
  4041b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4041b6:	9a04      	ldr	r2, [sp, #16]
  4041b8:	f8dd b018 	ldr.w	fp, [sp, #24]
  4041bc:	3b01      	subs	r3, #1
  4041be:	18d3      	adds	r3, r2, r3
  4041c0:	930b      	str	r3, [sp, #44]	; 0x2c
  4041c2:	f00a 0301 	and.w	r3, sl, #1
  4041c6:	930c      	str	r3, [sp, #48]	; 0x30
  4041c8:	4617      	mov	r7, r2
  4041ca:	46c2      	mov	sl, r8
  4041cc:	4651      	mov	r1, sl
  4041ce:	4648      	mov	r0, r9
  4041d0:	f7ff fca4 	bl	403b1c <quorem>
  4041d4:	4631      	mov	r1, r6
  4041d6:	4605      	mov	r5, r0
  4041d8:	4648      	mov	r0, r9
  4041da:	f001 fa35 	bl	405648 <__mcmp>
  4041de:	465a      	mov	r2, fp
  4041e0:	900a      	str	r0, [sp, #40]	; 0x28
  4041e2:	4651      	mov	r1, sl
  4041e4:	4620      	mov	r0, r4
  4041e6:	f001 fa4b 	bl	405680 <__mdiff>
  4041ea:	68c2      	ldr	r2, [r0, #12]
  4041ec:	4680      	mov	r8, r0
  4041ee:	f105 0330 	add.w	r3, r5, #48	; 0x30
  4041f2:	2a00      	cmp	r2, #0
  4041f4:	f040 822b 	bne.w	40464e <_dtoa_r+0xa06>
  4041f8:	4601      	mov	r1, r0
  4041fa:	4648      	mov	r0, r9
  4041fc:	9308      	str	r3, [sp, #32]
  4041fe:	f001 fa23 	bl	405648 <__mcmp>
  404202:	4641      	mov	r1, r8
  404204:	9006      	str	r0, [sp, #24]
  404206:	4620      	mov	r0, r4
  404208:	f001 f846 	bl	405298 <_Bfree>
  40420c:	9a06      	ldr	r2, [sp, #24]
  40420e:	9b08      	ldr	r3, [sp, #32]
  404210:	b932      	cbnz	r2, 404220 <_dtoa_r+0x5d8>
  404212:	9924      	ldr	r1, [sp, #144]	; 0x90
  404214:	b921      	cbnz	r1, 404220 <_dtoa_r+0x5d8>
  404216:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  404218:	2a00      	cmp	r2, #0
  40421a:	f000 83ef 	beq.w	4049fc <_dtoa_r+0xdb4>
  40421e:	9a24      	ldr	r2, [sp, #144]	; 0x90
  404220:	990a      	ldr	r1, [sp, #40]	; 0x28
  404222:	2900      	cmp	r1, #0
  404224:	f2c0 829f 	blt.w	404766 <_dtoa_r+0xb1e>
  404228:	d105      	bne.n	404236 <_dtoa_r+0x5ee>
  40422a:	9924      	ldr	r1, [sp, #144]	; 0x90
  40422c:	b919      	cbnz	r1, 404236 <_dtoa_r+0x5ee>
  40422e:	990c      	ldr	r1, [sp, #48]	; 0x30
  404230:	2900      	cmp	r1, #0
  404232:	f000 8298 	beq.w	404766 <_dtoa_r+0xb1e>
  404236:	2a00      	cmp	r2, #0
  404238:	f300 8306 	bgt.w	404848 <_dtoa_r+0xc00>
  40423c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  40423e:	703b      	strb	r3, [r7, #0]
  404240:	f107 0801 	add.w	r8, r7, #1
  404244:	4297      	cmp	r7, r2
  404246:	4645      	mov	r5, r8
  404248:	f000 830c 	beq.w	404864 <_dtoa_r+0xc1c>
  40424c:	4649      	mov	r1, r9
  40424e:	2300      	movs	r3, #0
  404250:	220a      	movs	r2, #10
  404252:	4620      	mov	r0, r4
  404254:	f001 f82a 	bl	4052ac <__multadd>
  404258:	455e      	cmp	r6, fp
  40425a:	4681      	mov	r9, r0
  40425c:	4631      	mov	r1, r6
  40425e:	f04f 0300 	mov.w	r3, #0
  404262:	f04f 020a 	mov.w	r2, #10
  404266:	4620      	mov	r0, r4
  404268:	f000 81eb 	beq.w	404642 <_dtoa_r+0x9fa>
  40426c:	f001 f81e 	bl	4052ac <__multadd>
  404270:	4659      	mov	r1, fp
  404272:	4606      	mov	r6, r0
  404274:	2300      	movs	r3, #0
  404276:	220a      	movs	r2, #10
  404278:	4620      	mov	r0, r4
  40427a:	f001 f817 	bl	4052ac <__multadd>
  40427e:	4647      	mov	r7, r8
  404280:	4683      	mov	fp, r0
  404282:	e7a3      	b.n	4041cc <_dtoa_r+0x584>
  404284:	201c      	movs	r0, #28
  404286:	9b08      	ldr	r3, [sp, #32]
  404288:	4403      	add	r3, r0
  40428a:	9308      	str	r3, [sp, #32]
  40428c:	9b06      	ldr	r3, [sp, #24]
  40428e:	4403      	add	r3, r0
  404290:	4405      	add	r5, r0
  404292:	9306      	str	r3, [sp, #24]
  404294:	e763      	b.n	40415e <_dtoa_r+0x516>
  404296:	4641      	mov	r1, r8
  404298:	4648      	mov	r0, r9
  40429a:	f001 f9d5 	bl	405648 <__mcmp>
  40429e:	2800      	cmp	r0, #0
  4042a0:	f6bf af73 	bge.w	40418a <_dtoa_r+0x542>
  4042a4:	9f02      	ldr	r7, [sp, #8]
  4042a6:	4649      	mov	r1, r9
  4042a8:	2300      	movs	r3, #0
  4042aa:	220a      	movs	r2, #10
  4042ac:	4620      	mov	r0, r4
  4042ae:	3f01      	subs	r7, #1
  4042b0:	9702      	str	r7, [sp, #8]
  4042b2:	f000 fffb 	bl	4052ac <__multadd>
  4042b6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4042b8:	4681      	mov	r9, r0
  4042ba:	2b00      	cmp	r3, #0
  4042bc:	f040 83b6 	bne.w	404a2c <_dtoa_r+0xde4>
  4042c0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4042c2:	2b00      	cmp	r3, #0
  4042c4:	f340 83bf 	ble.w	404a46 <_dtoa_r+0xdfe>
  4042c8:	930a      	str	r3, [sp, #40]	; 0x28
  4042ca:	f8dd b010 	ldr.w	fp, [sp, #16]
  4042ce:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  4042d0:	465d      	mov	r5, fp
  4042d2:	e002      	b.n	4042da <_dtoa_r+0x692>
  4042d4:	f000 ffea 	bl	4052ac <__multadd>
  4042d8:	4681      	mov	r9, r0
  4042da:	4641      	mov	r1, r8
  4042dc:	4648      	mov	r0, r9
  4042de:	f7ff fc1d 	bl	403b1c <quorem>
  4042e2:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  4042e6:	f805 ab01 	strb.w	sl, [r5], #1
  4042ea:	eba5 030b 	sub.w	r3, r5, fp
  4042ee:	42bb      	cmp	r3, r7
  4042f0:	f04f 020a 	mov.w	r2, #10
  4042f4:	f04f 0300 	mov.w	r3, #0
  4042f8:	4649      	mov	r1, r9
  4042fa:	4620      	mov	r0, r4
  4042fc:	dbea      	blt.n	4042d4 <_dtoa_r+0x68c>
  4042fe:	9b04      	ldr	r3, [sp, #16]
  404300:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  404302:	2a01      	cmp	r2, #1
  404304:	bfac      	ite	ge
  404306:	189b      	addge	r3, r3, r2
  404308:	3301      	addlt	r3, #1
  40430a:	461d      	mov	r5, r3
  40430c:	f04f 0b00 	mov.w	fp, #0
  404310:	4649      	mov	r1, r9
  404312:	2201      	movs	r2, #1
  404314:	4620      	mov	r0, r4
  404316:	f001 f945 	bl	4055a4 <__lshift>
  40431a:	4641      	mov	r1, r8
  40431c:	4681      	mov	r9, r0
  40431e:	f001 f993 	bl	405648 <__mcmp>
  404322:	2800      	cmp	r0, #0
  404324:	f340 823d 	ble.w	4047a2 <_dtoa_r+0xb5a>
  404328:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  40432c:	9904      	ldr	r1, [sp, #16]
  40432e:	1e6b      	subs	r3, r5, #1
  404330:	e004      	b.n	40433c <_dtoa_r+0x6f4>
  404332:	428b      	cmp	r3, r1
  404334:	f000 81ae 	beq.w	404694 <_dtoa_r+0xa4c>
  404338:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  40433c:	2a39      	cmp	r2, #57	; 0x39
  40433e:	f103 0501 	add.w	r5, r3, #1
  404342:	d0f6      	beq.n	404332 <_dtoa_r+0x6ea>
  404344:	3201      	adds	r2, #1
  404346:	701a      	strb	r2, [r3, #0]
  404348:	4641      	mov	r1, r8
  40434a:	4620      	mov	r0, r4
  40434c:	f000 ffa4 	bl	405298 <_Bfree>
  404350:	2e00      	cmp	r6, #0
  404352:	f43f ae3d 	beq.w	403fd0 <_dtoa_r+0x388>
  404356:	f1bb 0f00 	cmp.w	fp, #0
  40435a:	d005      	beq.n	404368 <_dtoa_r+0x720>
  40435c:	45b3      	cmp	fp, r6
  40435e:	d003      	beq.n	404368 <_dtoa_r+0x720>
  404360:	4659      	mov	r1, fp
  404362:	4620      	mov	r0, r4
  404364:	f000 ff98 	bl	405298 <_Bfree>
  404368:	4631      	mov	r1, r6
  40436a:	4620      	mov	r0, r4
  40436c:	f000 ff94 	bl	405298 <_Bfree>
  404370:	e62e      	b.n	403fd0 <_dtoa_r+0x388>
  404372:	2300      	movs	r3, #0
  404374:	930b      	str	r3, [sp, #44]	; 0x2c
  404376:	9b02      	ldr	r3, [sp, #8]
  404378:	9a25      	ldr	r2, [sp, #148]	; 0x94
  40437a:	4413      	add	r3, r2
  40437c:	930f      	str	r3, [sp, #60]	; 0x3c
  40437e:	3301      	adds	r3, #1
  404380:	2b01      	cmp	r3, #1
  404382:	461f      	mov	r7, r3
  404384:	461e      	mov	r6, r3
  404386:	930a      	str	r3, [sp, #40]	; 0x28
  404388:	bfb8      	it	lt
  40438a:	2701      	movlt	r7, #1
  40438c:	2100      	movs	r1, #0
  40438e:	2f17      	cmp	r7, #23
  404390:	6461      	str	r1, [r4, #68]	; 0x44
  404392:	d90a      	bls.n	4043aa <_dtoa_r+0x762>
  404394:	2201      	movs	r2, #1
  404396:	2304      	movs	r3, #4
  404398:	005b      	lsls	r3, r3, #1
  40439a:	f103 0014 	add.w	r0, r3, #20
  40439e:	4287      	cmp	r7, r0
  4043a0:	4611      	mov	r1, r2
  4043a2:	f102 0201 	add.w	r2, r2, #1
  4043a6:	d2f7      	bcs.n	404398 <_dtoa_r+0x750>
  4043a8:	6461      	str	r1, [r4, #68]	; 0x44
  4043aa:	4620      	mov	r0, r4
  4043ac:	f000 ff4e 	bl	40524c <_Balloc>
  4043b0:	2e0e      	cmp	r6, #14
  4043b2:	9004      	str	r0, [sp, #16]
  4043b4:	6420      	str	r0, [r4, #64]	; 0x40
  4043b6:	f63f ad41 	bhi.w	403e3c <_dtoa_r+0x1f4>
  4043ba:	2d00      	cmp	r5, #0
  4043bc:	f43f ad3e 	beq.w	403e3c <_dtoa_r+0x1f4>
  4043c0:	9902      	ldr	r1, [sp, #8]
  4043c2:	2900      	cmp	r1, #0
  4043c4:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  4043c8:	f340 8202 	ble.w	4047d0 <_dtoa_r+0xb88>
  4043cc:	4bb8      	ldr	r3, [pc, #736]	; (4046b0 <_dtoa_r+0xa68>)
  4043ce:	f001 020f 	and.w	r2, r1, #15
  4043d2:	110d      	asrs	r5, r1, #4
  4043d4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4043d8:	06e9      	lsls	r1, r5, #27
  4043da:	e9d3 6700 	ldrd	r6, r7, [r3]
  4043de:	f140 81ae 	bpl.w	40473e <_dtoa_r+0xaf6>
  4043e2:	4bb4      	ldr	r3, [pc, #720]	; (4046b4 <_dtoa_r+0xa6c>)
  4043e4:	4650      	mov	r0, sl
  4043e6:	4659      	mov	r1, fp
  4043e8:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  4043ec:	f7fd fd80 	bl	401ef0 <__aeabi_ddiv>
  4043f0:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  4043f4:	f005 050f 	and.w	r5, r5, #15
  4043f8:	f04f 0a03 	mov.w	sl, #3
  4043fc:	b18d      	cbz	r5, 404422 <_dtoa_r+0x7da>
  4043fe:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 4046b4 <_dtoa_r+0xa6c>
  404402:	07ea      	lsls	r2, r5, #31
  404404:	d509      	bpl.n	40441a <_dtoa_r+0x7d2>
  404406:	4630      	mov	r0, r6
  404408:	4639      	mov	r1, r7
  40440a:	e9d8 2300 	ldrd	r2, r3, [r8]
  40440e:	f7fd fc45 	bl	401c9c <__aeabi_dmul>
  404412:	f10a 0a01 	add.w	sl, sl, #1
  404416:	4606      	mov	r6, r0
  404418:	460f      	mov	r7, r1
  40441a:	106d      	asrs	r5, r5, #1
  40441c:	f108 0808 	add.w	r8, r8, #8
  404420:	d1ef      	bne.n	404402 <_dtoa_r+0x7ba>
  404422:	463b      	mov	r3, r7
  404424:	4632      	mov	r2, r6
  404426:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  40442a:	f7fd fd61 	bl	401ef0 <__aeabi_ddiv>
  40442e:	4607      	mov	r7, r0
  404430:	4688      	mov	r8, r1
  404432:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  404434:	b143      	cbz	r3, 404448 <_dtoa_r+0x800>
  404436:	2200      	movs	r2, #0
  404438:	4b9f      	ldr	r3, [pc, #636]	; (4046b8 <_dtoa_r+0xa70>)
  40443a:	4638      	mov	r0, r7
  40443c:	4641      	mov	r1, r8
  40443e:	f7fd fe9f 	bl	402180 <__aeabi_dcmplt>
  404442:	2800      	cmp	r0, #0
  404444:	f040 8286 	bne.w	404954 <_dtoa_r+0xd0c>
  404448:	4650      	mov	r0, sl
  40444a:	f7fd fbc1 	bl	401bd0 <__aeabi_i2d>
  40444e:	463a      	mov	r2, r7
  404450:	4643      	mov	r3, r8
  404452:	f7fd fc23 	bl	401c9c <__aeabi_dmul>
  404456:	4b99      	ldr	r3, [pc, #612]	; (4046bc <_dtoa_r+0xa74>)
  404458:	2200      	movs	r2, #0
  40445a:	f7fd fa6d 	bl	401938 <__adddf3>
  40445e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404460:	4605      	mov	r5, r0
  404462:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  404466:	2b00      	cmp	r3, #0
  404468:	f000 813e 	beq.w	4046e8 <_dtoa_r+0xaa0>
  40446c:	9b02      	ldr	r3, [sp, #8]
  40446e:	9315      	str	r3, [sp, #84]	; 0x54
  404470:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404472:	9312      	str	r3, [sp, #72]	; 0x48
  404474:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  404476:	2b00      	cmp	r3, #0
  404478:	f000 81fa 	beq.w	404870 <_dtoa_r+0xc28>
  40447c:	9a12      	ldr	r2, [sp, #72]	; 0x48
  40447e:	4b8c      	ldr	r3, [pc, #560]	; (4046b0 <_dtoa_r+0xa68>)
  404480:	498f      	ldr	r1, [pc, #572]	; (4046c0 <_dtoa_r+0xa78>)
  404482:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  404486:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  40448a:	2000      	movs	r0, #0
  40448c:	f7fd fd30 	bl	401ef0 <__aeabi_ddiv>
  404490:	462a      	mov	r2, r5
  404492:	4633      	mov	r3, r6
  404494:	f7fd fa4e 	bl	401934 <__aeabi_dsub>
  404498:	4682      	mov	sl, r0
  40449a:	468b      	mov	fp, r1
  40449c:	4638      	mov	r0, r7
  40449e:	4641      	mov	r1, r8
  4044a0:	f001 fee6 	bl	406270 <__aeabi_d2iz>
  4044a4:	4605      	mov	r5, r0
  4044a6:	f7fd fb93 	bl	401bd0 <__aeabi_i2d>
  4044aa:	4602      	mov	r2, r0
  4044ac:	460b      	mov	r3, r1
  4044ae:	4638      	mov	r0, r7
  4044b0:	4641      	mov	r1, r8
  4044b2:	f7fd fa3f 	bl	401934 <__aeabi_dsub>
  4044b6:	3530      	adds	r5, #48	; 0x30
  4044b8:	fa5f f885 	uxtb.w	r8, r5
  4044bc:	9d04      	ldr	r5, [sp, #16]
  4044be:	4606      	mov	r6, r0
  4044c0:	460f      	mov	r7, r1
  4044c2:	f885 8000 	strb.w	r8, [r5]
  4044c6:	4602      	mov	r2, r0
  4044c8:	460b      	mov	r3, r1
  4044ca:	4650      	mov	r0, sl
  4044cc:	4659      	mov	r1, fp
  4044ce:	3501      	adds	r5, #1
  4044d0:	f7fd fe74 	bl	4021bc <__aeabi_dcmpgt>
  4044d4:	2800      	cmp	r0, #0
  4044d6:	d154      	bne.n	404582 <_dtoa_r+0x93a>
  4044d8:	4632      	mov	r2, r6
  4044da:	463b      	mov	r3, r7
  4044dc:	2000      	movs	r0, #0
  4044de:	4976      	ldr	r1, [pc, #472]	; (4046b8 <_dtoa_r+0xa70>)
  4044e0:	f7fd fa28 	bl	401934 <__aeabi_dsub>
  4044e4:	4602      	mov	r2, r0
  4044e6:	460b      	mov	r3, r1
  4044e8:	4650      	mov	r0, sl
  4044ea:	4659      	mov	r1, fp
  4044ec:	f7fd fe66 	bl	4021bc <__aeabi_dcmpgt>
  4044f0:	2800      	cmp	r0, #0
  4044f2:	f040 8270 	bne.w	4049d6 <_dtoa_r+0xd8e>
  4044f6:	9a12      	ldr	r2, [sp, #72]	; 0x48
  4044f8:	2a01      	cmp	r2, #1
  4044fa:	f000 8111 	beq.w	404720 <_dtoa_r+0xad8>
  4044fe:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404500:	9a04      	ldr	r2, [sp, #16]
  404502:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  404506:	4413      	add	r3, r2
  404508:	4699      	mov	r9, r3
  40450a:	e00d      	b.n	404528 <_dtoa_r+0x8e0>
  40450c:	2000      	movs	r0, #0
  40450e:	496a      	ldr	r1, [pc, #424]	; (4046b8 <_dtoa_r+0xa70>)
  404510:	f7fd fa10 	bl	401934 <__aeabi_dsub>
  404514:	4652      	mov	r2, sl
  404516:	465b      	mov	r3, fp
  404518:	f7fd fe32 	bl	402180 <__aeabi_dcmplt>
  40451c:	2800      	cmp	r0, #0
  40451e:	f040 8258 	bne.w	4049d2 <_dtoa_r+0xd8a>
  404522:	454d      	cmp	r5, r9
  404524:	f000 80fa 	beq.w	40471c <_dtoa_r+0xad4>
  404528:	4650      	mov	r0, sl
  40452a:	4659      	mov	r1, fp
  40452c:	2200      	movs	r2, #0
  40452e:	4b65      	ldr	r3, [pc, #404]	; (4046c4 <_dtoa_r+0xa7c>)
  404530:	f7fd fbb4 	bl	401c9c <__aeabi_dmul>
  404534:	2200      	movs	r2, #0
  404536:	4b63      	ldr	r3, [pc, #396]	; (4046c4 <_dtoa_r+0xa7c>)
  404538:	4682      	mov	sl, r0
  40453a:	468b      	mov	fp, r1
  40453c:	4630      	mov	r0, r6
  40453e:	4639      	mov	r1, r7
  404540:	f7fd fbac 	bl	401c9c <__aeabi_dmul>
  404544:	460f      	mov	r7, r1
  404546:	4606      	mov	r6, r0
  404548:	f001 fe92 	bl	406270 <__aeabi_d2iz>
  40454c:	4680      	mov	r8, r0
  40454e:	f7fd fb3f 	bl	401bd0 <__aeabi_i2d>
  404552:	4602      	mov	r2, r0
  404554:	460b      	mov	r3, r1
  404556:	4630      	mov	r0, r6
  404558:	4639      	mov	r1, r7
  40455a:	f7fd f9eb 	bl	401934 <__aeabi_dsub>
  40455e:	f108 0830 	add.w	r8, r8, #48	; 0x30
  404562:	fa5f f888 	uxtb.w	r8, r8
  404566:	4652      	mov	r2, sl
  404568:	465b      	mov	r3, fp
  40456a:	f805 8b01 	strb.w	r8, [r5], #1
  40456e:	4606      	mov	r6, r0
  404570:	460f      	mov	r7, r1
  404572:	f7fd fe05 	bl	402180 <__aeabi_dcmplt>
  404576:	4632      	mov	r2, r6
  404578:	463b      	mov	r3, r7
  40457a:	2800      	cmp	r0, #0
  40457c:	d0c6      	beq.n	40450c <_dtoa_r+0x8c4>
  40457e:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  404582:	9b15      	ldr	r3, [sp, #84]	; 0x54
  404584:	9302      	str	r3, [sp, #8]
  404586:	e523      	b.n	403fd0 <_dtoa_r+0x388>
  404588:	2300      	movs	r3, #0
  40458a:	930b      	str	r3, [sp, #44]	; 0x2c
  40458c:	9b25      	ldr	r3, [sp, #148]	; 0x94
  40458e:	2b00      	cmp	r3, #0
  404590:	f340 80dc 	ble.w	40474c <_dtoa_r+0xb04>
  404594:	461f      	mov	r7, r3
  404596:	461e      	mov	r6, r3
  404598:	930f      	str	r3, [sp, #60]	; 0x3c
  40459a:	930a      	str	r3, [sp, #40]	; 0x28
  40459c:	e6f6      	b.n	40438c <_dtoa_r+0x744>
  40459e:	2301      	movs	r3, #1
  4045a0:	930b      	str	r3, [sp, #44]	; 0x2c
  4045a2:	e7f3      	b.n	40458c <_dtoa_r+0x944>
  4045a4:	f1ba 0f00 	cmp.w	sl, #0
  4045a8:	f47f ada8 	bne.w	4040fc <_dtoa_r+0x4b4>
  4045ac:	f3cb 0313 	ubfx	r3, fp, #0, #20
  4045b0:	2b00      	cmp	r3, #0
  4045b2:	f47f adba 	bne.w	40412a <_dtoa_r+0x4e2>
  4045b6:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  4045ba:	0d3f      	lsrs	r7, r7, #20
  4045bc:	053f      	lsls	r7, r7, #20
  4045be:	2f00      	cmp	r7, #0
  4045c0:	f000 820d 	beq.w	4049de <_dtoa_r+0xd96>
  4045c4:	9b08      	ldr	r3, [sp, #32]
  4045c6:	3301      	adds	r3, #1
  4045c8:	9308      	str	r3, [sp, #32]
  4045ca:	9b06      	ldr	r3, [sp, #24]
  4045cc:	3301      	adds	r3, #1
  4045ce:	9306      	str	r3, [sp, #24]
  4045d0:	2301      	movs	r3, #1
  4045d2:	930c      	str	r3, [sp, #48]	; 0x30
  4045d4:	e5ab      	b.n	40412e <_dtoa_r+0x4e6>
  4045d6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4045d8:	2b00      	cmp	r3, #0
  4045da:	f73f ac42 	bgt.w	403e62 <_dtoa_r+0x21a>
  4045de:	f040 8221 	bne.w	404a24 <_dtoa_r+0xddc>
  4045e2:	2200      	movs	r2, #0
  4045e4:	4b38      	ldr	r3, [pc, #224]	; (4046c8 <_dtoa_r+0xa80>)
  4045e6:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  4045ea:	f7fd fb57 	bl	401c9c <__aeabi_dmul>
  4045ee:	4652      	mov	r2, sl
  4045f0:	465b      	mov	r3, fp
  4045f2:	f7fd fdd9 	bl	4021a8 <__aeabi_dcmpge>
  4045f6:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  4045fa:	4646      	mov	r6, r8
  4045fc:	2800      	cmp	r0, #0
  4045fe:	d041      	beq.n	404684 <_dtoa_r+0xa3c>
  404600:	9b25      	ldr	r3, [sp, #148]	; 0x94
  404602:	9d04      	ldr	r5, [sp, #16]
  404604:	43db      	mvns	r3, r3
  404606:	9302      	str	r3, [sp, #8]
  404608:	4641      	mov	r1, r8
  40460a:	4620      	mov	r0, r4
  40460c:	f000 fe44 	bl	405298 <_Bfree>
  404610:	2e00      	cmp	r6, #0
  404612:	f43f acdd 	beq.w	403fd0 <_dtoa_r+0x388>
  404616:	e6a7      	b.n	404368 <_dtoa_r+0x720>
  404618:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  40461a:	4649      	mov	r1, r9
  40461c:	4620      	mov	r0, r4
  40461e:	f000 ff71 	bl	405504 <__pow5mult>
  404622:	4681      	mov	r9, r0
  404624:	e558      	b.n	4040d8 <_dtoa_r+0x490>
  404626:	9a14      	ldr	r2, [sp, #80]	; 0x50
  404628:	2a00      	cmp	r2, #0
  40462a:	f000 8187 	beq.w	40493c <_dtoa_r+0xcf4>
  40462e:	f203 4333 	addw	r3, r3, #1075	; 0x433
  404632:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  404634:	9d08      	ldr	r5, [sp, #32]
  404636:	e4f2      	b.n	40401e <_dtoa_r+0x3d6>
  404638:	f1ba 0f00 	cmp.w	sl, #0
  40463c:	f47f ad75 	bne.w	40412a <_dtoa_r+0x4e2>
  404640:	e7b4      	b.n	4045ac <_dtoa_r+0x964>
  404642:	f000 fe33 	bl	4052ac <__multadd>
  404646:	4647      	mov	r7, r8
  404648:	4606      	mov	r6, r0
  40464a:	4683      	mov	fp, r0
  40464c:	e5be      	b.n	4041cc <_dtoa_r+0x584>
  40464e:	4601      	mov	r1, r0
  404650:	4620      	mov	r0, r4
  404652:	9306      	str	r3, [sp, #24]
  404654:	f000 fe20 	bl	405298 <_Bfree>
  404658:	2201      	movs	r2, #1
  40465a:	9b06      	ldr	r3, [sp, #24]
  40465c:	e5e0      	b.n	404220 <_dtoa_r+0x5d8>
  40465e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404660:	2b02      	cmp	r3, #2
  404662:	f77f ad96 	ble.w	404192 <_dtoa_r+0x54a>
  404666:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404668:	2b00      	cmp	r3, #0
  40466a:	d1c9      	bne.n	404600 <_dtoa_r+0x9b8>
  40466c:	4641      	mov	r1, r8
  40466e:	2205      	movs	r2, #5
  404670:	4620      	mov	r0, r4
  404672:	f000 fe1b 	bl	4052ac <__multadd>
  404676:	4601      	mov	r1, r0
  404678:	4680      	mov	r8, r0
  40467a:	4648      	mov	r0, r9
  40467c:	f000 ffe4 	bl	405648 <__mcmp>
  404680:	2800      	cmp	r0, #0
  404682:	ddbd      	ble.n	404600 <_dtoa_r+0x9b8>
  404684:	9a02      	ldr	r2, [sp, #8]
  404686:	9904      	ldr	r1, [sp, #16]
  404688:	2331      	movs	r3, #49	; 0x31
  40468a:	3201      	adds	r2, #1
  40468c:	9202      	str	r2, [sp, #8]
  40468e:	700b      	strb	r3, [r1, #0]
  404690:	1c4d      	adds	r5, r1, #1
  404692:	e7b9      	b.n	404608 <_dtoa_r+0x9c0>
  404694:	9a02      	ldr	r2, [sp, #8]
  404696:	3201      	adds	r2, #1
  404698:	9202      	str	r2, [sp, #8]
  40469a:	9a04      	ldr	r2, [sp, #16]
  40469c:	2331      	movs	r3, #49	; 0x31
  40469e:	7013      	strb	r3, [r2, #0]
  4046a0:	e652      	b.n	404348 <_dtoa_r+0x700>
  4046a2:	2301      	movs	r3, #1
  4046a4:	930b      	str	r3, [sp, #44]	; 0x2c
  4046a6:	e666      	b.n	404376 <_dtoa_r+0x72e>
  4046a8:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  4046ac:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4046ae:	e48f      	b.n	403fd0 <_dtoa_r+0x388>
  4046b0:	00406dc0 	.word	0x00406dc0
  4046b4:	00406d98 	.word	0x00406d98
  4046b8:	3ff00000 	.word	0x3ff00000
  4046bc:	401c0000 	.word	0x401c0000
  4046c0:	3fe00000 	.word	0x3fe00000
  4046c4:	40240000 	.word	0x40240000
  4046c8:	40140000 	.word	0x40140000
  4046cc:	4650      	mov	r0, sl
  4046ce:	f7fd fa7f 	bl	401bd0 <__aeabi_i2d>
  4046d2:	463a      	mov	r2, r7
  4046d4:	4643      	mov	r3, r8
  4046d6:	f7fd fae1 	bl	401c9c <__aeabi_dmul>
  4046da:	2200      	movs	r2, #0
  4046dc:	4bc1      	ldr	r3, [pc, #772]	; (4049e4 <_dtoa_r+0xd9c>)
  4046de:	f7fd f92b 	bl	401938 <__adddf3>
  4046e2:	4605      	mov	r5, r0
  4046e4:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  4046e8:	4641      	mov	r1, r8
  4046ea:	2200      	movs	r2, #0
  4046ec:	4bbe      	ldr	r3, [pc, #760]	; (4049e8 <_dtoa_r+0xda0>)
  4046ee:	4638      	mov	r0, r7
  4046f0:	f7fd f920 	bl	401934 <__aeabi_dsub>
  4046f4:	462a      	mov	r2, r5
  4046f6:	4633      	mov	r3, r6
  4046f8:	4682      	mov	sl, r0
  4046fa:	468b      	mov	fp, r1
  4046fc:	f7fd fd5e 	bl	4021bc <__aeabi_dcmpgt>
  404700:	4680      	mov	r8, r0
  404702:	2800      	cmp	r0, #0
  404704:	f040 8110 	bne.w	404928 <_dtoa_r+0xce0>
  404708:	462a      	mov	r2, r5
  40470a:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  40470e:	4650      	mov	r0, sl
  404710:	4659      	mov	r1, fp
  404712:	f7fd fd35 	bl	402180 <__aeabi_dcmplt>
  404716:	b118      	cbz	r0, 404720 <_dtoa_r+0xad8>
  404718:	4646      	mov	r6, r8
  40471a:	e771      	b.n	404600 <_dtoa_r+0x9b8>
  40471c:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  404720:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  404724:	f7ff bb8a 	b.w	403e3c <_dtoa_r+0x1f4>
  404728:	9804      	ldr	r0, [sp, #16]
  40472a:	f7ff babb 	b.w	403ca4 <_dtoa_r+0x5c>
  40472e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  404730:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  404732:	970c      	str	r7, [sp, #48]	; 0x30
  404734:	1afb      	subs	r3, r7, r3
  404736:	441a      	add	r2, r3
  404738:	920d      	str	r2, [sp, #52]	; 0x34
  40473a:	2700      	movs	r7, #0
  40473c:	e469      	b.n	404012 <_dtoa_r+0x3ca>
  40473e:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  404742:	f04f 0a02 	mov.w	sl, #2
  404746:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  40474a:	e657      	b.n	4043fc <_dtoa_r+0x7b4>
  40474c:	2100      	movs	r1, #0
  40474e:	2301      	movs	r3, #1
  404750:	6461      	str	r1, [r4, #68]	; 0x44
  404752:	4620      	mov	r0, r4
  404754:	9325      	str	r3, [sp, #148]	; 0x94
  404756:	f000 fd79 	bl	40524c <_Balloc>
  40475a:	9b25      	ldr	r3, [sp, #148]	; 0x94
  40475c:	9004      	str	r0, [sp, #16]
  40475e:	6420      	str	r0, [r4, #64]	; 0x40
  404760:	930a      	str	r3, [sp, #40]	; 0x28
  404762:	930f      	str	r3, [sp, #60]	; 0x3c
  404764:	e629      	b.n	4043ba <_dtoa_r+0x772>
  404766:	2a00      	cmp	r2, #0
  404768:	46d0      	mov	r8, sl
  40476a:	f8cd b018 	str.w	fp, [sp, #24]
  40476e:	469a      	mov	sl, r3
  404770:	dd11      	ble.n	404796 <_dtoa_r+0xb4e>
  404772:	4649      	mov	r1, r9
  404774:	2201      	movs	r2, #1
  404776:	4620      	mov	r0, r4
  404778:	f000 ff14 	bl	4055a4 <__lshift>
  40477c:	4641      	mov	r1, r8
  40477e:	4681      	mov	r9, r0
  404780:	f000 ff62 	bl	405648 <__mcmp>
  404784:	2800      	cmp	r0, #0
  404786:	f340 8146 	ble.w	404a16 <_dtoa_r+0xdce>
  40478a:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  40478e:	f000 8106 	beq.w	40499e <_dtoa_r+0xd56>
  404792:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  404796:	46b3      	mov	fp, r6
  404798:	f887 a000 	strb.w	sl, [r7]
  40479c:	1c7d      	adds	r5, r7, #1
  40479e:	9e06      	ldr	r6, [sp, #24]
  4047a0:	e5d2      	b.n	404348 <_dtoa_r+0x700>
  4047a2:	d104      	bne.n	4047ae <_dtoa_r+0xb66>
  4047a4:	f01a 0f01 	tst.w	sl, #1
  4047a8:	d001      	beq.n	4047ae <_dtoa_r+0xb66>
  4047aa:	e5bd      	b.n	404328 <_dtoa_r+0x6e0>
  4047ac:	4615      	mov	r5, r2
  4047ae:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  4047b2:	2b30      	cmp	r3, #48	; 0x30
  4047b4:	f105 32ff 	add.w	r2, r5, #4294967295
  4047b8:	d0f8      	beq.n	4047ac <_dtoa_r+0xb64>
  4047ba:	e5c5      	b.n	404348 <_dtoa_r+0x700>
  4047bc:	9904      	ldr	r1, [sp, #16]
  4047be:	2230      	movs	r2, #48	; 0x30
  4047c0:	700a      	strb	r2, [r1, #0]
  4047c2:	9a02      	ldr	r2, [sp, #8]
  4047c4:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  4047c8:	3201      	adds	r2, #1
  4047ca:	9202      	str	r2, [sp, #8]
  4047cc:	f7ff bbfc 	b.w	403fc8 <_dtoa_r+0x380>
  4047d0:	f000 80bb 	beq.w	40494a <_dtoa_r+0xd02>
  4047d4:	9b02      	ldr	r3, [sp, #8]
  4047d6:	425d      	negs	r5, r3
  4047d8:	4b84      	ldr	r3, [pc, #528]	; (4049ec <_dtoa_r+0xda4>)
  4047da:	f005 020f 	and.w	r2, r5, #15
  4047de:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4047e2:	e9d3 2300 	ldrd	r2, r3, [r3]
  4047e6:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  4047ea:	f7fd fa57 	bl	401c9c <__aeabi_dmul>
  4047ee:	112d      	asrs	r5, r5, #4
  4047f0:	4607      	mov	r7, r0
  4047f2:	4688      	mov	r8, r1
  4047f4:	f000 812c 	beq.w	404a50 <_dtoa_r+0xe08>
  4047f8:	4e7d      	ldr	r6, [pc, #500]	; (4049f0 <_dtoa_r+0xda8>)
  4047fa:	f04f 0a02 	mov.w	sl, #2
  4047fe:	07eb      	lsls	r3, r5, #31
  404800:	d509      	bpl.n	404816 <_dtoa_r+0xbce>
  404802:	4638      	mov	r0, r7
  404804:	4641      	mov	r1, r8
  404806:	e9d6 2300 	ldrd	r2, r3, [r6]
  40480a:	f7fd fa47 	bl	401c9c <__aeabi_dmul>
  40480e:	f10a 0a01 	add.w	sl, sl, #1
  404812:	4607      	mov	r7, r0
  404814:	4688      	mov	r8, r1
  404816:	106d      	asrs	r5, r5, #1
  404818:	f106 0608 	add.w	r6, r6, #8
  40481c:	d1ef      	bne.n	4047fe <_dtoa_r+0xbb6>
  40481e:	e608      	b.n	404432 <_dtoa_r+0x7ea>
  404820:	6871      	ldr	r1, [r6, #4]
  404822:	4620      	mov	r0, r4
  404824:	f000 fd12 	bl	40524c <_Balloc>
  404828:	6933      	ldr	r3, [r6, #16]
  40482a:	3302      	adds	r3, #2
  40482c:	009a      	lsls	r2, r3, #2
  40482e:	4605      	mov	r5, r0
  404830:	f106 010c 	add.w	r1, r6, #12
  404834:	300c      	adds	r0, #12
  404836:	f000 fc63 	bl	405100 <memcpy>
  40483a:	4629      	mov	r1, r5
  40483c:	2201      	movs	r2, #1
  40483e:	4620      	mov	r0, r4
  404840:	f000 feb0 	bl	4055a4 <__lshift>
  404844:	9006      	str	r0, [sp, #24]
  404846:	e4b5      	b.n	4041b4 <_dtoa_r+0x56c>
  404848:	2b39      	cmp	r3, #57	; 0x39
  40484a:	f8cd b018 	str.w	fp, [sp, #24]
  40484e:	46d0      	mov	r8, sl
  404850:	f000 80a5 	beq.w	40499e <_dtoa_r+0xd56>
  404854:	f103 0a01 	add.w	sl, r3, #1
  404858:	46b3      	mov	fp, r6
  40485a:	f887 a000 	strb.w	sl, [r7]
  40485e:	1c7d      	adds	r5, r7, #1
  404860:	9e06      	ldr	r6, [sp, #24]
  404862:	e571      	b.n	404348 <_dtoa_r+0x700>
  404864:	465a      	mov	r2, fp
  404866:	46d0      	mov	r8, sl
  404868:	46b3      	mov	fp, r6
  40486a:	469a      	mov	sl, r3
  40486c:	4616      	mov	r6, r2
  40486e:	e54f      	b.n	404310 <_dtoa_r+0x6c8>
  404870:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404872:	495e      	ldr	r1, [pc, #376]	; (4049ec <_dtoa_r+0xda4>)
  404874:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  404878:	462a      	mov	r2, r5
  40487a:	4633      	mov	r3, r6
  40487c:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  404880:	f7fd fa0c 	bl	401c9c <__aeabi_dmul>
  404884:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  404888:	4638      	mov	r0, r7
  40488a:	4641      	mov	r1, r8
  40488c:	f001 fcf0 	bl	406270 <__aeabi_d2iz>
  404890:	4605      	mov	r5, r0
  404892:	f7fd f99d 	bl	401bd0 <__aeabi_i2d>
  404896:	460b      	mov	r3, r1
  404898:	4602      	mov	r2, r0
  40489a:	4641      	mov	r1, r8
  40489c:	4638      	mov	r0, r7
  40489e:	f7fd f849 	bl	401934 <__aeabi_dsub>
  4048a2:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4048a4:	460f      	mov	r7, r1
  4048a6:	9904      	ldr	r1, [sp, #16]
  4048a8:	3530      	adds	r5, #48	; 0x30
  4048aa:	2b01      	cmp	r3, #1
  4048ac:	700d      	strb	r5, [r1, #0]
  4048ae:	4606      	mov	r6, r0
  4048b0:	f101 0501 	add.w	r5, r1, #1
  4048b4:	d026      	beq.n	404904 <_dtoa_r+0xcbc>
  4048b6:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4048b8:	9a04      	ldr	r2, [sp, #16]
  4048ba:	f8df b13c 	ldr.w	fp, [pc, #316]	; 4049f8 <_dtoa_r+0xdb0>
  4048be:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  4048c2:	4413      	add	r3, r2
  4048c4:	f04f 0a00 	mov.w	sl, #0
  4048c8:	4699      	mov	r9, r3
  4048ca:	4652      	mov	r2, sl
  4048cc:	465b      	mov	r3, fp
  4048ce:	4630      	mov	r0, r6
  4048d0:	4639      	mov	r1, r7
  4048d2:	f7fd f9e3 	bl	401c9c <__aeabi_dmul>
  4048d6:	460f      	mov	r7, r1
  4048d8:	4606      	mov	r6, r0
  4048da:	f001 fcc9 	bl	406270 <__aeabi_d2iz>
  4048de:	4680      	mov	r8, r0
  4048e0:	f7fd f976 	bl	401bd0 <__aeabi_i2d>
  4048e4:	f108 0830 	add.w	r8, r8, #48	; 0x30
  4048e8:	4602      	mov	r2, r0
  4048ea:	460b      	mov	r3, r1
  4048ec:	4630      	mov	r0, r6
  4048ee:	4639      	mov	r1, r7
  4048f0:	f7fd f820 	bl	401934 <__aeabi_dsub>
  4048f4:	f805 8b01 	strb.w	r8, [r5], #1
  4048f8:	454d      	cmp	r5, r9
  4048fa:	4606      	mov	r6, r0
  4048fc:	460f      	mov	r7, r1
  4048fe:	d1e4      	bne.n	4048ca <_dtoa_r+0xc82>
  404900:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  404904:	4b3b      	ldr	r3, [pc, #236]	; (4049f4 <_dtoa_r+0xdac>)
  404906:	2200      	movs	r2, #0
  404908:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  40490c:	f7fd f814 	bl	401938 <__adddf3>
  404910:	4632      	mov	r2, r6
  404912:	463b      	mov	r3, r7
  404914:	f7fd fc34 	bl	402180 <__aeabi_dcmplt>
  404918:	2800      	cmp	r0, #0
  40491a:	d046      	beq.n	4049aa <_dtoa_r+0xd62>
  40491c:	9b15      	ldr	r3, [sp, #84]	; 0x54
  40491e:	9302      	str	r3, [sp, #8]
  404920:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  404924:	f7ff bb43 	b.w	403fae <_dtoa_r+0x366>
  404928:	f04f 0800 	mov.w	r8, #0
  40492c:	4646      	mov	r6, r8
  40492e:	e6a9      	b.n	404684 <_dtoa_r+0xa3c>
  404930:	9b08      	ldr	r3, [sp, #32]
  404932:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  404934:	1a9d      	subs	r5, r3, r2
  404936:	2300      	movs	r3, #0
  404938:	f7ff bb71 	b.w	40401e <_dtoa_r+0x3d6>
  40493c:	9b18      	ldr	r3, [sp, #96]	; 0x60
  40493e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  404940:	9d08      	ldr	r5, [sp, #32]
  404942:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  404946:	f7ff bb6a 	b.w	40401e <_dtoa_r+0x3d6>
  40494a:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  40494e:	f04f 0a02 	mov.w	sl, #2
  404952:	e56e      	b.n	404432 <_dtoa_r+0x7ea>
  404954:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404956:	2b00      	cmp	r3, #0
  404958:	f43f aeb8 	beq.w	4046cc <_dtoa_r+0xa84>
  40495c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40495e:	2b00      	cmp	r3, #0
  404960:	f77f aede 	ble.w	404720 <_dtoa_r+0xad8>
  404964:	2200      	movs	r2, #0
  404966:	4b24      	ldr	r3, [pc, #144]	; (4049f8 <_dtoa_r+0xdb0>)
  404968:	4638      	mov	r0, r7
  40496a:	4641      	mov	r1, r8
  40496c:	f7fd f996 	bl	401c9c <__aeabi_dmul>
  404970:	4607      	mov	r7, r0
  404972:	4688      	mov	r8, r1
  404974:	f10a 0001 	add.w	r0, sl, #1
  404978:	f7fd f92a 	bl	401bd0 <__aeabi_i2d>
  40497c:	463a      	mov	r2, r7
  40497e:	4643      	mov	r3, r8
  404980:	f7fd f98c 	bl	401c9c <__aeabi_dmul>
  404984:	2200      	movs	r2, #0
  404986:	4b17      	ldr	r3, [pc, #92]	; (4049e4 <_dtoa_r+0xd9c>)
  404988:	f7fc ffd6 	bl	401938 <__adddf3>
  40498c:	9a02      	ldr	r2, [sp, #8]
  40498e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404990:	9312      	str	r3, [sp, #72]	; 0x48
  404992:	3a01      	subs	r2, #1
  404994:	4605      	mov	r5, r0
  404996:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  40499a:	9215      	str	r2, [sp, #84]	; 0x54
  40499c:	e56a      	b.n	404474 <_dtoa_r+0x82c>
  40499e:	2239      	movs	r2, #57	; 0x39
  4049a0:	46b3      	mov	fp, r6
  4049a2:	703a      	strb	r2, [r7, #0]
  4049a4:	9e06      	ldr	r6, [sp, #24]
  4049a6:	1c7d      	adds	r5, r7, #1
  4049a8:	e4c0      	b.n	40432c <_dtoa_r+0x6e4>
  4049aa:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  4049ae:	2000      	movs	r0, #0
  4049b0:	4910      	ldr	r1, [pc, #64]	; (4049f4 <_dtoa_r+0xdac>)
  4049b2:	f7fc ffbf 	bl	401934 <__aeabi_dsub>
  4049b6:	4632      	mov	r2, r6
  4049b8:	463b      	mov	r3, r7
  4049ba:	f7fd fbff 	bl	4021bc <__aeabi_dcmpgt>
  4049be:	b908      	cbnz	r0, 4049c4 <_dtoa_r+0xd7c>
  4049c0:	e6ae      	b.n	404720 <_dtoa_r+0xad8>
  4049c2:	4615      	mov	r5, r2
  4049c4:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  4049c8:	2b30      	cmp	r3, #48	; 0x30
  4049ca:	f105 32ff 	add.w	r2, r5, #4294967295
  4049ce:	d0f8      	beq.n	4049c2 <_dtoa_r+0xd7a>
  4049d0:	e5d7      	b.n	404582 <_dtoa_r+0x93a>
  4049d2:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  4049d6:	9b15      	ldr	r3, [sp, #84]	; 0x54
  4049d8:	9302      	str	r3, [sp, #8]
  4049da:	f7ff bae8 	b.w	403fae <_dtoa_r+0x366>
  4049de:	970c      	str	r7, [sp, #48]	; 0x30
  4049e0:	f7ff bba5 	b.w	40412e <_dtoa_r+0x4e6>
  4049e4:	401c0000 	.word	0x401c0000
  4049e8:	40140000 	.word	0x40140000
  4049ec:	00406dc0 	.word	0x00406dc0
  4049f0:	00406d98 	.word	0x00406d98
  4049f4:	3fe00000 	.word	0x3fe00000
  4049f8:	40240000 	.word	0x40240000
  4049fc:	2b39      	cmp	r3, #57	; 0x39
  4049fe:	f8cd b018 	str.w	fp, [sp, #24]
  404a02:	46d0      	mov	r8, sl
  404a04:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  404a08:	469a      	mov	sl, r3
  404a0a:	d0c8      	beq.n	40499e <_dtoa_r+0xd56>
  404a0c:	f1bb 0f00 	cmp.w	fp, #0
  404a10:	f73f aebf 	bgt.w	404792 <_dtoa_r+0xb4a>
  404a14:	e6bf      	b.n	404796 <_dtoa_r+0xb4e>
  404a16:	f47f aebe 	bne.w	404796 <_dtoa_r+0xb4e>
  404a1a:	f01a 0f01 	tst.w	sl, #1
  404a1e:	f43f aeba 	beq.w	404796 <_dtoa_r+0xb4e>
  404a22:	e6b2      	b.n	40478a <_dtoa_r+0xb42>
  404a24:	f04f 0800 	mov.w	r8, #0
  404a28:	4646      	mov	r6, r8
  404a2a:	e5e9      	b.n	404600 <_dtoa_r+0x9b8>
  404a2c:	4631      	mov	r1, r6
  404a2e:	2300      	movs	r3, #0
  404a30:	220a      	movs	r2, #10
  404a32:	4620      	mov	r0, r4
  404a34:	f000 fc3a 	bl	4052ac <__multadd>
  404a38:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404a3a:	2b00      	cmp	r3, #0
  404a3c:	4606      	mov	r6, r0
  404a3e:	dd0a      	ble.n	404a56 <_dtoa_r+0xe0e>
  404a40:	930a      	str	r3, [sp, #40]	; 0x28
  404a42:	f7ff bbaa 	b.w	40419a <_dtoa_r+0x552>
  404a46:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404a48:	2b02      	cmp	r3, #2
  404a4a:	dc23      	bgt.n	404a94 <_dtoa_r+0xe4c>
  404a4c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404a4e:	e43b      	b.n	4042c8 <_dtoa_r+0x680>
  404a50:	f04f 0a02 	mov.w	sl, #2
  404a54:	e4ed      	b.n	404432 <_dtoa_r+0x7ea>
  404a56:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404a58:	2b02      	cmp	r3, #2
  404a5a:	dc1b      	bgt.n	404a94 <_dtoa_r+0xe4c>
  404a5c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404a5e:	e7ef      	b.n	404a40 <_dtoa_r+0xdf8>
  404a60:	2500      	movs	r5, #0
  404a62:	6465      	str	r5, [r4, #68]	; 0x44
  404a64:	4629      	mov	r1, r5
  404a66:	4620      	mov	r0, r4
  404a68:	f000 fbf0 	bl	40524c <_Balloc>
  404a6c:	f04f 33ff 	mov.w	r3, #4294967295
  404a70:	930a      	str	r3, [sp, #40]	; 0x28
  404a72:	930f      	str	r3, [sp, #60]	; 0x3c
  404a74:	2301      	movs	r3, #1
  404a76:	9004      	str	r0, [sp, #16]
  404a78:	9525      	str	r5, [sp, #148]	; 0x94
  404a7a:	6420      	str	r0, [r4, #64]	; 0x40
  404a7c:	930b      	str	r3, [sp, #44]	; 0x2c
  404a7e:	f7ff b9dd 	b.w	403e3c <_dtoa_r+0x1f4>
  404a82:	2501      	movs	r5, #1
  404a84:	f7ff b9a5 	b.w	403dd2 <_dtoa_r+0x18a>
  404a88:	f43f ab69 	beq.w	40415e <_dtoa_r+0x516>
  404a8c:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  404a90:	f7ff bbf9 	b.w	404286 <_dtoa_r+0x63e>
  404a94:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404a96:	930a      	str	r3, [sp, #40]	; 0x28
  404a98:	e5e5      	b.n	404666 <_dtoa_r+0xa1e>
  404a9a:	bf00      	nop

00404a9c <__libc_fini_array>:
  404a9c:	b538      	push	{r3, r4, r5, lr}
  404a9e:	4c0a      	ldr	r4, [pc, #40]	; (404ac8 <__libc_fini_array+0x2c>)
  404aa0:	4d0a      	ldr	r5, [pc, #40]	; (404acc <__libc_fini_array+0x30>)
  404aa2:	1b64      	subs	r4, r4, r5
  404aa4:	10a4      	asrs	r4, r4, #2
  404aa6:	d00a      	beq.n	404abe <__libc_fini_array+0x22>
  404aa8:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  404aac:	3b01      	subs	r3, #1
  404aae:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  404ab2:	3c01      	subs	r4, #1
  404ab4:	f855 3904 	ldr.w	r3, [r5], #-4
  404ab8:	4798      	blx	r3
  404aba:	2c00      	cmp	r4, #0
  404abc:	d1f9      	bne.n	404ab2 <__libc_fini_array+0x16>
  404abe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  404ac2:	f002 ba7b 	b.w	406fbc <_fini>
  404ac6:	bf00      	nop
  404ac8:	00406fcc 	.word	0x00406fcc
  404acc:	00406fc8 	.word	0x00406fc8

00404ad0 <_localeconv_r>:
  404ad0:	4a04      	ldr	r2, [pc, #16]	; (404ae4 <_localeconv_r+0x14>)
  404ad2:	4b05      	ldr	r3, [pc, #20]	; (404ae8 <_localeconv_r+0x18>)
  404ad4:	6812      	ldr	r2, [r2, #0]
  404ad6:	6b50      	ldr	r0, [r2, #52]	; 0x34
  404ad8:	2800      	cmp	r0, #0
  404ada:	bf08      	it	eq
  404adc:	4618      	moveq	r0, r3
  404ade:	30f0      	adds	r0, #240	; 0xf0
  404ae0:	4770      	bx	lr
  404ae2:	bf00      	nop
  404ae4:	20400020 	.word	0x20400020
  404ae8:	20400864 	.word	0x20400864

00404aec <__retarget_lock_acquire_recursive>:
  404aec:	4770      	bx	lr
  404aee:	bf00      	nop

00404af0 <__retarget_lock_release_recursive>:
  404af0:	4770      	bx	lr
  404af2:	bf00      	nop

00404af4 <_malloc_r>:
  404af4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404af8:	f101 060b 	add.w	r6, r1, #11
  404afc:	2e16      	cmp	r6, #22
  404afe:	b083      	sub	sp, #12
  404b00:	4605      	mov	r5, r0
  404b02:	f240 809e 	bls.w	404c42 <_malloc_r+0x14e>
  404b06:	f036 0607 	bics.w	r6, r6, #7
  404b0a:	f100 80bd 	bmi.w	404c88 <_malloc_r+0x194>
  404b0e:	42b1      	cmp	r1, r6
  404b10:	f200 80ba 	bhi.w	404c88 <_malloc_r+0x194>
  404b14:	f000 fb8e 	bl	405234 <__malloc_lock>
  404b18:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  404b1c:	f0c0 8293 	bcc.w	405046 <_malloc_r+0x552>
  404b20:	0a73      	lsrs	r3, r6, #9
  404b22:	f000 80b8 	beq.w	404c96 <_malloc_r+0x1a2>
  404b26:	2b04      	cmp	r3, #4
  404b28:	f200 8179 	bhi.w	404e1e <_malloc_r+0x32a>
  404b2c:	09b3      	lsrs	r3, r6, #6
  404b2e:	f103 0039 	add.w	r0, r3, #57	; 0x39
  404b32:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  404b36:	00c3      	lsls	r3, r0, #3
  404b38:	4fbf      	ldr	r7, [pc, #764]	; (404e38 <_malloc_r+0x344>)
  404b3a:	443b      	add	r3, r7
  404b3c:	f1a3 0108 	sub.w	r1, r3, #8
  404b40:	685c      	ldr	r4, [r3, #4]
  404b42:	42a1      	cmp	r1, r4
  404b44:	d106      	bne.n	404b54 <_malloc_r+0x60>
  404b46:	e00c      	b.n	404b62 <_malloc_r+0x6e>
  404b48:	2a00      	cmp	r2, #0
  404b4a:	f280 80aa 	bge.w	404ca2 <_malloc_r+0x1ae>
  404b4e:	68e4      	ldr	r4, [r4, #12]
  404b50:	42a1      	cmp	r1, r4
  404b52:	d006      	beq.n	404b62 <_malloc_r+0x6e>
  404b54:	6863      	ldr	r3, [r4, #4]
  404b56:	f023 0303 	bic.w	r3, r3, #3
  404b5a:	1b9a      	subs	r2, r3, r6
  404b5c:	2a0f      	cmp	r2, #15
  404b5e:	ddf3      	ble.n	404b48 <_malloc_r+0x54>
  404b60:	4670      	mov	r0, lr
  404b62:	693c      	ldr	r4, [r7, #16]
  404b64:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 404e4c <_malloc_r+0x358>
  404b68:	4574      	cmp	r4, lr
  404b6a:	f000 81ab 	beq.w	404ec4 <_malloc_r+0x3d0>
  404b6e:	6863      	ldr	r3, [r4, #4]
  404b70:	f023 0303 	bic.w	r3, r3, #3
  404b74:	1b9a      	subs	r2, r3, r6
  404b76:	2a0f      	cmp	r2, #15
  404b78:	f300 8190 	bgt.w	404e9c <_malloc_r+0x3a8>
  404b7c:	2a00      	cmp	r2, #0
  404b7e:	f8c7 e014 	str.w	lr, [r7, #20]
  404b82:	f8c7 e010 	str.w	lr, [r7, #16]
  404b86:	f280 809d 	bge.w	404cc4 <_malloc_r+0x1d0>
  404b8a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  404b8e:	f080 8161 	bcs.w	404e54 <_malloc_r+0x360>
  404b92:	08db      	lsrs	r3, r3, #3
  404b94:	f103 0c01 	add.w	ip, r3, #1
  404b98:	1099      	asrs	r1, r3, #2
  404b9a:	687a      	ldr	r2, [r7, #4]
  404b9c:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  404ba0:	f8c4 8008 	str.w	r8, [r4, #8]
  404ba4:	2301      	movs	r3, #1
  404ba6:	408b      	lsls	r3, r1
  404ba8:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  404bac:	4313      	orrs	r3, r2
  404bae:	3908      	subs	r1, #8
  404bb0:	60e1      	str	r1, [r4, #12]
  404bb2:	607b      	str	r3, [r7, #4]
  404bb4:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  404bb8:	f8c8 400c 	str.w	r4, [r8, #12]
  404bbc:	1082      	asrs	r2, r0, #2
  404bbe:	2401      	movs	r4, #1
  404bc0:	4094      	lsls	r4, r2
  404bc2:	429c      	cmp	r4, r3
  404bc4:	f200 808b 	bhi.w	404cde <_malloc_r+0x1ea>
  404bc8:	421c      	tst	r4, r3
  404bca:	d106      	bne.n	404bda <_malloc_r+0xe6>
  404bcc:	f020 0003 	bic.w	r0, r0, #3
  404bd0:	0064      	lsls	r4, r4, #1
  404bd2:	421c      	tst	r4, r3
  404bd4:	f100 0004 	add.w	r0, r0, #4
  404bd8:	d0fa      	beq.n	404bd0 <_malloc_r+0xdc>
  404bda:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  404bde:	46cc      	mov	ip, r9
  404be0:	4680      	mov	r8, r0
  404be2:	f8dc 300c 	ldr.w	r3, [ip, #12]
  404be6:	459c      	cmp	ip, r3
  404be8:	d107      	bne.n	404bfa <_malloc_r+0x106>
  404bea:	e16d      	b.n	404ec8 <_malloc_r+0x3d4>
  404bec:	2a00      	cmp	r2, #0
  404bee:	f280 817b 	bge.w	404ee8 <_malloc_r+0x3f4>
  404bf2:	68db      	ldr	r3, [r3, #12]
  404bf4:	459c      	cmp	ip, r3
  404bf6:	f000 8167 	beq.w	404ec8 <_malloc_r+0x3d4>
  404bfa:	6859      	ldr	r1, [r3, #4]
  404bfc:	f021 0103 	bic.w	r1, r1, #3
  404c00:	1b8a      	subs	r2, r1, r6
  404c02:	2a0f      	cmp	r2, #15
  404c04:	ddf2      	ble.n	404bec <_malloc_r+0xf8>
  404c06:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  404c0a:	f8d3 8008 	ldr.w	r8, [r3, #8]
  404c0e:	9300      	str	r3, [sp, #0]
  404c10:	199c      	adds	r4, r3, r6
  404c12:	4628      	mov	r0, r5
  404c14:	f046 0601 	orr.w	r6, r6, #1
  404c18:	f042 0501 	orr.w	r5, r2, #1
  404c1c:	605e      	str	r6, [r3, #4]
  404c1e:	f8c8 c00c 	str.w	ip, [r8, #12]
  404c22:	f8cc 8008 	str.w	r8, [ip, #8]
  404c26:	617c      	str	r4, [r7, #20]
  404c28:	613c      	str	r4, [r7, #16]
  404c2a:	f8c4 e00c 	str.w	lr, [r4, #12]
  404c2e:	f8c4 e008 	str.w	lr, [r4, #8]
  404c32:	6065      	str	r5, [r4, #4]
  404c34:	505a      	str	r2, [r3, r1]
  404c36:	f000 fb03 	bl	405240 <__malloc_unlock>
  404c3a:	9b00      	ldr	r3, [sp, #0]
  404c3c:	f103 0408 	add.w	r4, r3, #8
  404c40:	e01e      	b.n	404c80 <_malloc_r+0x18c>
  404c42:	2910      	cmp	r1, #16
  404c44:	d820      	bhi.n	404c88 <_malloc_r+0x194>
  404c46:	f000 faf5 	bl	405234 <__malloc_lock>
  404c4a:	2610      	movs	r6, #16
  404c4c:	2318      	movs	r3, #24
  404c4e:	2002      	movs	r0, #2
  404c50:	4f79      	ldr	r7, [pc, #484]	; (404e38 <_malloc_r+0x344>)
  404c52:	443b      	add	r3, r7
  404c54:	f1a3 0208 	sub.w	r2, r3, #8
  404c58:	685c      	ldr	r4, [r3, #4]
  404c5a:	4294      	cmp	r4, r2
  404c5c:	f000 813d 	beq.w	404eda <_malloc_r+0x3e6>
  404c60:	6863      	ldr	r3, [r4, #4]
  404c62:	68e1      	ldr	r1, [r4, #12]
  404c64:	68a6      	ldr	r6, [r4, #8]
  404c66:	f023 0303 	bic.w	r3, r3, #3
  404c6a:	4423      	add	r3, r4
  404c6c:	4628      	mov	r0, r5
  404c6e:	685a      	ldr	r2, [r3, #4]
  404c70:	60f1      	str	r1, [r6, #12]
  404c72:	f042 0201 	orr.w	r2, r2, #1
  404c76:	608e      	str	r6, [r1, #8]
  404c78:	605a      	str	r2, [r3, #4]
  404c7a:	f000 fae1 	bl	405240 <__malloc_unlock>
  404c7e:	3408      	adds	r4, #8
  404c80:	4620      	mov	r0, r4
  404c82:	b003      	add	sp, #12
  404c84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404c88:	2400      	movs	r4, #0
  404c8a:	230c      	movs	r3, #12
  404c8c:	4620      	mov	r0, r4
  404c8e:	602b      	str	r3, [r5, #0]
  404c90:	b003      	add	sp, #12
  404c92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404c96:	2040      	movs	r0, #64	; 0x40
  404c98:	f44f 7300 	mov.w	r3, #512	; 0x200
  404c9c:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  404ca0:	e74a      	b.n	404b38 <_malloc_r+0x44>
  404ca2:	4423      	add	r3, r4
  404ca4:	68e1      	ldr	r1, [r4, #12]
  404ca6:	685a      	ldr	r2, [r3, #4]
  404ca8:	68a6      	ldr	r6, [r4, #8]
  404caa:	f042 0201 	orr.w	r2, r2, #1
  404cae:	60f1      	str	r1, [r6, #12]
  404cb0:	4628      	mov	r0, r5
  404cb2:	608e      	str	r6, [r1, #8]
  404cb4:	605a      	str	r2, [r3, #4]
  404cb6:	f000 fac3 	bl	405240 <__malloc_unlock>
  404cba:	3408      	adds	r4, #8
  404cbc:	4620      	mov	r0, r4
  404cbe:	b003      	add	sp, #12
  404cc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404cc4:	4423      	add	r3, r4
  404cc6:	4628      	mov	r0, r5
  404cc8:	685a      	ldr	r2, [r3, #4]
  404cca:	f042 0201 	orr.w	r2, r2, #1
  404cce:	605a      	str	r2, [r3, #4]
  404cd0:	f000 fab6 	bl	405240 <__malloc_unlock>
  404cd4:	3408      	adds	r4, #8
  404cd6:	4620      	mov	r0, r4
  404cd8:	b003      	add	sp, #12
  404cda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404cde:	68bc      	ldr	r4, [r7, #8]
  404ce0:	6863      	ldr	r3, [r4, #4]
  404ce2:	f023 0803 	bic.w	r8, r3, #3
  404ce6:	45b0      	cmp	r8, r6
  404ce8:	d304      	bcc.n	404cf4 <_malloc_r+0x200>
  404cea:	eba8 0306 	sub.w	r3, r8, r6
  404cee:	2b0f      	cmp	r3, #15
  404cf0:	f300 8085 	bgt.w	404dfe <_malloc_r+0x30a>
  404cf4:	f8df 9158 	ldr.w	r9, [pc, #344]	; 404e50 <_malloc_r+0x35c>
  404cf8:	4b50      	ldr	r3, [pc, #320]	; (404e3c <_malloc_r+0x348>)
  404cfa:	f8d9 2000 	ldr.w	r2, [r9]
  404cfe:	681b      	ldr	r3, [r3, #0]
  404d00:	3201      	adds	r2, #1
  404d02:	4433      	add	r3, r6
  404d04:	eb04 0a08 	add.w	sl, r4, r8
  404d08:	f000 8155 	beq.w	404fb6 <_malloc_r+0x4c2>
  404d0c:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  404d10:	330f      	adds	r3, #15
  404d12:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  404d16:	f02b 0b0f 	bic.w	fp, fp, #15
  404d1a:	4659      	mov	r1, fp
  404d1c:	4628      	mov	r0, r5
  404d1e:	f000 fd8f 	bl	405840 <_sbrk_r>
  404d22:	1c41      	adds	r1, r0, #1
  404d24:	4602      	mov	r2, r0
  404d26:	f000 80fc 	beq.w	404f22 <_malloc_r+0x42e>
  404d2a:	4582      	cmp	sl, r0
  404d2c:	f200 80f7 	bhi.w	404f1e <_malloc_r+0x42a>
  404d30:	4b43      	ldr	r3, [pc, #268]	; (404e40 <_malloc_r+0x34c>)
  404d32:	6819      	ldr	r1, [r3, #0]
  404d34:	4459      	add	r1, fp
  404d36:	6019      	str	r1, [r3, #0]
  404d38:	f000 814d 	beq.w	404fd6 <_malloc_r+0x4e2>
  404d3c:	f8d9 0000 	ldr.w	r0, [r9]
  404d40:	3001      	adds	r0, #1
  404d42:	bf1b      	ittet	ne
  404d44:	eba2 0a0a 	subne.w	sl, r2, sl
  404d48:	4451      	addne	r1, sl
  404d4a:	f8c9 2000 	streq.w	r2, [r9]
  404d4e:	6019      	strne	r1, [r3, #0]
  404d50:	f012 0107 	ands.w	r1, r2, #7
  404d54:	f000 8115 	beq.w	404f82 <_malloc_r+0x48e>
  404d58:	f1c1 0008 	rsb	r0, r1, #8
  404d5c:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  404d60:	4402      	add	r2, r0
  404d62:	3108      	adds	r1, #8
  404d64:	eb02 090b 	add.w	r9, r2, fp
  404d68:	f3c9 090b 	ubfx	r9, r9, #0, #12
  404d6c:	eba1 0909 	sub.w	r9, r1, r9
  404d70:	4649      	mov	r1, r9
  404d72:	4628      	mov	r0, r5
  404d74:	9301      	str	r3, [sp, #4]
  404d76:	9200      	str	r2, [sp, #0]
  404d78:	f000 fd62 	bl	405840 <_sbrk_r>
  404d7c:	1c43      	adds	r3, r0, #1
  404d7e:	e89d 000c 	ldmia.w	sp, {r2, r3}
  404d82:	f000 8143 	beq.w	40500c <_malloc_r+0x518>
  404d86:	1a80      	subs	r0, r0, r2
  404d88:	4448      	add	r0, r9
  404d8a:	f040 0001 	orr.w	r0, r0, #1
  404d8e:	6819      	ldr	r1, [r3, #0]
  404d90:	60ba      	str	r2, [r7, #8]
  404d92:	4449      	add	r1, r9
  404d94:	42bc      	cmp	r4, r7
  404d96:	6050      	str	r0, [r2, #4]
  404d98:	6019      	str	r1, [r3, #0]
  404d9a:	d017      	beq.n	404dcc <_malloc_r+0x2d8>
  404d9c:	f1b8 0f0f 	cmp.w	r8, #15
  404da0:	f240 80fb 	bls.w	404f9a <_malloc_r+0x4a6>
  404da4:	6860      	ldr	r0, [r4, #4]
  404da6:	f1a8 020c 	sub.w	r2, r8, #12
  404daa:	f022 0207 	bic.w	r2, r2, #7
  404dae:	eb04 0e02 	add.w	lr, r4, r2
  404db2:	f000 0001 	and.w	r0, r0, #1
  404db6:	f04f 0c05 	mov.w	ip, #5
  404dba:	4310      	orrs	r0, r2
  404dbc:	2a0f      	cmp	r2, #15
  404dbe:	6060      	str	r0, [r4, #4]
  404dc0:	f8ce c004 	str.w	ip, [lr, #4]
  404dc4:	f8ce c008 	str.w	ip, [lr, #8]
  404dc8:	f200 8117 	bhi.w	404ffa <_malloc_r+0x506>
  404dcc:	4b1d      	ldr	r3, [pc, #116]	; (404e44 <_malloc_r+0x350>)
  404dce:	68bc      	ldr	r4, [r7, #8]
  404dd0:	681a      	ldr	r2, [r3, #0]
  404dd2:	4291      	cmp	r1, r2
  404dd4:	bf88      	it	hi
  404dd6:	6019      	strhi	r1, [r3, #0]
  404dd8:	4b1b      	ldr	r3, [pc, #108]	; (404e48 <_malloc_r+0x354>)
  404dda:	681a      	ldr	r2, [r3, #0]
  404ddc:	4291      	cmp	r1, r2
  404dde:	6862      	ldr	r2, [r4, #4]
  404de0:	bf88      	it	hi
  404de2:	6019      	strhi	r1, [r3, #0]
  404de4:	f022 0203 	bic.w	r2, r2, #3
  404de8:	4296      	cmp	r6, r2
  404dea:	eba2 0306 	sub.w	r3, r2, r6
  404dee:	d801      	bhi.n	404df4 <_malloc_r+0x300>
  404df0:	2b0f      	cmp	r3, #15
  404df2:	dc04      	bgt.n	404dfe <_malloc_r+0x30a>
  404df4:	4628      	mov	r0, r5
  404df6:	f000 fa23 	bl	405240 <__malloc_unlock>
  404dfa:	2400      	movs	r4, #0
  404dfc:	e740      	b.n	404c80 <_malloc_r+0x18c>
  404dfe:	19a2      	adds	r2, r4, r6
  404e00:	f043 0301 	orr.w	r3, r3, #1
  404e04:	f046 0601 	orr.w	r6, r6, #1
  404e08:	6066      	str	r6, [r4, #4]
  404e0a:	4628      	mov	r0, r5
  404e0c:	60ba      	str	r2, [r7, #8]
  404e0e:	6053      	str	r3, [r2, #4]
  404e10:	f000 fa16 	bl	405240 <__malloc_unlock>
  404e14:	3408      	adds	r4, #8
  404e16:	4620      	mov	r0, r4
  404e18:	b003      	add	sp, #12
  404e1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404e1e:	2b14      	cmp	r3, #20
  404e20:	d971      	bls.n	404f06 <_malloc_r+0x412>
  404e22:	2b54      	cmp	r3, #84	; 0x54
  404e24:	f200 80a3 	bhi.w	404f6e <_malloc_r+0x47a>
  404e28:	0b33      	lsrs	r3, r6, #12
  404e2a:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  404e2e:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  404e32:	00c3      	lsls	r3, r0, #3
  404e34:	e680      	b.n	404b38 <_malloc_r+0x44>
  404e36:	bf00      	nop
  404e38:	20400454 	.word	0x20400454
  404e3c:	20400ca0 	.word	0x20400ca0
  404e40:	20400c70 	.word	0x20400c70
  404e44:	20400c98 	.word	0x20400c98
  404e48:	20400c9c 	.word	0x20400c9c
  404e4c:	2040045c 	.word	0x2040045c
  404e50:	2040085c 	.word	0x2040085c
  404e54:	0a5a      	lsrs	r2, r3, #9
  404e56:	2a04      	cmp	r2, #4
  404e58:	d95b      	bls.n	404f12 <_malloc_r+0x41e>
  404e5a:	2a14      	cmp	r2, #20
  404e5c:	f200 80ae 	bhi.w	404fbc <_malloc_r+0x4c8>
  404e60:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  404e64:	00c9      	lsls	r1, r1, #3
  404e66:	325b      	adds	r2, #91	; 0x5b
  404e68:	eb07 0c01 	add.w	ip, r7, r1
  404e6c:	5879      	ldr	r1, [r7, r1]
  404e6e:	f1ac 0c08 	sub.w	ip, ip, #8
  404e72:	458c      	cmp	ip, r1
  404e74:	f000 8088 	beq.w	404f88 <_malloc_r+0x494>
  404e78:	684a      	ldr	r2, [r1, #4]
  404e7a:	f022 0203 	bic.w	r2, r2, #3
  404e7e:	4293      	cmp	r3, r2
  404e80:	d273      	bcs.n	404f6a <_malloc_r+0x476>
  404e82:	6889      	ldr	r1, [r1, #8]
  404e84:	458c      	cmp	ip, r1
  404e86:	d1f7      	bne.n	404e78 <_malloc_r+0x384>
  404e88:	f8dc 200c 	ldr.w	r2, [ip, #12]
  404e8c:	687b      	ldr	r3, [r7, #4]
  404e8e:	60e2      	str	r2, [r4, #12]
  404e90:	f8c4 c008 	str.w	ip, [r4, #8]
  404e94:	6094      	str	r4, [r2, #8]
  404e96:	f8cc 400c 	str.w	r4, [ip, #12]
  404e9a:	e68f      	b.n	404bbc <_malloc_r+0xc8>
  404e9c:	19a1      	adds	r1, r4, r6
  404e9e:	f046 0c01 	orr.w	ip, r6, #1
  404ea2:	f042 0601 	orr.w	r6, r2, #1
  404ea6:	f8c4 c004 	str.w	ip, [r4, #4]
  404eaa:	4628      	mov	r0, r5
  404eac:	6179      	str	r1, [r7, #20]
  404eae:	6139      	str	r1, [r7, #16]
  404eb0:	f8c1 e00c 	str.w	lr, [r1, #12]
  404eb4:	f8c1 e008 	str.w	lr, [r1, #8]
  404eb8:	604e      	str	r6, [r1, #4]
  404eba:	50e2      	str	r2, [r4, r3]
  404ebc:	f000 f9c0 	bl	405240 <__malloc_unlock>
  404ec0:	3408      	adds	r4, #8
  404ec2:	e6dd      	b.n	404c80 <_malloc_r+0x18c>
  404ec4:	687b      	ldr	r3, [r7, #4]
  404ec6:	e679      	b.n	404bbc <_malloc_r+0xc8>
  404ec8:	f108 0801 	add.w	r8, r8, #1
  404ecc:	f018 0f03 	tst.w	r8, #3
  404ed0:	f10c 0c08 	add.w	ip, ip, #8
  404ed4:	f47f ae85 	bne.w	404be2 <_malloc_r+0xee>
  404ed8:	e02d      	b.n	404f36 <_malloc_r+0x442>
  404eda:	68dc      	ldr	r4, [r3, #12]
  404edc:	42a3      	cmp	r3, r4
  404ede:	bf08      	it	eq
  404ee0:	3002      	addeq	r0, #2
  404ee2:	f43f ae3e 	beq.w	404b62 <_malloc_r+0x6e>
  404ee6:	e6bb      	b.n	404c60 <_malloc_r+0x16c>
  404ee8:	4419      	add	r1, r3
  404eea:	461c      	mov	r4, r3
  404eec:	684a      	ldr	r2, [r1, #4]
  404eee:	68db      	ldr	r3, [r3, #12]
  404ef0:	f854 6f08 	ldr.w	r6, [r4, #8]!
  404ef4:	f042 0201 	orr.w	r2, r2, #1
  404ef8:	604a      	str	r2, [r1, #4]
  404efa:	4628      	mov	r0, r5
  404efc:	60f3      	str	r3, [r6, #12]
  404efe:	609e      	str	r6, [r3, #8]
  404f00:	f000 f99e 	bl	405240 <__malloc_unlock>
  404f04:	e6bc      	b.n	404c80 <_malloc_r+0x18c>
  404f06:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  404f0a:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  404f0e:	00c3      	lsls	r3, r0, #3
  404f10:	e612      	b.n	404b38 <_malloc_r+0x44>
  404f12:	099a      	lsrs	r2, r3, #6
  404f14:	f102 0139 	add.w	r1, r2, #57	; 0x39
  404f18:	00c9      	lsls	r1, r1, #3
  404f1a:	3238      	adds	r2, #56	; 0x38
  404f1c:	e7a4      	b.n	404e68 <_malloc_r+0x374>
  404f1e:	42bc      	cmp	r4, r7
  404f20:	d054      	beq.n	404fcc <_malloc_r+0x4d8>
  404f22:	68bc      	ldr	r4, [r7, #8]
  404f24:	6862      	ldr	r2, [r4, #4]
  404f26:	f022 0203 	bic.w	r2, r2, #3
  404f2a:	e75d      	b.n	404de8 <_malloc_r+0x2f4>
  404f2c:	f859 3908 	ldr.w	r3, [r9], #-8
  404f30:	4599      	cmp	r9, r3
  404f32:	f040 8086 	bne.w	405042 <_malloc_r+0x54e>
  404f36:	f010 0f03 	tst.w	r0, #3
  404f3a:	f100 30ff 	add.w	r0, r0, #4294967295
  404f3e:	d1f5      	bne.n	404f2c <_malloc_r+0x438>
  404f40:	687b      	ldr	r3, [r7, #4]
  404f42:	ea23 0304 	bic.w	r3, r3, r4
  404f46:	607b      	str	r3, [r7, #4]
  404f48:	0064      	lsls	r4, r4, #1
  404f4a:	429c      	cmp	r4, r3
  404f4c:	f63f aec7 	bhi.w	404cde <_malloc_r+0x1ea>
  404f50:	2c00      	cmp	r4, #0
  404f52:	f43f aec4 	beq.w	404cde <_malloc_r+0x1ea>
  404f56:	421c      	tst	r4, r3
  404f58:	4640      	mov	r0, r8
  404f5a:	f47f ae3e 	bne.w	404bda <_malloc_r+0xe6>
  404f5e:	0064      	lsls	r4, r4, #1
  404f60:	421c      	tst	r4, r3
  404f62:	f100 0004 	add.w	r0, r0, #4
  404f66:	d0fa      	beq.n	404f5e <_malloc_r+0x46a>
  404f68:	e637      	b.n	404bda <_malloc_r+0xe6>
  404f6a:	468c      	mov	ip, r1
  404f6c:	e78c      	b.n	404e88 <_malloc_r+0x394>
  404f6e:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  404f72:	d815      	bhi.n	404fa0 <_malloc_r+0x4ac>
  404f74:	0bf3      	lsrs	r3, r6, #15
  404f76:	f103 0078 	add.w	r0, r3, #120	; 0x78
  404f7a:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  404f7e:	00c3      	lsls	r3, r0, #3
  404f80:	e5da      	b.n	404b38 <_malloc_r+0x44>
  404f82:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  404f86:	e6ed      	b.n	404d64 <_malloc_r+0x270>
  404f88:	687b      	ldr	r3, [r7, #4]
  404f8a:	1092      	asrs	r2, r2, #2
  404f8c:	2101      	movs	r1, #1
  404f8e:	fa01 f202 	lsl.w	r2, r1, r2
  404f92:	4313      	orrs	r3, r2
  404f94:	607b      	str	r3, [r7, #4]
  404f96:	4662      	mov	r2, ip
  404f98:	e779      	b.n	404e8e <_malloc_r+0x39a>
  404f9a:	2301      	movs	r3, #1
  404f9c:	6053      	str	r3, [r2, #4]
  404f9e:	e729      	b.n	404df4 <_malloc_r+0x300>
  404fa0:	f240 5254 	movw	r2, #1364	; 0x554
  404fa4:	4293      	cmp	r3, r2
  404fa6:	d822      	bhi.n	404fee <_malloc_r+0x4fa>
  404fa8:	0cb3      	lsrs	r3, r6, #18
  404faa:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  404fae:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  404fb2:	00c3      	lsls	r3, r0, #3
  404fb4:	e5c0      	b.n	404b38 <_malloc_r+0x44>
  404fb6:	f103 0b10 	add.w	fp, r3, #16
  404fba:	e6ae      	b.n	404d1a <_malloc_r+0x226>
  404fbc:	2a54      	cmp	r2, #84	; 0x54
  404fbe:	d829      	bhi.n	405014 <_malloc_r+0x520>
  404fc0:	0b1a      	lsrs	r2, r3, #12
  404fc2:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  404fc6:	00c9      	lsls	r1, r1, #3
  404fc8:	326e      	adds	r2, #110	; 0x6e
  404fca:	e74d      	b.n	404e68 <_malloc_r+0x374>
  404fcc:	4b20      	ldr	r3, [pc, #128]	; (405050 <_malloc_r+0x55c>)
  404fce:	6819      	ldr	r1, [r3, #0]
  404fd0:	4459      	add	r1, fp
  404fd2:	6019      	str	r1, [r3, #0]
  404fd4:	e6b2      	b.n	404d3c <_malloc_r+0x248>
  404fd6:	f3ca 000b 	ubfx	r0, sl, #0, #12
  404fda:	2800      	cmp	r0, #0
  404fdc:	f47f aeae 	bne.w	404d3c <_malloc_r+0x248>
  404fe0:	eb08 030b 	add.w	r3, r8, fp
  404fe4:	68ba      	ldr	r2, [r7, #8]
  404fe6:	f043 0301 	orr.w	r3, r3, #1
  404fea:	6053      	str	r3, [r2, #4]
  404fec:	e6ee      	b.n	404dcc <_malloc_r+0x2d8>
  404fee:	207f      	movs	r0, #127	; 0x7f
  404ff0:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  404ff4:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  404ff8:	e59e      	b.n	404b38 <_malloc_r+0x44>
  404ffa:	f104 0108 	add.w	r1, r4, #8
  404ffe:	4628      	mov	r0, r5
  405000:	9300      	str	r3, [sp, #0]
  405002:	f000 fe0b 	bl	405c1c <_free_r>
  405006:	9b00      	ldr	r3, [sp, #0]
  405008:	6819      	ldr	r1, [r3, #0]
  40500a:	e6df      	b.n	404dcc <_malloc_r+0x2d8>
  40500c:	2001      	movs	r0, #1
  40500e:	f04f 0900 	mov.w	r9, #0
  405012:	e6bc      	b.n	404d8e <_malloc_r+0x29a>
  405014:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  405018:	d805      	bhi.n	405026 <_malloc_r+0x532>
  40501a:	0bda      	lsrs	r2, r3, #15
  40501c:	f102 0178 	add.w	r1, r2, #120	; 0x78
  405020:	00c9      	lsls	r1, r1, #3
  405022:	3277      	adds	r2, #119	; 0x77
  405024:	e720      	b.n	404e68 <_malloc_r+0x374>
  405026:	f240 5154 	movw	r1, #1364	; 0x554
  40502a:	428a      	cmp	r2, r1
  40502c:	d805      	bhi.n	40503a <_malloc_r+0x546>
  40502e:	0c9a      	lsrs	r2, r3, #18
  405030:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  405034:	00c9      	lsls	r1, r1, #3
  405036:	327c      	adds	r2, #124	; 0x7c
  405038:	e716      	b.n	404e68 <_malloc_r+0x374>
  40503a:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  40503e:	227e      	movs	r2, #126	; 0x7e
  405040:	e712      	b.n	404e68 <_malloc_r+0x374>
  405042:	687b      	ldr	r3, [r7, #4]
  405044:	e780      	b.n	404f48 <_malloc_r+0x454>
  405046:	08f0      	lsrs	r0, r6, #3
  405048:	f106 0308 	add.w	r3, r6, #8
  40504c:	e600      	b.n	404c50 <_malloc_r+0x15c>
  40504e:	bf00      	nop
  405050:	20400c70 	.word	0x20400c70
	...

00405060 <memchr>:
  405060:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  405064:	2a10      	cmp	r2, #16
  405066:	db2b      	blt.n	4050c0 <memchr+0x60>
  405068:	f010 0f07 	tst.w	r0, #7
  40506c:	d008      	beq.n	405080 <memchr+0x20>
  40506e:	f810 3b01 	ldrb.w	r3, [r0], #1
  405072:	3a01      	subs	r2, #1
  405074:	428b      	cmp	r3, r1
  405076:	d02d      	beq.n	4050d4 <memchr+0x74>
  405078:	f010 0f07 	tst.w	r0, #7
  40507c:	b342      	cbz	r2, 4050d0 <memchr+0x70>
  40507e:	d1f6      	bne.n	40506e <memchr+0xe>
  405080:	b4f0      	push	{r4, r5, r6, r7}
  405082:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  405086:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  40508a:	f022 0407 	bic.w	r4, r2, #7
  40508e:	f07f 0700 	mvns.w	r7, #0
  405092:	2300      	movs	r3, #0
  405094:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  405098:	3c08      	subs	r4, #8
  40509a:	ea85 0501 	eor.w	r5, r5, r1
  40509e:	ea86 0601 	eor.w	r6, r6, r1
  4050a2:	fa85 f547 	uadd8	r5, r5, r7
  4050a6:	faa3 f587 	sel	r5, r3, r7
  4050aa:	fa86 f647 	uadd8	r6, r6, r7
  4050ae:	faa5 f687 	sel	r6, r5, r7
  4050b2:	b98e      	cbnz	r6, 4050d8 <memchr+0x78>
  4050b4:	d1ee      	bne.n	405094 <memchr+0x34>
  4050b6:	bcf0      	pop	{r4, r5, r6, r7}
  4050b8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  4050bc:	f002 0207 	and.w	r2, r2, #7
  4050c0:	b132      	cbz	r2, 4050d0 <memchr+0x70>
  4050c2:	f810 3b01 	ldrb.w	r3, [r0], #1
  4050c6:	3a01      	subs	r2, #1
  4050c8:	ea83 0301 	eor.w	r3, r3, r1
  4050cc:	b113      	cbz	r3, 4050d4 <memchr+0x74>
  4050ce:	d1f8      	bne.n	4050c2 <memchr+0x62>
  4050d0:	2000      	movs	r0, #0
  4050d2:	4770      	bx	lr
  4050d4:	3801      	subs	r0, #1
  4050d6:	4770      	bx	lr
  4050d8:	2d00      	cmp	r5, #0
  4050da:	bf06      	itte	eq
  4050dc:	4635      	moveq	r5, r6
  4050de:	3803      	subeq	r0, #3
  4050e0:	3807      	subne	r0, #7
  4050e2:	f015 0f01 	tst.w	r5, #1
  4050e6:	d107      	bne.n	4050f8 <memchr+0x98>
  4050e8:	3001      	adds	r0, #1
  4050ea:	f415 7f80 	tst.w	r5, #256	; 0x100
  4050ee:	bf02      	ittt	eq
  4050f0:	3001      	addeq	r0, #1
  4050f2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  4050f6:	3001      	addeq	r0, #1
  4050f8:	bcf0      	pop	{r4, r5, r6, r7}
  4050fa:	3801      	subs	r0, #1
  4050fc:	4770      	bx	lr
  4050fe:	bf00      	nop

00405100 <memcpy>:
  405100:	4684      	mov	ip, r0
  405102:	ea41 0300 	orr.w	r3, r1, r0
  405106:	f013 0303 	ands.w	r3, r3, #3
  40510a:	d16d      	bne.n	4051e8 <memcpy+0xe8>
  40510c:	3a40      	subs	r2, #64	; 0x40
  40510e:	d341      	bcc.n	405194 <memcpy+0x94>
  405110:	f851 3b04 	ldr.w	r3, [r1], #4
  405114:	f840 3b04 	str.w	r3, [r0], #4
  405118:	f851 3b04 	ldr.w	r3, [r1], #4
  40511c:	f840 3b04 	str.w	r3, [r0], #4
  405120:	f851 3b04 	ldr.w	r3, [r1], #4
  405124:	f840 3b04 	str.w	r3, [r0], #4
  405128:	f851 3b04 	ldr.w	r3, [r1], #4
  40512c:	f840 3b04 	str.w	r3, [r0], #4
  405130:	f851 3b04 	ldr.w	r3, [r1], #4
  405134:	f840 3b04 	str.w	r3, [r0], #4
  405138:	f851 3b04 	ldr.w	r3, [r1], #4
  40513c:	f840 3b04 	str.w	r3, [r0], #4
  405140:	f851 3b04 	ldr.w	r3, [r1], #4
  405144:	f840 3b04 	str.w	r3, [r0], #4
  405148:	f851 3b04 	ldr.w	r3, [r1], #4
  40514c:	f840 3b04 	str.w	r3, [r0], #4
  405150:	f851 3b04 	ldr.w	r3, [r1], #4
  405154:	f840 3b04 	str.w	r3, [r0], #4
  405158:	f851 3b04 	ldr.w	r3, [r1], #4
  40515c:	f840 3b04 	str.w	r3, [r0], #4
  405160:	f851 3b04 	ldr.w	r3, [r1], #4
  405164:	f840 3b04 	str.w	r3, [r0], #4
  405168:	f851 3b04 	ldr.w	r3, [r1], #4
  40516c:	f840 3b04 	str.w	r3, [r0], #4
  405170:	f851 3b04 	ldr.w	r3, [r1], #4
  405174:	f840 3b04 	str.w	r3, [r0], #4
  405178:	f851 3b04 	ldr.w	r3, [r1], #4
  40517c:	f840 3b04 	str.w	r3, [r0], #4
  405180:	f851 3b04 	ldr.w	r3, [r1], #4
  405184:	f840 3b04 	str.w	r3, [r0], #4
  405188:	f851 3b04 	ldr.w	r3, [r1], #4
  40518c:	f840 3b04 	str.w	r3, [r0], #4
  405190:	3a40      	subs	r2, #64	; 0x40
  405192:	d2bd      	bcs.n	405110 <memcpy+0x10>
  405194:	3230      	adds	r2, #48	; 0x30
  405196:	d311      	bcc.n	4051bc <memcpy+0xbc>
  405198:	f851 3b04 	ldr.w	r3, [r1], #4
  40519c:	f840 3b04 	str.w	r3, [r0], #4
  4051a0:	f851 3b04 	ldr.w	r3, [r1], #4
  4051a4:	f840 3b04 	str.w	r3, [r0], #4
  4051a8:	f851 3b04 	ldr.w	r3, [r1], #4
  4051ac:	f840 3b04 	str.w	r3, [r0], #4
  4051b0:	f851 3b04 	ldr.w	r3, [r1], #4
  4051b4:	f840 3b04 	str.w	r3, [r0], #4
  4051b8:	3a10      	subs	r2, #16
  4051ba:	d2ed      	bcs.n	405198 <memcpy+0x98>
  4051bc:	320c      	adds	r2, #12
  4051be:	d305      	bcc.n	4051cc <memcpy+0xcc>
  4051c0:	f851 3b04 	ldr.w	r3, [r1], #4
  4051c4:	f840 3b04 	str.w	r3, [r0], #4
  4051c8:	3a04      	subs	r2, #4
  4051ca:	d2f9      	bcs.n	4051c0 <memcpy+0xc0>
  4051cc:	3204      	adds	r2, #4
  4051ce:	d008      	beq.n	4051e2 <memcpy+0xe2>
  4051d0:	07d2      	lsls	r2, r2, #31
  4051d2:	bf1c      	itt	ne
  4051d4:	f811 3b01 	ldrbne.w	r3, [r1], #1
  4051d8:	f800 3b01 	strbne.w	r3, [r0], #1
  4051dc:	d301      	bcc.n	4051e2 <memcpy+0xe2>
  4051de:	880b      	ldrh	r3, [r1, #0]
  4051e0:	8003      	strh	r3, [r0, #0]
  4051e2:	4660      	mov	r0, ip
  4051e4:	4770      	bx	lr
  4051e6:	bf00      	nop
  4051e8:	2a08      	cmp	r2, #8
  4051ea:	d313      	bcc.n	405214 <memcpy+0x114>
  4051ec:	078b      	lsls	r3, r1, #30
  4051ee:	d08d      	beq.n	40510c <memcpy+0xc>
  4051f0:	f010 0303 	ands.w	r3, r0, #3
  4051f4:	d08a      	beq.n	40510c <memcpy+0xc>
  4051f6:	f1c3 0304 	rsb	r3, r3, #4
  4051fa:	1ad2      	subs	r2, r2, r3
  4051fc:	07db      	lsls	r3, r3, #31
  4051fe:	bf1c      	itt	ne
  405200:	f811 3b01 	ldrbne.w	r3, [r1], #1
  405204:	f800 3b01 	strbne.w	r3, [r0], #1
  405208:	d380      	bcc.n	40510c <memcpy+0xc>
  40520a:	f831 3b02 	ldrh.w	r3, [r1], #2
  40520e:	f820 3b02 	strh.w	r3, [r0], #2
  405212:	e77b      	b.n	40510c <memcpy+0xc>
  405214:	3a04      	subs	r2, #4
  405216:	d3d9      	bcc.n	4051cc <memcpy+0xcc>
  405218:	3a01      	subs	r2, #1
  40521a:	f811 3b01 	ldrb.w	r3, [r1], #1
  40521e:	f800 3b01 	strb.w	r3, [r0], #1
  405222:	d2f9      	bcs.n	405218 <memcpy+0x118>
  405224:	780b      	ldrb	r3, [r1, #0]
  405226:	7003      	strb	r3, [r0, #0]
  405228:	784b      	ldrb	r3, [r1, #1]
  40522a:	7043      	strb	r3, [r0, #1]
  40522c:	788b      	ldrb	r3, [r1, #2]
  40522e:	7083      	strb	r3, [r0, #2]
  405230:	4660      	mov	r0, ip
  405232:	4770      	bx	lr

00405234 <__malloc_lock>:
  405234:	4801      	ldr	r0, [pc, #4]	; (40523c <__malloc_lock+0x8>)
  405236:	f7ff bc59 	b.w	404aec <__retarget_lock_acquire_recursive>
  40523a:	bf00      	nop
  40523c:	20400cbc 	.word	0x20400cbc

00405240 <__malloc_unlock>:
  405240:	4801      	ldr	r0, [pc, #4]	; (405248 <__malloc_unlock+0x8>)
  405242:	f7ff bc55 	b.w	404af0 <__retarget_lock_release_recursive>
  405246:	bf00      	nop
  405248:	20400cbc 	.word	0x20400cbc

0040524c <_Balloc>:
  40524c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  40524e:	b570      	push	{r4, r5, r6, lr}
  405250:	4605      	mov	r5, r0
  405252:	460c      	mov	r4, r1
  405254:	b14b      	cbz	r3, 40526a <_Balloc+0x1e>
  405256:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  40525a:	b180      	cbz	r0, 40527e <_Balloc+0x32>
  40525c:	6802      	ldr	r2, [r0, #0]
  40525e:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  405262:	2300      	movs	r3, #0
  405264:	6103      	str	r3, [r0, #16]
  405266:	60c3      	str	r3, [r0, #12]
  405268:	bd70      	pop	{r4, r5, r6, pc}
  40526a:	2221      	movs	r2, #33	; 0x21
  40526c:	2104      	movs	r1, #4
  40526e:	f000 fc55 	bl	405b1c <_calloc_r>
  405272:	64e8      	str	r0, [r5, #76]	; 0x4c
  405274:	4603      	mov	r3, r0
  405276:	2800      	cmp	r0, #0
  405278:	d1ed      	bne.n	405256 <_Balloc+0xa>
  40527a:	2000      	movs	r0, #0
  40527c:	bd70      	pop	{r4, r5, r6, pc}
  40527e:	2101      	movs	r1, #1
  405280:	fa01 f604 	lsl.w	r6, r1, r4
  405284:	1d72      	adds	r2, r6, #5
  405286:	4628      	mov	r0, r5
  405288:	0092      	lsls	r2, r2, #2
  40528a:	f000 fc47 	bl	405b1c <_calloc_r>
  40528e:	2800      	cmp	r0, #0
  405290:	d0f3      	beq.n	40527a <_Balloc+0x2e>
  405292:	6044      	str	r4, [r0, #4]
  405294:	6086      	str	r6, [r0, #8]
  405296:	e7e4      	b.n	405262 <_Balloc+0x16>

00405298 <_Bfree>:
  405298:	b131      	cbz	r1, 4052a8 <_Bfree+0x10>
  40529a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  40529c:	684a      	ldr	r2, [r1, #4]
  40529e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  4052a2:	6008      	str	r0, [r1, #0]
  4052a4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  4052a8:	4770      	bx	lr
  4052aa:	bf00      	nop

004052ac <__multadd>:
  4052ac:	b5f0      	push	{r4, r5, r6, r7, lr}
  4052ae:	690c      	ldr	r4, [r1, #16]
  4052b0:	b083      	sub	sp, #12
  4052b2:	460d      	mov	r5, r1
  4052b4:	4606      	mov	r6, r0
  4052b6:	f101 0e14 	add.w	lr, r1, #20
  4052ba:	2700      	movs	r7, #0
  4052bc:	f8de 0000 	ldr.w	r0, [lr]
  4052c0:	b281      	uxth	r1, r0
  4052c2:	fb02 3301 	mla	r3, r2, r1, r3
  4052c6:	0c01      	lsrs	r1, r0, #16
  4052c8:	0c18      	lsrs	r0, r3, #16
  4052ca:	fb02 0101 	mla	r1, r2, r1, r0
  4052ce:	b29b      	uxth	r3, r3
  4052d0:	3701      	adds	r7, #1
  4052d2:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  4052d6:	42bc      	cmp	r4, r7
  4052d8:	f84e 3b04 	str.w	r3, [lr], #4
  4052dc:	ea4f 4311 	mov.w	r3, r1, lsr #16
  4052e0:	dcec      	bgt.n	4052bc <__multadd+0x10>
  4052e2:	b13b      	cbz	r3, 4052f4 <__multadd+0x48>
  4052e4:	68aa      	ldr	r2, [r5, #8]
  4052e6:	4294      	cmp	r4, r2
  4052e8:	da07      	bge.n	4052fa <__multadd+0x4e>
  4052ea:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  4052ee:	3401      	adds	r4, #1
  4052f0:	6153      	str	r3, [r2, #20]
  4052f2:	612c      	str	r4, [r5, #16]
  4052f4:	4628      	mov	r0, r5
  4052f6:	b003      	add	sp, #12
  4052f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4052fa:	6869      	ldr	r1, [r5, #4]
  4052fc:	9301      	str	r3, [sp, #4]
  4052fe:	3101      	adds	r1, #1
  405300:	4630      	mov	r0, r6
  405302:	f7ff ffa3 	bl	40524c <_Balloc>
  405306:	692a      	ldr	r2, [r5, #16]
  405308:	3202      	adds	r2, #2
  40530a:	f105 010c 	add.w	r1, r5, #12
  40530e:	4607      	mov	r7, r0
  405310:	0092      	lsls	r2, r2, #2
  405312:	300c      	adds	r0, #12
  405314:	f7ff fef4 	bl	405100 <memcpy>
  405318:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  40531a:	6869      	ldr	r1, [r5, #4]
  40531c:	9b01      	ldr	r3, [sp, #4]
  40531e:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  405322:	6028      	str	r0, [r5, #0]
  405324:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  405328:	463d      	mov	r5, r7
  40532a:	e7de      	b.n	4052ea <__multadd+0x3e>

0040532c <__hi0bits>:
  40532c:	0c02      	lsrs	r2, r0, #16
  40532e:	0412      	lsls	r2, r2, #16
  405330:	4603      	mov	r3, r0
  405332:	b9b2      	cbnz	r2, 405362 <__hi0bits+0x36>
  405334:	0403      	lsls	r3, r0, #16
  405336:	2010      	movs	r0, #16
  405338:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  40533c:	bf04      	itt	eq
  40533e:	021b      	lsleq	r3, r3, #8
  405340:	3008      	addeq	r0, #8
  405342:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  405346:	bf04      	itt	eq
  405348:	011b      	lsleq	r3, r3, #4
  40534a:	3004      	addeq	r0, #4
  40534c:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  405350:	bf04      	itt	eq
  405352:	009b      	lsleq	r3, r3, #2
  405354:	3002      	addeq	r0, #2
  405356:	2b00      	cmp	r3, #0
  405358:	db02      	blt.n	405360 <__hi0bits+0x34>
  40535a:	005b      	lsls	r3, r3, #1
  40535c:	d403      	bmi.n	405366 <__hi0bits+0x3a>
  40535e:	2020      	movs	r0, #32
  405360:	4770      	bx	lr
  405362:	2000      	movs	r0, #0
  405364:	e7e8      	b.n	405338 <__hi0bits+0xc>
  405366:	3001      	adds	r0, #1
  405368:	4770      	bx	lr
  40536a:	bf00      	nop

0040536c <__lo0bits>:
  40536c:	6803      	ldr	r3, [r0, #0]
  40536e:	f013 0207 	ands.w	r2, r3, #7
  405372:	4601      	mov	r1, r0
  405374:	d007      	beq.n	405386 <__lo0bits+0x1a>
  405376:	07da      	lsls	r2, r3, #31
  405378:	d421      	bmi.n	4053be <__lo0bits+0x52>
  40537a:	0798      	lsls	r0, r3, #30
  40537c:	d421      	bmi.n	4053c2 <__lo0bits+0x56>
  40537e:	089b      	lsrs	r3, r3, #2
  405380:	600b      	str	r3, [r1, #0]
  405382:	2002      	movs	r0, #2
  405384:	4770      	bx	lr
  405386:	b298      	uxth	r0, r3
  405388:	b198      	cbz	r0, 4053b2 <__lo0bits+0x46>
  40538a:	4610      	mov	r0, r2
  40538c:	f013 0fff 	tst.w	r3, #255	; 0xff
  405390:	bf04      	itt	eq
  405392:	0a1b      	lsreq	r3, r3, #8
  405394:	3008      	addeq	r0, #8
  405396:	071a      	lsls	r2, r3, #28
  405398:	bf04      	itt	eq
  40539a:	091b      	lsreq	r3, r3, #4
  40539c:	3004      	addeq	r0, #4
  40539e:	079a      	lsls	r2, r3, #30
  4053a0:	bf04      	itt	eq
  4053a2:	089b      	lsreq	r3, r3, #2
  4053a4:	3002      	addeq	r0, #2
  4053a6:	07da      	lsls	r2, r3, #31
  4053a8:	d407      	bmi.n	4053ba <__lo0bits+0x4e>
  4053aa:	085b      	lsrs	r3, r3, #1
  4053ac:	d104      	bne.n	4053b8 <__lo0bits+0x4c>
  4053ae:	2020      	movs	r0, #32
  4053b0:	4770      	bx	lr
  4053b2:	0c1b      	lsrs	r3, r3, #16
  4053b4:	2010      	movs	r0, #16
  4053b6:	e7e9      	b.n	40538c <__lo0bits+0x20>
  4053b8:	3001      	adds	r0, #1
  4053ba:	600b      	str	r3, [r1, #0]
  4053bc:	4770      	bx	lr
  4053be:	2000      	movs	r0, #0
  4053c0:	4770      	bx	lr
  4053c2:	085b      	lsrs	r3, r3, #1
  4053c4:	600b      	str	r3, [r1, #0]
  4053c6:	2001      	movs	r0, #1
  4053c8:	4770      	bx	lr
  4053ca:	bf00      	nop

004053cc <__i2b>:
  4053cc:	b510      	push	{r4, lr}
  4053ce:	460c      	mov	r4, r1
  4053d0:	2101      	movs	r1, #1
  4053d2:	f7ff ff3b 	bl	40524c <_Balloc>
  4053d6:	2201      	movs	r2, #1
  4053d8:	6144      	str	r4, [r0, #20]
  4053da:	6102      	str	r2, [r0, #16]
  4053dc:	bd10      	pop	{r4, pc}
  4053de:	bf00      	nop

004053e0 <__multiply>:
  4053e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4053e4:	690c      	ldr	r4, [r1, #16]
  4053e6:	6915      	ldr	r5, [r2, #16]
  4053e8:	42ac      	cmp	r4, r5
  4053ea:	b083      	sub	sp, #12
  4053ec:	468b      	mov	fp, r1
  4053ee:	4616      	mov	r6, r2
  4053f0:	da04      	bge.n	4053fc <__multiply+0x1c>
  4053f2:	4622      	mov	r2, r4
  4053f4:	46b3      	mov	fp, r6
  4053f6:	462c      	mov	r4, r5
  4053f8:	460e      	mov	r6, r1
  4053fa:	4615      	mov	r5, r2
  4053fc:	f8db 3008 	ldr.w	r3, [fp, #8]
  405400:	f8db 1004 	ldr.w	r1, [fp, #4]
  405404:	eb04 0805 	add.w	r8, r4, r5
  405408:	4598      	cmp	r8, r3
  40540a:	bfc8      	it	gt
  40540c:	3101      	addgt	r1, #1
  40540e:	f7ff ff1d 	bl	40524c <_Balloc>
  405412:	f100 0914 	add.w	r9, r0, #20
  405416:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  40541a:	45d1      	cmp	r9, sl
  40541c:	9000      	str	r0, [sp, #0]
  40541e:	d205      	bcs.n	40542c <__multiply+0x4c>
  405420:	464b      	mov	r3, r9
  405422:	2100      	movs	r1, #0
  405424:	f843 1b04 	str.w	r1, [r3], #4
  405428:	459a      	cmp	sl, r3
  40542a:	d8fb      	bhi.n	405424 <__multiply+0x44>
  40542c:	f106 0c14 	add.w	ip, r6, #20
  405430:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  405434:	f10b 0b14 	add.w	fp, fp, #20
  405438:	459c      	cmp	ip, r3
  40543a:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  40543e:	d24c      	bcs.n	4054da <__multiply+0xfa>
  405440:	f8cd a004 	str.w	sl, [sp, #4]
  405444:	469a      	mov	sl, r3
  405446:	f8dc 5000 	ldr.w	r5, [ip]
  40544a:	b2af      	uxth	r7, r5
  40544c:	b1ef      	cbz	r7, 40548a <__multiply+0xaa>
  40544e:	2100      	movs	r1, #0
  405450:	464d      	mov	r5, r9
  405452:	465e      	mov	r6, fp
  405454:	460c      	mov	r4, r1
  405456:	f856 2b04 	ldr.w	r2, [r6], #4
  40545a:	6828      	ldr	r0, [r5, #0]
  40545c:	b293      	uxth	r3, r2
  40545e:	b281      	uxth	r1, r0
  405460:	fb07 1303 	mla	r3, r7, r3, r1
  405464:	0c12      	lsrs	r2, r2, #16
  405466:	0c01      	lsrs	r1, r0, #16
  405468:	4423      	add	r3, r4
  40546a:	fb07 1102 	mla	r1, r7, r2, r1
  40546e:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  405472:	b29b      	uxth	r3, r3
  405474:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  405478:	45b6      	cmp	lr, r6
  40547a:	f845 3b04 	str.w	r3, [r5], #4
  40547e:	ea4f 4411 	mov.w	r4, r1, lsr #16
  405482:	d8e8      	bhi.n	405456 <__multiply+0x76>
  405484:	602c      	str	r4, [r5, #0]
  405486:	f8dc 5000 	ldr.w	r5, [ip]
  40548a:	0c2d      	lsrs	r5, r5, #16
  40548c:	d01d      	beq.n	4054ca <__multiply+0xea>
  40548e:	f8d9 3000 	ldr.w	r3, [r9]
  405492:	4648      	mov	r0, r9
  405494:	461c      	mov	r4, r3
  405496:	4659      	mov	r1, fp
  405498:	2200      	movs	r2, #0
  40549a:	880e      	ldrh	r6, [r1, #0]
  40549c:	0c24      	lsrs	r4, r4, #16
  40549e:	fb05 4406 	mla	r4, r5, r6, r4
  4054a2:	4422      	add	r2, r4
  4054a4:	b29b      	uxth	r3, r3
  4054a6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  4054aa:	f840 3b04 	str.w	r3, [r0], #4
  4054ae:	f851 3b04 	ldr.w	r3, [r1], #4
  4054b2:	6804      	ldr	r4, [r0, #0]
  4054b4:	0c1b      	lsrs	r3, r3, #16
  4054b6:	b2a6      	uxth	r6, r4
  4054b8:	fb05 6303 	mla	r3, r5, r3, r6
  4054bc:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  4054c0:	458e      	cmp	lr, r1
  4054c2:	ea4f 4213 	mov.w	r2, r3, lsr #16
  4054c6:	d8e8      	bhi.n	40549a <__multiply+0xba>
  4054c8:	6003      	str	r3, [r0, #0]
  4054ca:	f10c 0c04 	add.w	ip, ip, #4
  4054ce:	45e2      	cmp	sl, ip
  4054d0:	f109 0904 	add.w	r9, r9, #4
  4054d4:	d8b7      	bhi.n	405446 <__multiply+0x66>
  4054d6:	f8dd a004 	ldr.w	sl, [sp, #4]
  4054da:	f1b8 0f00 	cmp.w	r8, #0
  4054de:	dd0b      	ble.n	4054f8 <__multiply+0x118>
  4054e0:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  4054e4:	f1aa 0a04 	sub.w	sl, sl, #4
  4054e8:	b11b      	cbz	r3, 4054f2 <__multiply+0x112>
  4054ea:	e005      	b.n	4054f8 <__multiply+0x118>
  4054ec:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  4054f0:	b913      	cbnz	r3, 4054f8 <__multiply+0x118>
  4054f2:	f1b8 0801 	subs.w	r8, r8, #1
  4054f6:	d1f9      	bne.n	4054ec <__multiply+0x10c>
  4054f8:	9800      	ldr	r0, [sp, #0]
  4054fa:	f8c0 8010 	str.w	r8, [r0, #16]
  4054fe:	b003      	add	sp, #12
  405500:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00405504 <__pow5mult>:
  405504:	f012 0303 	ands.w	r3, r2, #3
  405508:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40550c:	4614      	mov	r4, r2
  40550e:	4607      	mov	r7, r0
  405510:	d12e      	bne.n	405570 <__pow5mult+0x6c>
  405512:	460d      	mov	r5, r1
  405514:	10a4      	asrs	r4, r4, #2
  405516:	d01c      	beq.n	405552 <__pow5mult+0x4e>
  405518:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  40551a:	b396      	cbz	r6, 405582 <__pow5mult+0x7e>
  40551c:	07e3      	lsls	r3, r4, #31
  40551e:	f04f 0800 	mov.w	r8, #0
  405522:	d406      	bmi.n	405532 <__pow5mult+0x2e>
  405524:	1064      	asrs	r4, r4, #1
  405526:	d014      	beq.n	405552 <__pow5mult+0x4e>
  405528:	6830      	ldr	r0, [r6, #0]
  40552a:	b1a8      	cbz	r0, 405558 <__pow5mult+0x54>
  40552c:	4606      	mov	r6, r0
  40552e:	07e3      	lsls	r3, r4, #31
  405530:	d5f8      	bpl.n	405524 <__pow5mult+0x20>
  405532:	4632      	mov	r2, r6
  405534:	4629      	mov	r1, r5
  405536:	4638      	mov	r0, r7
  405538:	f7ff ff52 	bl	4053e0 <__multiply>
  40553c:	b1b5      	cbz	r5, 40556c <__pow5mult+0x68>
  40553e:	686a      	ldr	r2, [r5, #4]
  405540:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  405542:	1064      	asrs	r4, r4, #1
  405544:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  405548:	6029      	str	r1, [r5, #0]
  40554a:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  40554e:	4605      	mov	r5, r0
  405550:	d1ea      	bne.n	405528 <__pow5mult+0x24>
  405552:	4628      	mov	r0, r5
  405554:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405558:	4632      	mov	r2, r6
  40555a:	4631      	mov	r1, r6
  40555c:	4638      	mov	r0, r7
  40555e:	f7ff ff3f 	bl	4053e0 <__multiply>
  405562:	6030      	str	r0, [r6, #0]
  405564:	f8c0 8000 	str.w	r8, [r0]
  405568:	4606      	mov	r6, r0
  40556a:	e7e0      	b.n	40552e <__pow5mult+0x2a>
  40556c:	4605      	mov	r5, r0
  40556e:	e7d9      	b.n	405524 <__pow5mult+0x20>
  405570:	1e5a      	subs	r2, r3, #1
  405572:	4d0b      	ldr	r5, [pc, #44]	; (4055a0 <__pow5mult+0x9c>)
  405574:	2300      	movs	r3, #0
  405576:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  40557a:	f7ff fe97 	bl	4052ac <__multadd>
  40557e:	4605      	mov	r5, r0
  405580:	e7c8      	b.n	405514 <__pow5mult+0x10>
  405582:	2101      	movs	r1, #1
  405584:	4638      	mov	r0, r7
  405586:	f7ff fe61 	bl	40524c <_Balloc>
  40558a:	f240 2171 	movw	r1, #625	; 0x271
  40558e:	2201      	movs	r2, #1
  405590:	2300      	movs	r3, #0
  405592:	6141      	str	r1, [r0, #20]
  405594:	6102      	str	r2, [r0, #16]
  405596:	4606      	mov	r6, r0
  405598:	64b8      	str	r0, [r7, #72]	; 0x48
  40559a:	6003      	str	r3, [r0, #0]
  40559c:	e7be      	b.n	40551c <__pow5mult+0x18>
  40559e:	bf00      	nop
  4055a0:	00406e88 	.word	0x00406e88

004055a4 <__lshift>:
  4055a4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4055a8:	4691      	mov	r9, r2
  4055aa:	690a      	ldr	r2, [r1, #16]
  4055ac:	688b      	ldr	r3, [r1, #8]
  4055ae:	ea4f 1469 	mov.w	r4, r9, asr #5
  4055b2:	eb04 0802 	add.w	r8, r4, r2
  4055b6:	f108 0501 	add.w	r5, r8, #1
  4055ba:	429d      	cmp	r5, r3
  4055bc:	460e      	mov	r6, r1
  4055be:	4607      	mov	r7, r0
  4055c0:	6849      	ldr	r1, [r1, #4]
  4055c2:	dd04      	ble.n	4055ce <__lshift+0x2a>
  4055c4:	005b      	lsls	r3, r3, #1
  4055c6:	429d      	cmp	r5, r3
  4055c8:	f101 0101 	add.w	r1, r1, #1
  4055cc:	dcfa      	bgt.n	4055c4 <__lshift+0x20>
  4055ce:	4638      	mov	r0, r7
  4055d0:	f7ff fe3c 	bl	40524c <_Balloc>
  4055d4:	2c00      	cmp	r4, #0
  4055d6:	f100 0314 	add.w	r3, r0, #20
  4055da:	dd06      	ble.n	4055ea <__lshift+0x46>
  4055dc:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  4055e0:	2100      	movs	r1, #0
  4055e2:	f843 1b04 	str.w	r1, [r3], #4
  4055e6:	429a      	cmp	r2, r3
  4055e8:	d1fb      	bne.n	4055e2 <__lshift+0x3e>
  4055ea:	6934      	ldr	r4, [r6, #16]
  4055ec:	f106 0114 	add.w	r1, r6, #20
  4055f0:	f019 091f 	ands.w	r9, r9, #31
  4055f4:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  4055f8:	d01d      	beq.n	405636 <__lshift+0x92>
  4055fa:	f1c9 0c20 	rsb	ip, r9, #32
  4055fe:	2200      	movs	r2, #0
  405600:	680c      	ldr	r4, [r1, #0]
  405602:	fa04 f409 	lsl.w	r4, r4, r9
  405606:	4314      	orrs	r4, r2
  405608:	f843 4b04 	str.w	r4, [r3], #4
  40560c:	f851 2b04 	ldr.w	r2, [r1], #4
  405610:	458e      	cmp	lr, r1
  405612:	fa22 f20c 	lsr.w	r2, r2, ip
  405616:	d8f3      	bhi.n	405600 <__lshift+0x5c>
  405618:	601a      	str	r2, [r3, #0]
  40561a:	b10a      	cbz	r2, 405620 <__lshift+0x7c>
  40561c:	f108 0502 	add.w	r5, r8, #2
  405620:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  405622:	6872      	ldr	r2, [r6, #4]
  405624:	3d01      	subs	r5, #1
  405626:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  40562a:	6105      	str	r5, [r0, #16]
  40562c:	6031      	str	r1, [r6, #0]
  40562e:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  405632:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405636:	3b04      	subs	r3, #4
  405638:	f851 2b04 	ldr.w	r2, [r1], #4
  40563c:	f843 2f04 	str.w	r2, [r3, #4]!
  405640:	458e      	cmp	lr, r1
  405642:	d8f9      	bhi.n	405638 <__lshift+0x94>
  405644:	e7ec      	b.n	405620 <__lshift+0x7c>
  405646:	bf00      	nop

00405648 <__mcmp>:
  405648:	b430      	push	{r4, r5}
  40564a:	690b      	ldr	r3, [r1, #16]
  40564c:	4605      	mov	r5, r0
  40564e:	6900      	ldr	r0, [r0, #16]
  405650:	1ac0      	subs	r0, r0, r3
  405652:	d10f      	bne.n	405674 <__mcmp+0x2c>
  405654:	009b      	lsls	r3, r3, #2
  405656:	3514      	adds	r5, #20
  405658:	3114      	adds	r1, #20
  40565a:	4419      	add	r1, r3
  40565c:	442b      	add	r3, r5
  40565e:	e001      	b.n	405664 <__mcmp+0x1c>
  405660:	429d      	cmp	r5, r3
  405662:	d207      	bcs.n	405674 <__mcmp+0x2c>
  405664:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  405668:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  40566c:	4294      	cmp	r4, r2
  40566e:	d0f7      	beq.n	405660 <__mcmp+0x18>
  405670:	d302      	bcc.n	405678 <__mcmp+0x30>
  405672:	2001      	movs	r0, #1
  405674:	bc30      	pop	{r4, r5}
  405676:	4770      	bx	lr
  405678:	f04f 30ff 	mov.w	r0, #4294967295
  40567c:	e7fa      	b.n	405674 <__mcmp+0x2c>
  40567e:	bf00      	nop

00405680 <__mdiff>:
  405680:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405684:	690f      	ldr	r7, [r1, #16]
  405686:	460e      	mov	r6, r1
  405688:	6911      	ldr	r1, [r2, #16]
  40568a:	1a7f      	subs	r7, r7, r1
  40568c:	2f00      	cmp	r7, #0
  40568e:	4690      	mov	r8, r2
  405690:	d117      	bne.n	4056c2 <__mdiff+0x42>
  405692:	0089      	lsls	r1, r1, #2
  405694:	f106 0514 	add.w	r5, r6, #20
  405698:	f102 0e14 	add.w	lr, r2, #20
  40569c:	186b      	adds	r3, r5, r1
  40569e:	4471      	add	r1, lr
  4056a0:	e001      	b.n	4056a6 <__mdiff+0x26>
  4056a2:	429d      	cmp	r5, r3
  4056a4:	d25c      	bcs.n	405760 <__mdiff+0xe0>
  4056a6:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  4056aa:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  4056ae:	42a2      	cmp	r2, r4
  4056b0:	d0f7      	beq.n	4056a2 <__mdiff+0x22>
  4056b2:	d25e      	bcs.n	405772 <__mdiff+0xf2>
  4056b4:	4633      	mov	r3, r6
  4056b6:	462c      	mov	r4, r5
  4056b8:	4646      	mov	r6, r8
  4056ba:	4675      	mov	r5, lr
  4056bc:	4698      	mov	r8, r3
  4056be:	2701      	movs	r7, #1
  4056c0:	e005      	b.n	4056ce <__mdiff+0x4e>
  4056c2:	db58      	blt.n	405776 <__mdiff+0xf6>
  4056c4:	f106 0514 	add.w	r5, r6, #20
  4056c8:	f108 0414 	add.w	r4, r8, #20
  4056cc:	2700      	movs	r7, #0
  4056ce:	6871      	ldr	r1, [r6, #4]
  4056d0:	f7ff fdbc 	bl	40524c <_Balloc>
  4056d4:	f8d8 3010 	ldr.w	r3, [r8, #16]
  4056d8:	6936      	ldr	r6, [r6, #16]
  4056da:	60c7      	str	r7, [r0, #12]
  4056dc:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  4056e0:	46a6      	mov	lr, r4
  4056e2:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  4056e6:	f100 0414 	add.w	r4, r0, #20
  4056ea:	2300      	movs	r3, #0
  4056ec:	f85e 1b04 	ldr.w	r1, [lr], #4
  4056f0:	f855 8b04 	ldr.w	r8, [r5], #4
  4056f4:	b28a      	uxth	r2, r1
  4056f6:	fa13 f388 	uxtah	r3, r3, r8
  4056fa:	0c09      	lsrs	r1, r1, #16
  4056fc:	1a9a      	subs	r2, r3, r2
  4056fe:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  405702:	eb03 4322 	add.w	r3, r3, r2, asr #16
  405706:	b292      	uxth	r2, r2
  405708:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  40570c:	45f4      	cmp	ip, lr
  40570e:	f844 2b04 	str.w	r2, [r4], #4
  405712:	ea4f 4323 	mov.w	r3, r3, asr #16
  405716:	d8e9      	bhi.n	4056ec <__mdiff+0x6c>
  405718:	42af      	cmp	r7, r5
  40571a:	d917      	bls.n	40574c <__mdiff+0xcc>
  40571c:	46a4      	mov	ip, r4
  40571e:	46ae      	mov	lr, r5
  405720:	f85e 2b04 	ldr.w	r2, [lr], #4
  405724:	fa13 f382 	uxtah	r3, r3, r2
  405728:	1419      	asrs	r1, r3, #16
  40572a:	eb01 4112 	add.w	r1, r1, r2, lsr #16
  40572e:	b29b      	uxth	r3, r3
  405730:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  405734:	4577      	cmp	r7, lr
  405736:	f84c 2b04 	str.w	r2, [ip], #4
  40573a:	ea4f 4321 	mov.w	r3, r1, asr #16
  40573e:	d8ef      	bhi.n	405720 <__mdiff+0xa0>
  405740:	43ed      	mvns	r5, r5
  405742:	442f      	add	r7, r5
  405744:	f027 0703 	bic.w	r7, r7, #3
  405748:	3704      	adds	r7, #4
  40574a:	443c      	add	r4, r7
  40574c:	3c04      	subs	r4, #4
  40574e:	b922      	cbnz	r2, 40575a <__mdiff+0xda>
  405750:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  405754:	3e01      	subs	r6, #1
  405756:	2b00      	cmp	r3, #0
  405758:	d0fa      	beq.n	405750 <__mdiff+0xd0>
  40575a:	6106      	str	r6, [r0, #16]
  40575c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405760:	2100      	movs	r1, #0
  405762:	f7ff fd73 	bl	40524c <_Balloc>
  405766:	2201      	movs	r2, #1
  405768:	2300      	movs	r3, #0
  40576a:	6102      	str	r2, [r0, #16]
  40576c:	6143      	str	r3, [r0, #20]
  40576e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405772:	4674      	mov	r4, lr
  405774:	e7ab      	b.n	4056ce <__mdiff+0x4e>
  405776:	4633      	mov	r3, r6
  405778:	f106 0414 	add.w	r4, r6, #20
  40577c:	f102 0514 	add.w	r5, r2, #20
  405780:	4616      	mov	r6, r2
  405782:	2701      	movs	r7, #1
  405784:	4698      	mov	r8, r3
  405786:	e7a2      	b.n	4056ce <__mdiff+0x4e>

00405788 <__d2b>:
  405788:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40578c:	b082      	sub	sp, #8
  40578e:	2101      	movs	r1, #1
  405790:	461c      	mov	r4, r3
  405792:	f3c3 570a 	ubfx	r7, r3, #20, #11
  405796:	4615      	mov	r5, r2
  405798:	9e08      	ldr	r6, [sp, #32]
  40579a:	f7ff fd57 	bl	40524c <_Balloc>
  40579e:	f3c4 0413 	ubfx	r4, r4, #0, #20
  4057a2:	4680      	mov	r8, r0
  4057a4:	b10f      	cbz	r7, 4057aa <__d2b+0x22>
  4057a6:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  4057aa:	9401      	str	r4, [sp, #4]
  4057ac:	b31d      	cbz	r5, 4057f6 <__d2b+0x6e>
  4057ae:	a802      	add	r0, sp, #8
  4057b0:	f840 5d08 	str.w	r5, [r0, #-8]!
  4057b4:	f7ff fdda 	bl	40536c <__lo0bits>
  4057b8:	2800      	cmp	r0, #0
  4057ba:	d134      	bne.n	405826 <__d2b+0x9e>
  4057bc:	e89d 000c 	ldmia.w	sp, {r2, r3}
  4057c0:	f8c8 2014 	str.w	r2, [r8, #20]
  4057c4:	2b00      	cmp	r3, #0
  4057c6:	bf0c      	ite	eq
  4057c8:	2101      	moveq	r1, #1
  4057ca:	2102      	movne	r1, #2
  4057cc:	f8c8 3018 	str.w	r3, [r8, #24]
  4057d0:	f8c8 1010 	str.w	r1, [r8, #16]
  4057d4:	b9df      	cbnz	r7, 40580e <__d2b+0x86>
  4057d6:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  4057da:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  4057de:	6030      	str	r0, [r6, #0]
  4057e0:	6918      	ldr	r0, [r3, #16]
  4057e2:	f7ff fda3 	bl	40532c <__hi0bits>
  4057e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4057e8:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  4057ec:	6018      	str	r0, [r3, #0]
  4057ee:	4640      	mov	r0, r8
  4057f0:	b002      	add	sp, #8
  4057f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4057f6:	a801      	add	r0, sp, #4
  4057f8:	f7ff fdb8 	bl	40536c <__lo0bits>
  4057fc:	9b01      	ldr	r3, [sp, #4]
  4057fe:	f8c8 3014 	str.w	r3, [r8, #20]
  405802:	2101      	movs	r1, #1
  405804:	3020      	adds	r0, #32
  405806:	f8c8 1010 	str.w	r1, [r8, #16]
  40580a:	2f00      	cmp	r7, #0
  40580c:	d0e3      	beq.n	4057d6 <__d2b+0x4e>
  40580e:	9b09      	ldr	r3, [sp, #36]	; 0x24
  405810:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  405814:	4407      	add	r7, r0
  405816:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  40581a:	6037      	str	r7, [r6, #0]
  40581c:	6018      	str	r0, [r3, #0]
  40581e:	4640      	mov	r0, r8
  405820:	b002      	add	sp, #8
  405822:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405826:	e89d 000a 	ldmia.w	sp, {r1, r3}
  40582a:	f1c0 0220 	rsb	r2, r0, #32
  40582e:	fa03 f202 	lsl.w	r2, r3, r2
  405832:	430a      	orrs	r2, r1
  405834:	40c3      	lsrs	r3, r0
  405836:	9301      	str	r3, [sp, #4]
  405838:	f8c8 2014 	str.w	r2, [r8, #20]
  40583c:	e7c2      	b.n	4057c4 <__d2b+0x3c>
  40583e:	bf00      	nop

00405840 <_sbrk_r>:
  405840:	b538      	push	{r3, r4, r5, lr}
  405842:	4c07      	ldr	r4, [pc, #28]	; (405860 <_sbrk_r+0x20>)
  405844:	2300      	movs	r3, #0
  405846:	4605      	mov	r5, r0
  405848:	4608      	mov	r0, r1
  40584a:	6023      	str	r3, [r4, #0]
  40584c:	f7fb febc 	bl	4015c8 <_sbrk>
  405850:	1c43      	adds	r3, r0, #1
  405852:	d000      	beq.n	405856 <_sbrk_r+0x16>
  405854:	bd38      	pop	{r3, r4, r5, pc}
  405856:	6823      	ldr	r3, [r4, #0]
  405858:	2b00      	cmp	r3, #0
  40585a:	d0fb      	beq.n	405854 <_sbrk_r+0x14>
  40585c:	602b      	str	r3, [r5, #0]
  40585e:	bd38      	pop	{r3, r4, r5, pc}
  405860:	20400cd0 	.word	0x20400cd0
	...

00405880 <strlen>:
  405880:	f890 f000 	pld	[r0]
  405884:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  405888:	f020 0107 	bic.w	r1, r0, #7
  40588c:	f06f 0c00 	mvn.w	ip, #0
  405890:	f010 0407 	ands.w	r4, r0, #7
  405894:	f891 f020 	pld	[r1, #32]
  405898:	f040 8049 	bne.w	40592e <strlen+0xae>
  40589c:	f04f 0400 	mov.w	r4, #0
  4058a0:	f06f 0007 	mvn.w	r0, #7
  4058a4:	e9d1 2300 	ldrd	r2, r3, [r1]
  4058a8:	f891 f040 	pld	[r1, #64]	; 0x40
  4058ac:	f100 0008 	add.w	r0, r0, #8
  4058b0:	fa82 f24c 	uadd8	r2, r2, ip
  4058b4:	faa4 f28c 	sel	r2, r4, ip
  4058b8:	fa83 f34c 	uadd8	r3, r3, ip
  4058bc:	faa2 f38c 	sel	r3, r2, ip
  4058c0:	bb4b      	cbnz	r3, 405916 <strlen+0x96>
  4058c2:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  4058c6:	fa82 f24c 	uadd8	r2, r2, ip
  4058ca:	f100 0008 	add.w	r0, r0, #8
  4058ce:	faa4 f28c 	sel	r2, r4, ip
  4058d2:	fa83 f34c 	uadd8	r3, r3, ip
  4058d6:	faa2 f38c 	sel	r3, r2, ip
  4058da:	b9e3      	cbnz	r3, 405916 <strlen+0x96>
  4058dc:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  4058e0:	fa82 f24c 	uadd8	r2, r2, ip
  4058e4:	f100 0008 	add.w	r0, r0, #8
  4058e8:	faa4 f28c 	sel	r2, r4, ip
  4058ec:	fa83 f34c 	uadd8	r3, r3, ip
  4058f0:	faa2 f38c 	sel	r3, r2, ip
  4058f4:	b97b      	cbnz	r3, 405916 <strlen+0x96>
  4058f6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  4058fa:	f101 0120 	add.w	r1, r1, #32
  4058fe:	fa82 f24c 	uadd8	r2, r2, ip
  405902:	f100 0008 	add.w	r0, r0, #8
  405906:	faa4 f28c 	sel	r2, r4, ip
  40590a:	fa83 f34c 	uadd8	r3, r3, ip
  40590e:	faa2 f38c 	sel	r3, r2, ip
  405912:	2b00      	cmp	r3, #0
  405914:	d0c6      	beq.n	4058a4 <strlen+0x24>
  405916:	2a00      	cmp	r2, #0
  405918:	bf04      	itt	eq
  40591a:	3004      	addeq	r0, #4
  40591c:	461a      	moveq	r2, r3
  40591e:	ba12      	rev	r2, r2
  405920:	fab2 f282 	clz	r2, r2
  405924:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  405928:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  40592c:	4770      	bx	lr
  40592e:	e9d1 2300 	ldrd	r2, r3, [r1]
  405932:	f004 0503 	and.w	r5, r4, #3
  405936:	f1c4 0000 	rsb	r0, r4, #0
  40593a:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  40593e:	f014 0f04 	tst.w	r4, #4
  405942:	f891 f040 	pld	[r1, #64]	; 0x40
  405946:	fa0c f505 	lsl.w	r5, ip, r5
  40594a:	ea62 0205 	orn	r2, r2, r5
  40594e:	bf1c      	itt	ne
  405950:	ea63 0305 	ornne	r3, r3, r5
  405954:	4662      	movne	r2, ip
  405956:	f04f 0400 	mov.w	r4, #0
  40595a:	e7a9      	b.n	4058b0 <strlen+0x30>

0040595c <__ssprint_r>:
  40595c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405960:	6893      	ldr	r3, [r2, #8]
  405962:	b083      	sub	sp, #12
  405964:	4690      	mov	r8, r2
  405966:	2b00      	cmp	r3, #0
  405968:	d070      	beq.n	405a4c <__ssprint_r+0xf0>
  40596a:	4682      	mov	sl, r0
  40596c:	460c      	mov	r4, r1
  40596e:	6817      	ldr	r7, [r2, #0]
  405970:	688d      	ldr	r5, [r1, #8]
  405972:	6808      	ldr	r0, [r1, #0]
  405974:	e042      	b.n	4059fc <__ssprint_r+0xa0>
  405976:	89a3      	ldrh	r3, [r4, #12]
  405978:	f413 6f90 	tst.w	r3, #1152	; 0x480
  40597c:	d02e      	beq.n	4059dc <__ssprint_r+0x80>
  40597e:	6965      	ldr	r5, [r4, #20]
  405980:	6921      	ldr	r1, [r4, #16]
  405982:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  405986:	eba0 0b01 	sub.w	fp, r0, r1
  40598a:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
  40598e:	f10b 0001 	add.w	r0, fp, #1
  405992:	106d      	asrs	r5, r5, #1
  405994:	4430      	add	r0, r6
  405996:	42a8      	cmp	r0, r5
  405998:	462a      	mov	r2, r5
  40599a:	bf84      	itt	hi
  40599c:	4605      	movhi	r5, r0
  40599e:	462a      	movhi	r2, r5
  4059a0:	055b      	lsls	r3, r3, #21
  4059a2:	d538      	bpl.n	405a16 <__ssprint_r+0xba>
  4059a4:	4611      	mov	r1, r2
  4059a6:	4650      	mov	r0, sl
  4059a8:	f7ff f8a4 	bl	404af4 <_malloc_r>
  4059ac:	2800      	cmp	r0, #0
  4059ae:	d03c      	beq.n	405a2a <__ssprint_r+0xce>
  4059b0:	465a      	mov	r2, fp
  4059b2:	6921      	ldr	r1, [r4, #16]
  4059b4:	9001      	str	r0, [sp, #4]
  4059b6:	f7ff fba3 	bl	405100 <memcpy>
  4059ba:	89a2      	ldrh	r2, [r4, #12]
  4059bc:	9b01      	ldr	r3, [sp, #4]
  4059be:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  4059c2:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  4059c6:	81a2      	strh	r2, [r4, #12]
  4059c8:	eba5 020b 	sub.w	r2, r5, fp
  4059cc:	eb03 000b 	add.w	r0, r3, fp
  4059d0:	6165      	str	r5, [r4, #20]
  4059d2:	6123      	str	r3, [r4, #16]
  4059d4:	6020      	str	r0, [r4, #0]
  4059d6:	60a2      	str	r2, [r4, #8]
  4059d8:	4635      	mov	r5, r6
  4059da:	46b3      	mov	fp, r6
  4059dc:	465a      	mov	r2, fp
  4059de:	4649      	mov	r1, r9
  4059e0:	f000 fa18 	bl	405e14 <memmove>
  4059e4:	f8d8 3008 	ldr.w	r3, [r8, #8]
  4059e8:	68a2      	ldr	r2, [r4, #8]
  4059ea:	6820      	ldr	r0, [r4, #0]
  4059ec:	1b55      	subs	r5, r2, r5
  4059ee:	4458      	add	r0, fp
  4059f0:	1b9e      	subs	r6, r3, r6
  4059f2:	60a5      	str	r5, [r4, #8]
  4059f4:	6020      	str	r0, [r4, #0]
  4059f6:	f8c8 6008 	str.w	r6, [r8, #8]
  4059fa:	b33e      	cbz	r6, 405a4c <__ssprint_r+0xf0>
  4059fc:	687e      	ldr	r6, [r7, #4]
  4059fe:	463b      	mov	r3, r7
  405a00:	3708      	adds	r7, #8
  405a02:	2e00      	cmp	r6, #0
  405a04:	d0fa      	beq.n	4059fc <__ssprint_r+0xa0>
  405a06:	42ae      	cmp	r6, r5
  405a08:	f8d3 9000 	ldr.w	r9, [r3]
  405a0c:	46ab      	mov	fp, r5
  405a0e:	d2b2      	bcs.n	405976 <__ssprint_r+0x1a>
  405a10:	4635      	mov	r5, r6
  405a12:	46b3      	mov	fp, r6
  405a14:	e7e2      	b.n	4059dc <__ssprint_r+0x80>
  405a16:	4650      	mov	r0, sl
  405a18:	f000 fa60 	bl	405edc <_realloc_r>
  405a1c:	4603      	mov	r3, r0
  405a1e:	2800      	cmp	r0, #0
  405a20:	d1d2      	bne.n	4059c8 <__ssprint_r+0x6c>
  405a22:	6921      	ldr	r1, [r4, #16]
  405a24:	4650      	mov	r0, sl
  405a26:	f000 f8f9 	bl	405c1c <_free_r>
  405a2a:	230c      	movs	r3, #12
  405a2c:	f8ca 3000 	str.w	r3, [sl]
  405a30:	89a3      	ldrh	r3, [r4, #12]
  405a32:	2200      	movs	r2, #0
  405a34:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  405a38:	f04f 30ff 	mov.w	r0, #4294967295
  405a3c:	81a3      	strh	r3, [r4, #12]
  405a3e:	f8c8 2008 	str.w	r2, [r8, #8]
  405a42:	f8c8 2004 	str.w	r2, [r8, #4]
  405a46:	b003      	add	sp, #12
  405a48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405a4c:	2000      	movs	r0, #0
  405a4e:	f8c8 0004 	str.w	r0, [r8, #4]
  405a52:	b003      	add	sp, #12
  405a54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00405a58 <__register_exitproc>:
  405a58:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  405a5c:	4d2c      	ldr	r5, [pc, #176]	; (405b10 <__register_exitproc+0xb8>)
  405a5e:	4606      	mov	r6, r0
  405a60:	6828      	ldr	r0, [r5, #0]
  405a62:	4698      	mov	r8, r3
  405a64:	460f      	mov	r7, r1
  405a66:	4691      	mov	r9, r2
  405a68:	f7ff f840 	bl	404aec <__retarget_lock_acquire_recursive>
  405a6c:	4b29      	ldr	r3, [pc, #164]	; (405b14 <__register_exitproc+0xbc>)
  405a6e:	681c      	ldr	r4, [r3, #0]
  405a70:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  405a74:	2b00      	cmp	r3, #0
  405a76:	d03e      	beq.n	405af6 <__register_exitproc+0x9e>
  405a78:	685a      	ldr	r2, [r3, #4]
  405a7a:	2a1f      	cmp	r2, #31
  405a7c:	dc1c      	bgt.n	405ab8 <__register_exitproc+0x60>
  405a7e:	f102 0e01 	add.w	lr, r2, #1
  405a82:	b176      	cbz	r6, 405aa2 <__register_exitproc+0x4a>
  405a84:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  405a88:	2401      	movs	r4, #1
  405a8a:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  405a8e:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  405a92:	4094      	lsls	r4, r2
  405a94:	4320      	orrs	r0, r4
  405a96:	2e02      	cmp	r6, #2
  405a98:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  405a9c:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  405aa0:	d023      	beq.n	405aea <__register_exitproc+0x92>
  405aa2:	3202      	adds	r2, #2
  405aa4:	f8c3 e004 	str.w	lr, [r3, #4]
  405aa8:	6828      	ldr	r0, [r5, #0]
  405aaa:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  405aae:	f7ff f81f 	bl	404af0 <__retarget_lock_release_recursive>
  405ab2:	2000      	movs	r0, #0
  405ab4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405ab8:	4b17      	ldr	r3, [pc, #92]	; (405b18 <__register_exitproc+0xc0>)
  405aba:	b30b      	cbz	r3, 405b00 <__register_exitproc+0xa8>
  405abc:	f44f 70c8 	mov.w	r0, #400	; 0x190
  405ac0:	f3af 8000 	nop.w
  405ac4:	4603      	mov	r3, r0
  405ac6:	b1d8      	cbz	r0, 405b00 <__register_exitproc+0xa8>
  405ac8:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  405acc:	6002      	str	r2, [r0, #0]
  405ace:	2100      	movs	r1, #0
  405ad0:	6041      	str	r1, [r0, #4]
  405ad2:	460a      	mov	r2, r1
  405ad4:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  405ad8:	f04f 0e01 	mov.w	lr, #1
  405adc:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  405ae0:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  405ae4:	2e00      	cmp	r6, #0
  405ae6:	d0dc      	beq.n	405aa2 <__register_exitproc+0x4a>
  405ae8:	e7cc      	b.n	405a84 <__register_exitproc+0x2c>
  405aea:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  405aee:	430c      	orrs	r4, r1
  405af0:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  405af4:	e7d5      	b.n	405aa2 <__register_exitproc+0x4a>
  405af6:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  405afa:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  405afe:	e7bb      	b.n	405a78 <__register_exitproc+0x20>
  405b00:	6828      	ldr	r0, [r5, #0]
  405b02:	f7fe fff5 	bl	404af0 <__retarget_lock_release_recursive>
  405b06:	f04f 30ff 	mov.w	r0, #4294967295
  405b0a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405b0e:	bf00      	nop
  405b10:	20400450 	.word	0x20400450
  405b14:	00406d1c 	.word	0x00406d1c
  405b18:	00000000 	.word	0x00000000

00405b1c <_calloc_r>:
  405b1c:	b510      	push	{r4, lr}
  405b1e:	fb02 f101 	mul.w	r1, r2, r1
  405b22:	f7fe ffe7 	bl	404af4 <_malloc_r>
  405b26:	4604      	mov	r4, r0
  405b28:	b1d8      	cbz	r0, 405b62 <_calloc_r+0x46>
  405b2a:	f850 2c04 	ldr.w	r2, [r0, #-4]
  405b2e:	f022 0203 	bic.w	r2, r2, #3
  405b32:	3a04      	subs	r2, #4
  405b34:	2a24      	cmp	r2, #36	; 0x24
  405b36:	d818      	bhi.n	405b6a <_calloc_r+0x4e>
  405b38:	2a13      	cmp	r2, #19
  405b3a:	d914      	bls.n	405b66 <_calloc_r+0x4a>
  405b3c:	2300      	movs	r3, #0
  405b3e:	2a1b      	cmp	r2, #27
  405b40:	6003      	str	r3, [r0, #0]
  405b42:	6043      	str	r3, [r0, #4]
  405b44:	d916      	bls.n	405b74 <_calloc_r+0x58>
  405b46:	2a24      	cmp	r2, #36	; 0x24
  405b48:	6083      	str	r3, [r0, #8]
  405b4a:	60c3      	str	r3, [r0, #12]
  405b4c:	bf11      	iteee	ne
  405b4e:	f100 0210 	addne.w	r2, r0, #16
  405b52:	6103      	streq	r3, [r0, #16]
  405b54:	6143      	streq	r3, [r0, #20]
  405b56:	f100 0218 	addeq.w	r2, r0, #24
  405b5a:	2300      	movs	r3, #0
  405b5c:	6013      	str	r3, [r2, #0]
  405b5e:	6053      	str	r3, [r2, #4]
  405b60:	6093      	str	r3, [r2, #8]
  405b62:	4620      	mov	r0, r4
  405b64:	bd10      	pop	{r4, pc}
  405b66:	4602      	mov	r2, r0
  405b68:	e7f7      	b.n	405b5a <_calloc_r+0x3e>
  405b6a:	2100      	movs	r1, #0
  405b6c:	f7fc fd24 	bl	4025b8 <memset>
  405b70:	4620      	mov	r0, r4
  405b72:	bd10      	pop	{r4, pc}
  405b74:	f100 0208 	add.w	r2, r0, #8
  405b78:	e7ef      	b.n	405b5a <_calloc_r+0x3e>
  405b7a:	bf00      	nop

00405b7c <_malloc_trim_r>:
  405b7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  405b7e:	4f24      	ldr	r7, [pc, #144]	; (405c10 <_malloc_trim_r+0x94>)
  405b80:	460c      	mov	r4, r1
  405b82:	4606      	mov	r6, r0
  405b84:	f7ff fb56 	bl	405234 <__malloc_lock>
  405b88:	68bb      	ldr	r3, [r7, #8]
  405b8a:	685d      	ldr	r5, [r3, #4]
  405b8c:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  405b90:	310f      	adds	r1, #15
  405b92:	f025 0503 	bic.w	r5, r5, #3
  405b96:	4429      	add	r1, r5
  405b98:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  405b9c:	f021 010f 	bic.w	r1, r1, #15
  405ba0:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  405ba4:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  405ba8:	db07      	blt.n	405bba <_malloc_trim_r+0x3e>
  405baa:	2100      	movs	r1, #0
  405bac:	4630      	mov	r0, r6
  405bae:	f7ff fe47 	bl	405840 <_sbrk_r>
  405bb2:	68bb      	ldr	r3, [r7, #8]
  405bb4:	442b      	add	r3, r5
  405bb6:	4298      	cmp	r0, r3
  405bb8:	d004      	beq.n	405bc4 <_malloc_trim_r+0x48>
  405bba:	4630      	mov	r0, r6
  405bbc:	f7ff fb40 	bl	405240 <__malloc_unlock>
  405bc0:	2000      	movs	r0, #0
  405bc2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405bc4:	4261      	negs	r1, r4
  405bc6:	4630      	mov	r0, r6
  405bc8:	f7ff fe3a 	bl	405840 <_sbrk_r>
  405bcc:	3001      	adds	r0, #1
  405bce:	d00d      	beq.n	405bec <_malloc_trim_r+0x70>
  405bd0:	4b10      	ldr	r3, [pc, #64]	; (405c14 <_malloc_trim_r+0x98>)
  405bd2:	68ba      	ldr	r2, [r7, #8]
  405bd4:	6819      	ldr	r1, [r3, #0]
  405bd6:	1b2d      	subs	r5, r5, r4
  405bd8:	f045 0501 	orr.w	r5, r5, #1
  405bdc:	4630      	mov	r0, r6
  405bde:	1b09      	subs	r1, r1, r4
  405be0:	6055      	str	r5, [r2, #4]
  405be2:	6019      	str	r1, [r3, #0]
  405be4:	f7ff fb2c 	bl	405240 <__malloc_unlock>
  405be8:	2001      	movs	r0, #1
  405bea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405bec:	2100      	movs	r1, #0
  405bee:	4630      	mov	r0, r6
  405bf0:	f7ff fe26 	bl	405840 <_sbrk_r>
  405bf4:	68ba      	ldr	r2, [r7, #8]
  405bf6:	1a83      	subs	r3, r0, r2
  405bf8:	2b0f      	cmp	r3, #15
  405bfa:	ddde      	ble.n	405bba <_malloc_trim_r+0x3e>
  405bfc:	4c06      	ldr	r4, [pc, #24]	; (405c18 <_malloc_trim_r+0x9c>)
  405bfe:	4905      	ldr	r1, [pc, #20]	; (405c14 <_malloc_trim_r+0x98>)
  405c00:	6824      	ldr	r4, [r4, #0]
  405c02:	f043 0301 	orr.w	r3, r3, #1
  405c06:	1b00      	subs	r0, r0, r4
  405c08:	6053      	str	r3, [r2, #4]
  405c0a:	6008      	str	r0, [r1, #0]
  405c0c:	e7d5      	b.n	405bba <_malloc_trim_r+0x3e>
  405c0e:	bf00      	nop
  405c10:	20400454 	.word	0x20400454
  405c14:	20400c70 	.word	0x20400c70
  405c18:	2040085c 	.word	0x2040085c

00405c1c <_free_r>:
  405c1c:	2900      	cmp	r1, #0
  405c1e:	d044      	beq.n	405caa <_free_r+0x8e>
  405c20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405c24:	460d      	mov	r5, r1
  405c26:	4680      	mov	r8, r0
  405c28:	f7ff fb04 	bl	405234 <__malloc_lock>
  405c2c:	f855 7c04 	ldr.w	r7, [r5, #-4]
  405c30:	4969      	ldr	r1, [pc, #420]	; (405dd8 <_free_r+0x1bc>)
  405c32:	f027 0301 	bic.w	r3, r7, #1
  405c36:	f1a5 0408 	sub.w	r4, r5, #8
  405c3a:	18e2      	adds	r2, r4, r3
  405c3c:	688e      	ldr	r6, [r1, #8]
  405c3e:	6850      	ldr	r0, [r2, #4]
  405c40:	42b2      	cmp	r2, r6
  405c42:	f020 0003 	bic.w	r0, r0, #3
  405c46:	d05e      	beq.n	405d06 <_free_r+0xea>
  405c48:	07fe      	lsls	r6, r7, #31
  405c4a:	6050      	str	r0, [r2, #4]
  405c4c:	d40b      	bmi.n	405c66 <_free_r+0x4a>
  405c4e:	f855 7c08 	ldr.w	r7, [r5, #-8]
  405c52:	1be4      	subs	r4, r4, r7
  405c54:	f101 0e08 	add.w	lr, r1, #8
  405c58:	68a5      	ldr	r5, [r4, #8]
  405c5a:	4575      	cmp	r5, lr
  405c5c:	443b      	add	r3, r7
  405c5e:	d06d      	beq.n	405d3c <_free_r+0x120>
  405c60:	68e7      	ldr	r7, [r4, #12]
  405c62:	60ef      	str	r7, [r5, #12]
  405c64:	60bd      	str	r5, [r7, #8]
  405c66:	1815      	adds	r5, r2, r0
  405c68:	686d      	ldr	r5, [r5, #4]
  405c6a:	07ed      	lsls	r5, r5, #31
  405c6c:	d53e      	bpl.n	405cec <_free_r+0xd0>
  405c6e:	f043 0201 	orr.w	r2, r3, #1
  405c72:	6062      	str	r2, [r4, #4]
  405c74:	50e3      	str	r3, [r4, r3]
  405c76:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  405c7a:	d217      	bcs.n	405cac <_free_r+0x90>
  405c7c:	08db      	lsrs	r3, r3, #3
  405c7e:	1c58      	adds	r0, r3, #1
  405c80:	109a      	asrs	r2, r3, #2
  405c82:	684d      	ldr	r5, [r1, #4]
  405c84:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  405c88:	60a7      	str	r7, [r4, #8]
  405c8a:	2301      	movs	r3, #1
  405c8c:	4093      	lsls	r3, r2
  405c8e:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  405c92:	432b      	orrs	r3, r5
  405c94:	3a08      	subs	r2, #8
  405c96:	60e2      	str	r2, [r4, #12]
  405c98:	604b      	str	r3, [r1, #4]
  405c9a:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  405c9e:	60fc      	str	r4, [r7, #12]
  405ca0:	4640      	mov	r0, r8
  405ca2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  405ca6:	f7ff bacb 	b.w	405240 <__malloc_unlock>
  405caa:	4770      	bx	lr
  405cac:	0a5a      	lsrs	r2, r3, #9
  405cae:	2a04      	cmp	r2, #4
  405cb0:	d852      	bhi.n	405d58 <_free_r+0x13c>
  405cb2:	099a      	lsrs	r2, r3, #6
  405cb4:	f102 0739 	add.w	r7, r2, #57	; 0x39
  405cb8:	00ff      	lsls	r7, r7, #3
  405cba:	f102 0538 	add.w	r5, r2, #56	; 0x38
  405cbe:	19c8      	adds	r0, r1, r7
  405cc0:	59ca      	ldr	r2, [r1, r7]
  405cc2:	3808      	subs	r0, #8
  405cc4:	4290      	cmp	r0, r2
  405cc6:	d04f      	beq.n	405d68 <_free_r+0x14c>
  405cc8:	6851      	ldr	r1, [r2, #4]
  405cca:	f021 0103 	bic.w	r1, r1, #3
  405cce:	428b      	cmp	r3, r1
  405cd0:	d232      	bcs.n	405d38 <_free_r+0x11c>
  405cd2:	6892      	ldr	r2, [r2, #8]
  405cd4:	4290      	cmp	r0, r2
  405cd6:	d1f7      	bne.n	405cc8 <_free_r+0xac>
  405cd8:	68c3      	ldr	r3, [r0, #12]
  405cda:	60a0      	str	r0, [r4, #8]
  405cdc:	60e3      	str	r3, [r4, #12]
  405cde:	609c      	str	r4, [r3, #8]
  405ce0:	60c4      	str	r4, [r0, #12]
  405ce2:	4640      	mov	r0, r8
  405ce4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  405ce8:	f7ff baaa 	b.w	405240 <__malloc_unlock>
  405cec:	6895      	ldr	r5, [r2, #8]
  405cee:	4f3b      	ldr	r7, [pc, #236]	; (405ddc <_free_r+0x1c0>)
  405cf0:	42bd      	cmp	r5, r7
  405cf2:	4403      	add	r3, r0
  405cf4:	d040      	beq.n	405d78 <_free_r+0x15c>
  405cf6:	68d0      	ldr	r0, [r2, #12]
  405cf8:	60e8      	str	r0, [r5, #12]
  405cfa:	f043 0201 	orr.w	r2, r3, #1
  405cfe:	6085      	str	r5, [r0, #8]
  405d00:	6062      	str	r2, [r4, #4]
  405d02:	50e3      	str	r3, [r4, r3]
  405d04:	e7b7      	b.n	405c76 <_free_r+0x5a>
  405d06:	07ff      	lsls	r7, r7, #31
  405d08:	4403      	add	r3, r0
  405d0a:	d407      	bmi.n	405d1c <_free_r+0x100>
  405d0c:	f855 2c08 	ldr.w	r2, [r5, #-8]
  405d10:	1aa4      	subs	r4, r4, r2
  405d12:	4413      	add	r3, r2
  405d14:	68a0      	ldr	r0, [r4, #8]
  405d16:	68e2      	ldr	r2, [r4, #12]
  405d18:	60c2      	str	r2, [r0, #12]
  405d1a:	6090      	str	r0, [r2, #8]
  405d1c:	4a30      	ldr	r2, [pc, #192]	; (405de0 <_free_r+0x1c4>)
  405d1e:	6812      	ldr	r2, [r2, #0]
  405d20:	f043 0001 	orr.w	r0, r3, #1
  405d24:	4293      	cmp	r3, r2
  405d26:	6060      	str	r0, [r4, #4]
  405d28:	608c      	str	r4, [r1, #8]
  405d2a:	d3b9      	bcc.n	405ca0 <_free_r+0x84>
  405d2c:	4b2d      	ldr	r3, [pc, #180]	; (405de4 <_free_r+0x1c8>)
  405d2e:	4640      	mov	r0, r8
  405d30:	6819      	ldr	r1, [r3, #0]
  405d32:	f7ff ff23 	bl	405b7c <_malloc_trim_r>
  405d36:	e7b3      	b.n	405ca0 <_free_r+0x84>
  405d38:	4610      	mov	r0, r2
  405d3a:	e7cd      	b.n	405cd8 <_free_r+0xbc>
  405d3c:	1811      	adds	r1, r2, r0
  405d3e:	6849      	ldr	r1, [r1, #4]
  405d40:	07c9      	lsls	r1, r1, #31
  405d42:	d444      	bmi.n	405dce <_free_r+0x1b2>
  405d44:	6891      	ldr	r1, [r2, #8]
  405d46:	68d2      	ldr	r2, [r2, #12]
  405d48:	60ca      	str	r2, [r1, #12]
  405d4a:	4403      	add	r3, r0
  405d4c:	f043 0001 	orr.w	r0, r3, #1
  405d50:	6091      	str	r1, [r2, #8]
  405d52:	6060      	str	r0, [r4, #4]
  405d54:	50e3      	str	r3, [r4, r3]
  405d56:	e7a3      	b.n	405ca0 <_free_r+0x84>
  405d58:	2a14      	cmp	r2, #20
  405d5a:	d816      	bhi.n	405d8a <_free_r+0x16e>
  405d5c:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  405d60:	00ff      	lsls	r7, r7, #3
  405d62:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  405d66:	e7aa      	b.n	405cbe <_free_r+0xa2>
  405d68:	10aa      	asrs	r2, r5, #2
  405d6a:	2301      	movs	r3, #1
  405d6c:	684d      	ldr	r5, [r1, #4]
  405d6e:	4093      	lsls	r3, r2
  405d70:	432b      	orrs	r3, r5
  405d72:	604b      	str	r3, [r1, #4]
  405d74:	4603      	mov	r3, r0
  405d76:	e7b0      	b.n	405cda <_free_r+0xbe>
  405d78:	f043 0201 	orr.w	r2, r3, #1
  405d7c:	614c      	str	r4, [r1, #20]
  405d7e:	610c      	str	r4, [r1, #16]
  405d80:	60e5      	str	r5, [r4, #12]
  405d82:	60a5      	str	r5, [r4, #8]
  405d84:	6062      	str	r2, [r4, #4]
  405d86:	50e3      	str	r3, [r4, r3]
  405d88:	e78a      	b.n	405ca0 <_free_r+0x84>
  405d8a:	2a54      	cmp	r2, #84	; 0x54
  405d8c:	d806      	bhi.n	405d9c <_free_r+0x180>
  405d8e:	0b1a      	lsrs	r2, r3, #12
  405d90:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  405d94:	00ff      	lsls	r7, r7, #3
  405d96:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  405d9a:	e790      	b.n	405cbe <_free_r+0xa2>
  405d9c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  405da0:	d806      	bhi.n	405db0 <_free_r+0x194>
  405da2:	0bda      	lsrs	r2, r3, #15
  405da4:	f102 0778 	add.w	r7, r2, #120	; 0x78
  405da8:	00ff      	lsls	r7, r7, #3
  405daa:	f102 0577 	add.w	r5, r2, #119	; 0x77
  405dae:	e786      	b.n	405cbe <_free_r+0xa2>
  405db0:	f240 5054 	movw	r0, #1364	; 0x554
  405db4:	4282      	cmp	r2, r0
  405db6:	d806      	bhi.n	405dc6 <_free_r+0x1aa>
  405db8:	0c9a      	lsrs	r2, r3, #18
  405dba:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  405dbe:	00ff      	lsls	r7, r7, #3
  405dc0:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  405dc4:	e77b      	b.n	405cbe <_free_r+0xa2>
  405dc6:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  405dca:	257e      	movs	r5, #126	; 0x7e
  405dcc:	e777      	b.n	405cbe <_free_r+0xa2>
  405dce:	f043 0101 	orr.w	r1, r3, #1
  405dd2:	6061      	str	r1, [r4, #4]
  405dd4:	6013      	str	r3, [r2, #0]
  405dd6:	e763      	b.n	405ca0 <_free_r+0x84>
  405dd8:	20400454 	.word	0x20400454
  405ddc:	2040045c 	.word	0x2040045c
  405de0:	20400860 	.word	0x20400860
  405de4:	20400ca0 	.word	0x20400ca0

00405de8 <__ascii_mbtowc>:
  405de8:	b082      	sub	sp, #8
  405dea:	b149      	cbz	r1, 405e00 <__ascii_mbtowc+0x18>
  405dec:	b15a      	cbz	r2, 405e06 <__ascii_mbtowc+0x1e>
  405dee:	b16b      	cbz	r3, 405e0c <__ascii_mbtowc+0x24>
  405df0:	7813      	ldrb	r3, [r2, #0]
  405df2:	600b      	str	r3, [r1, #0]
  405df4:	7812      	ldrb	r2, [r2, #0]
  405df6:	1c10      	adds	r0, r2, #0
  405df8:	bf18      	it	ne
  405dfa:	2001      	movne	r0, #1
  405dfc:	b002      	add	sp, #8
  405dfe:	4770      	bx	lr
  405e00:	a901      	add	r1, sp, #4
  405e02:	2a00      	cmp	r2, #0
  405e04:	d1f3      	bne.n	405dee <__ascii_mbtowc+0x6>
  405e06:	4610      	mov	r0, r2
  405e08:	b002      	add	sp, #8
  405e0a:	4770      	bx	lr
  405e0c:	f06f 0001 	mvn.w	r0, #1
  405e10:	e7f4      	b.n	405dfc <__ascii_mbtowc+0x14>
  405e12:	bf00      	nop

00405e14 <memmove>:
  405e14:	4288      	cmp	r0, r1
  405e16:	b5f0      	push	{r4, r5, r6, r7, lr}
  405e18:	d90d      	bls.n	405e36 <memmove+0x22>
  405e1a:	188b      	adds	r3, r1, r2
  405e1c:	4298      	cmp	r0, r3
  405e1e:	d20a      	bcs.n	405e36 <memmove+0x22>
  405e20:	1884      	adds	r4, r0, r2
  405e22:	2a00      	cmp	r2, #0
  405e24:	d051      	beq.n	405eca <memmove+0xb6>
  405e26:	4622      	mov	r2, r4
  405e28:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  405e2c:	f802 4d01 	strb.w	r4, [r2, #-1]!
  405e30:	4299      	cmp	r1, r3
  405e32:	d1f9      	bne.n	405e28 <memmove+0x14>
  405e34:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405e36:	2a0f      	cmp	r2, #15
  405e38:	d948      	bls.n	405ecc <memmove+0xb8>
  405e3a:	ea41 0300 	orr.w	r3, r1, r0
  405e3e:	079b      	lsls	r3, r3, #30
  405e40:	d146      	bne.n	405ed0 <memmove+0xbc>
  405e42:	f100 0410 	add.w	r4, r0, #16
  405e46:	f101 0310 	add.w	r3, r1, #16
  405e4a:	4615      	mov	r5, r2
  405e4c:	f853 6c10 	ldr.w	r6, [r3, #-16]
  405e50:	f844 6c10 	str.w	r6, [r4, #-16]
  405e54:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  405e58:	f844 6c0c 	str.w	r6, [r4, #-12]
  405e5c:	f853 6c08 	ldr.w	r6, [r3, #-8]
  405e60:	f844 6c08 	str.w	r6, [r4, #-8]
  405e64:	3d10      	subs	r5, #16
  405e66:	f853 6c04 	ldr.w	r6, [r3, #-4]
  405e6a:	f844 6c04 	str.w	r6, [r4, #-4]
  405e6e:	2d0f      	cmp	r5, #15
  405e70:	f103 0310 	add.w	r3, r3, #16
  405e74:	f104 0410 	add.w	r4, r4, #16
  405e78:	d8e8      	bhi.n	405e4c <memmove+0x38>
  405e7a:	f1a2 0310 	sub.w	r3, r2, #16
  405e7e:	f023 030f 	bic.w	r3, r3, #15
  405e82:	f002 0e0f 	and.w	lr, r2, #15
  405e86:	3310      	adds	r3, #16
  405e88:	f1be 0f03 	cmp.w	lr, #3
  405e8c:	4419      	add	r1, r3
  405e8e:	4403      	add	r3, r0
  405e90:	d921      	bls.n	405ed6 <memmove+0xc2>
  405e92:	1f1e      	subs	r6, r3, #4
  405e94:	460d      	mov	r5, r1
  405e96:	4674      	mov	r4, lr
  405e98:	3c04      	subs	r4, #4
  405e9a:	f855 7b04 	ldr.w	r7, [r5], #4
  405e9e:	f846 7f04 	str.w	r7, [r6, #4]!
  405ea2:	2c03      	cmp	r4, #3
  405ea4:	d8f8      	bhi.n	405e98 <memmove+0x84>
  405ea6:	f1ae 0404 	sub.w	r4, lr, #4
  405eaa:	f024 0403 	bic.w	r4, r4, #3
  405eae:	3404      	adds	r4, #4
  405eb0:	4421      	add	r1, r4
  405eb2:	4423      	add	r3, r4
  405eb4:	f002 0203 	and.w	r2, r2, #3
  405eb8:	b162      	cbz	r2, 405ed4 <memmove+0xc0>
  405eba:	3b01      	subs	r3, #1
  405ebc:	440a      	add	r2, r1
  405ebe:	f811 4b01 	ldrb.w	r4, [r1], #1
  405ec2:	f803 4f01 	strb.w	r4, [r3, #1]!
  405ec6:	428a      	cmp	r2, r1
  405ec8:	d1f9      	bne.n	405ebe <memmove+0xaa>
  405eca:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405ecc:	4603      	mov	r3, r0
  405ece:	e7f3      	b.n	405eb8 <memmove+0xa4>
  405ed0:	4603      	mov	r3, r0
  405ed2:	e7f2      	b.n	405eba <memmove+0xa6>
  405ed4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405ed6:	4672      	mov	r2, lr
  405ed8:	e7ee      	b.n	405eb8 <memmove+0xa4>
  405eda:	bf00      	nop

00405edc <_realloc_r>:
  405edc:	2900      	cmp	r1, #0
  405ede:	f000 8095 	beq.w	40600c <_realloc_r+0x130>
  405ee2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405ee6:	460d      	mov	r5, r1
  405ee8:	4616      	mov	r6, r2
  405eea:	b083      	sub	sp, #12
  405eec:	4680      	mov	r8, r0
  405eee:	f106 070b 	add.w	r7, r6, #11
  405ef2:	f7ff f99f 	bl	405234 <__malloc_lock>
  405ef6:	f855 ec04 	ldr.w	lr, [r5, #-4]
  405efa:	2f16      	cmp	r7, #22
  405efc:	f02e 0403 	bic.w	r4, lr, #3
  405f00:	f1a5 0908 	sub.w	r9, r5, #8
  405f04:	d83c      	bhi.n	405f80 <_realloc_r+0xa4>
  405f06:	2210      	movs	r2, #16
  405f08:	4617      	mov	r7, r2
  405f0a:	42be      	cmp	r6, r7
  405f0c:	d83d      	bhi.n	405f8a <_realloc_r+0xae>
  405f0e:	4294      	cmp	r4, r2
  405f10:	da43      	bge.n	405f9a <_realloc_r+0xbe>
  405f12:	4bc4      	ldr	r3, [pc, #784]	; (406224 <_realloc_r+0x348>)
  405f14:	6899      	ldr	r1, [r3, #8]
  405f16:	eb09 0004 	add.w	r0, r9, r4
  405f1a:	4288      	cmp	r0, r1
  405f1c:	f000 80b4 	beq.w	406088 <_realloc_r+0x1ac>
  405f20:	6843      	ldr	r3, [r0, #4]
  405f22:	f023 0101 	bic.w	r1, r3, #1
  405f26:	4401      	add	r1, r0
  405f28:	6849      	ldr	r1, [r1, #4]
  405f2a:	07c9      	lsls	r1, r1, #31
  405f2c:	d54c      	bpl.n	405fc8 <_realloc_r+0xec>
  405f2e:	f01e 0f01 	tst.w	lr, #1
  405f32:	f000 809b 	beq.w	40606c <_realloc_r+0x190>
  405f36:	4631      	mov	r1, r6
  405f38:	4640      	mov	r0, r8
  405f3a:	f7fe fddb 	bl	404af4 <_malloc_r>
  405f3e:	4606      	mov	r6, r0
  405f40:	2800      	cmp	r0, #0
  405f42:	d03a      	beq.n	405fba <_realloc_r+0xde>
  405f44:	f855 3c04 	ldr.w	r3, [r5, #-4]
  405f48:	f023 0301 	bic.w	r3, r3, #1
  405f4c:	444b      	add	r3, r9
  405f4e:	f1a0 0208 	sub.w	r2, r0, #8
  405f52:	429a      	cmp	r2, r3
  405f54:	f000 8121 	beq.w	40619a <_realloc_r+0x2be>
  405f58:	1f22      	subs	r2, r4, #4
  405f5a:	2a24      	cmp	r2, #36	; 0x24
  405f5c:	f200 8107 	bhi.w	40616e <_realloc_r+0x292>
  405f60:	2a13      	cmp	r2, #19
  405f62:	f200 80db 	bhi.w	40611c <_realloc_r+0x240>
  405f66:	4603      	mov	r3, r0
  405f68:	462a      	mov	r2, r5
  405f6a:	6811      	ldr	r1, [r2, #0]
  405f6c:	6019      	str	r1, [r3, #0]
  405f6e:	6851      	ldr	r1, [r2, #4]
  405f70:	6059      	str	r1, [r3, #4]
  405f72:	6892      	ldr	r2, [r2, #8]
  405f74:	609a      	str	r2, [r3, #8]
  405f76:	4629      	mov	r1, r5
  405f78:	4640      	mov	r0, r8
  405f7a:	f7ff fe4f 	bl	405c1c <_free_r>
  405f7e:	e01c      	b.n	405fba <_realloc_r+0xde>
  405f80:	f027 0707 	bic.w	r7, r7, #7
  405f84:	2f00      	cmp	r7, #0
  405f86:	463a      	mov	r2, r7
  405f88:	dabf      	bge.n	405f0a <_realloc_r+0x2e>
  405f8a:	2600      	movs	r6, #0
  405f8c:	230c      	movs	r3, #12
  405f8e:	4630      	mov	r0, r6
  405f90:	f8c8 3000 	str.w	r3, [r8]
  405f94:	b003      	add	sp, #12
  405f96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405f9a:	462e      	mov	r6, r5
  405f9c:	1be3      	subs	r3, r4, r7
  405f9e:	2b0f      	cmp	r3, #15
  405fa0:	d81e      	bhi.n	405fe0 <_realloc_r+0x104>
  405fa2:	f8d9 3004 	ldr.w	r3, [r9, #4]
  405fa6:	f003 0301 	and.w	r3, r3, #1
  405faa:	4323      	orrs	r3, r4
  405fac:	444c      	add	r4, r9
  405fae:	f8c9 3004 	str.w	r3, [r9, #4]
  405fb2:	6863      	ldr	r3, [r4, #4]
  405fb4:	f043 0301 	orr.w	r3, r3, #1
  405fb8:	6063      	str	r3, [r4, #4]
  405fba:	4640      	mov	r0, r8
  405fbc:	f7ff f940 	bl	405240 <__malloc_unlock>
  405fc0:	4630      	mov	r0, r6
  405fc2:	b003      	add	sp, #12
  405fc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405fc8:	f023 0303 	bic.w	r3, r3, #3
  405fcc:	18e1      	adds	r1, r4, r3
  405fce:	4291      	cmp	r1, r2
  405fd0:	db1f      	blt.n	406012 <_realloc_r+0x136>
  405fd2:	68c3      	ldr	r3, [r0, #12]
  405fd4:	6882      	ldr	r2, [r0, #8]
  405fd6:	462e      	mov	r6, r5
  405fd8:	60d3      	str	r3, [r2, #12]
  405fda:	460c      	mov	r4, r1
  405fdc:	609a      	str	r2, [r3, #8]
  405fde:	e7dd      	b.n	405f9c <_realloc_r+0xc0>
  405fe0:	f8d9 2004 	ldr.w	r2, [r9, #4]
  405fe4:	eb09 0107 	add.w	r1, r9, r7
  405fe8:	f002 0201 	and.w	r2, r2, #1
  405fec:	444c      	add	r4, r9
  405fee:	f043 0301 	orr.w	r3, r3, #1
  405ff2:	4317      	orrs	r7, r2
  405ff4:	f8c9 7004 	str.w	r7, [r9, #4]
  405ff8:	604b      	str	r3, [r1, #4]
  405ffa:	6863      	ldr	r3, [r4, #4]
  405ffc:	f043 0301 	orr.w	r3, r3, #1
  406000:	3108      	adds	r1, #8
  406002:	6063      	str	r3, [r4, #4]
  406004:	4640      	mov	r0, r8
  406006:	f7ff fe09 	bl	405c1c <_free_r>
  40600a:	e7d6      	b.n	405fba <_realloc_r+0xde>
  40600c:	4611      	mov	r1, r2
  40600e:	f7fe bd71 	b.w	404af4 <_malloc_r>
  406012:	f01e 0f01 	tst.w	lr, #1
  406016:	d18e      	bne.n	405f36 <_realloc_r+0x5a>
  406018:	f855 1c08 	ldr.w	r1, [r5, #-8]
  40601c:	eba9 0a01 	sub.w	sl, r9, r1
  406020:	f8da 1004 	ldr.w	r1, [sl, #4]
  406024:	f021 0103 	bic.w	r1, r1, #3
  406028:	440b      	add	r3, r1
  40602a:	4423      	add	r3, r4
  40602c:	4293      	cmp	r3, r2
  40602e:	db25      	blt.n	40607c <_realloc_r+0x1a0>
  406030:	68c2      	ldr	r2, [r0, #12]
  406032:	6881      	ldr	r1, [r0, #8]
  406034:	4656      	mov	r6, sl
  406036:	60ca      	str	r2, [r1, #12]
  406038:	6091      	str	r1, [r2, #8]
  40603a:	f8da 100c 	ldr.w	r1, [sl, #12]
  40603e:	f856 0f08 	ldr.w	r0, [r6, #8]!
  406042:	1f22      	subs	r2, r4, #4
  406044:	2a24      	cmp	r2, #36	; 0x24
  406046:	60c1      	str	r1, [r0, #12]
  406048:	6088      	str	r0, [r1, #8]
  40604a:	f200 8094 	bhi.w	406176 <_realloc_r+0x29a>
  40604e:	2a13      	cmp	r2, #19
  406050:	d96f      	bls.n	406132 <_realloc_r+0x256>
  406052:	6829      	ldr	r1, [r5, #0]
  406054:	f8ca 1008 	str.w	r1, [sl, #8]
  406058:	6869      	ldr	r1, [r5, #4]
  40605a:	f8ca 100c 	str.w	r1, [sl, #12]
  40605e:	2a1b      	cmp	r2, #27
  406060:	f200 80a2 	bhi.w	4061a8 <_realloc_r+0x2cc>
  406064:	3508      	adds	r5, #8
  406066:	f10a 0210 	add.w	r2, sl, #16
  40606a:	e063      	b.n	406134 <_realloc_r+0x258>
  40606c:	f855 3c08 	ldr.w	r3, [r5, #-8]
  406070:	eba9 0a03 	sub.w	sl, r9, r3
  406074:	f8da 1004 	ldr.w	r1, [sl, #4]
  406078:	f021 0103 	bic.w	r1, r1, #3
  40607c:	1863      	adds	r3, r4, r1
  40607e:	4293      	cmp	r3, r2
  406080:	f6ff af59 	blt.w	405f36 <_realloc_r+0x5a>
  406084:	4656      	mov	r6, sl
  406086:	e7d8      	b.n	40603a <_realloc_r+0x15e>
  406088:	6841      	ldr	r1, [r0, #4]
  40608a:	f021 0b03 	bic.w	fp, r1, #3
  40608e:	44a3      	add	fp, r4
  406090:	f107 0010 	add.w	r0, r7, #16
  406094:	4583      	cmp	fp, r0
  406096:	da56      	bge.n	406146 <_realloc_r+0x26a>
  406098:	f01e 0f01 	tst.w	lr, #1
  40609c:	f47f af4b 	bne.w	405f36 <_realloc_r+0x5a>
  4060a0:	f855 1c08 	ldr.w	r1, [r5, #-8]
  4060a4:	eba9 0a01 	sub.w	sl, r9, r1
  4060a8:	f8da 1004 	ldr.w	r1, [sl, #4]
  4060ac:	f021 0103 	bic.w	r1, r1, #3
  4060b0:	448b      	add	fp, r1
  4060b2:	4558      	cmp	r0, fp
  4060b4:	dce2      	bgt.n	40607c <_realloc_r+0x1a0>
  4060b6:	4656      	mov	r6, sl
  4060b8:	f8da 100c 	ldr.w	r1, [sl, #12]
  4060bc:	f856 0f08 	ldr.w	r0, [r6, #8]!
  4060c0:	1f22      	subs	r2, r4, #4
  4060c2:	2a24      	cmp	r2, #36	; 0x24
  4060c4:	60c1      	str	r1, [r0, #12]
  4060c6:	6088      	str	r0, [r1, #8]
  4060c8:	f200 808f 	bhi.w	4061ea <_realloc_r+0x30e>
  4060cc:	2a13      	cmp	r2, #19
  4060ce:	f240 808a 	bls.w	4061e6 <_realloc_r+0x30a>
  4060d2:	6829      	ldr	r1, [r5, #0]
  4060d4:	f8ca 1008 	str.w	r1, [sl, #8]
  4060d8:	6869      	ldr	r1, [r5, #4]
  4060da:	f8ca 100c 	str.w	r1, [sl, #12]
  4060de:	2a1b      	cmp	r2, #27
  4060e0:	f200 808a 	bhi.w	4061f8 <_realloc_r+0x31c>
  4060e4:	3508      	adds	r5, #8
  4060e6:	f10a 0210 	add.w	r2, sl, #16
  4060ea:	6829      	ldr	r1, [r5, #0]
  4060ec:	6011      	str	r1, [r2, #0]
  4060ee:	6869      	ldr	r1, [r5, #4]
  4060f0:	6051      	str	r1, [r2, #4]
  4060f2:	68a9      	ldr	r1, [r5, #8]
  4060f4:	6091      	str	r1, [r2, #8]
  4060f6:	eb0a 0107 	add.w	r1, sl, r7
  4060fa:	ebab 0207 	sub.w	r2, fp, r7
  4060fe:	f042 0201 	orr.w	r2, r2, #1
  406102:	6099      	str	r1, [r3, #8]
  406104:	604a      	str	r2, [r1, #4]
  406106:	f8da 3004 	ldr.w	r3, [sl, #4]
  40610a:	f003 0301 	and.w	r3, r3, #1
  40610e:	431f      	orrs	r7, r3
  406110:	4640      	mov	r0, r8
  406112:	f8ca 7004 	str.w	r7, [sl, #4]
  406116:	f7ff f893 	bl	405240 <__malloc_unlock>
  40611a:	e751      	b.n	405fc0 <_realloc_r+0xe4>
  40611c:	682b      	ldr	r3, [r5, #0]
  40611e:	6003      	str	r3, [r0, #0]
  406120:	686b      	ldr	r3, [r5, #4]
  406122:	6043      	str	r3, [r0, #4]
  406124:	2a1b      	cmp	r2, #27
  406126:	d82d      	bhi.n	406184 <_realloc_r+0x2a8>
  406128:	f100 0308 	add.w	r3, r0, #8
  40612c:	f105 0208 	add.w	r2, r5, #8
  406130:	e71b      	b.n	405f6a <_realloc_r+0x8e>
  406132:	4632      	mov	r2, r6
  406134:	6829      	ldr	r1, [r5, #0]
  406136:	6011      	str	r1, [r2, #0]
  406138:	6869      	ldr	r1, [r5, #4]
  40613a:	6051      	str	r1, [r2, #4]
  40613c:	68a9      	ldr	r1, [r5, #8]
  40613e:	6091      	str	r1, [r2, #8]
  406140:	461c      	mov	r4, r3
  406142:	46d1      	mov	r9, sl
  406144:	e72a      	b.n	405f9c <_realloc_r+0xc0>
  406146:	eb09 0107 	add.w	r1, r9, r7
  40614a:	ebab 0b07 	sub.w	fp, fp, r7
  40614e:	f04b 0201 	orr.w	r2, fp, #1
  406152:	6099      	str	r1, [r3, #8]
  406154:	604a      	str	r2, [r1, #4]
  406156:	f855 3c04 	ldr.w	r3, [r5, #-4]
  40615a:	f003 0301 	and.w	r3, r3, #1
  40615e:	431f      	orrs	r7, r3
  406160:	4640      	mov	r0, r8
  406162:	f845 7c04 	str.w	r7, [r5, #-4]
  406166:	f7ff f86b 	bl	405240 <__malloc_unlock>
  40616a:	462e      	mov	r6, r5
  40616c:	e728      	b.n	405fc0 <_realloc_r+0xe4>
  40616e:	4629      	mov	r1, r5
  406170:	f7ff fe50 	bl	405e14 <memmove>
  406174:	e6ff      	b.n	405f76 <_realloc_r+0x9a>
  406176:	4629      	mov	r1, r5
  406178:	4630      	mov	r0, r6
  40617a:	461c      	mov	r4, r3
  40617c:	46d1      	mov	r9, sl
  40617e:	f7ff fe49 	bl	405e14 <memmove>
  406182:	e70b      	b.n	405f9c <_realloc_r+0xc0>
  406184:	68ab      	ldr	r3, [r5, #8]
  406186:	6083      	str	r3, [r0, #8]
  406188:	68eb      	ldr	r3, [r5, #12]
  40618a:	60c3      	str	r3, [r0, #12]
  40618c:	2a24      	cmp	r2, #36	; 0x24
  40618e:	d017      	beq.n	4061c0 <_realloc_r+0x2e4>
  406190:	f100 0310 	add.w	r3, r0, #16
  406194:	f105 0210 	add.w	r2, r5, #16
  406198:	e6e7      	b.n	405f6a <_realloc_r+0x8e>
  40619a:	f850 3c04 	ldr.w	r3, [r0, #-4]
  40619e:	f023 0303 	bic.w	r3, r3, #3
  4061a2:	441c      	add	r4, r3
  4061a4:	462e      	mov	r6, r5
  4061a6:	e6f9      	b.n	405f9c <_realloc_r+0xc0>
  4061a8:	68a9      	ldr	r1, [r5, #8]
  4061aa:	f8ca 1010 	str.w	r1, [sl, #16]
  4061ae:	68e9      	ldr	r1, [r5, #12]
  4061b0:	f8ca 1014 	str.w	r1, [sl, #20]
  4061b4:	2a24      	cmp	r2, #36	; 0x24
  4061b6:	d00c      	beq.n	4061d2 <_realloc_r+0x2f6>
  4061b8:	3510      	adds	r5, #16
  4061ba:	f10a 0218 	add.w	r2, sl, #24
  4061be:	e7b9      	b.n	406134 <_realloc_r+0x258>
  4061c0:	692b      	ldr	r3, [r5, #16]
  4061c2:	6103      	str	r3, [r0, #16]
  4061c4:	696b      	ldr	r3, [r5, #20]
  4061c6:	6143      	str	r3, [r0, #20]
  4061c8:	f105 0218 	add.w	r2, r5, #24
  4061cc:	f100 0318 	add.w	r3, r0, #24
  4061d0:	e6cb      	b.n	405f6a <_realloc_r+0x8e>
  4061d2:	692a      	ldr	r2, [r5, #16]
  4061d4:	f8ca 2018 	str.w	r2, [sl, #24]
  4061d8:	696a      	ldr	r2, [r5, #20]
  4061da:	f8ca 201c 	str.w	r2, [sl, #28]
  4061de:	3518      	adds	r5, #24
  4061e0:	f10a 0220 	add.w	r2, sl, #32
  4061e4:	e7a6      	b.n	406134 <_realloc_r+0x258>
  4061e6:	4632      	mov	r2, r6
  4061e8:	e77f      	b.n	4060ea <_realloc_r+0x20e>
  4061ea:	4629      	mov	r1, r5
  4061ec:	4630      	mov	r0, r6
  4061ee:	9301      	str	r3, [sp, #4]
  4061f0:	f7ff fe10 	bl	405e14 <memmove>
  4061f4:	9b01      	ldr	r3, [sp, #4]
  4061f6:	e77e      	b.n	4060f6 <_realloc_r+0x21a>
  4061f8:	68a9      	ldr	r1, [r5, #8]
  4061fa:	f8ca 1010 	str.w	r1, [sl, #16]
  4061fe:	68e9      	ldr	r1, [r5, #12]
  406200:	f8ca 1014 	str.w	r1, [sl, #20]
  406204:	2a24      	cmp	r2, #36	; 0x24
  406206:	d003      	beq.n	406210 <_realloc_r+0x334>
  406208:	3510      	adds	r5, #16
  40620a:	f10a 0218 	add.w	r2, sl, #24
  40620e:	e76c      	b.n	4060ea <_realloc_r+0x20e>
  406210:	692a      	ldr	r2, [r5, #16]
  406212:	f8ca 2018 	str.w	r2, [sl, #24]
  406216:	696a      	ldr	r2, [r5, #20]
  406218:	f8ca 201c 	str.w	r2, [sl, #28]
  40621c:	3518      	adds	r5, #24
  40621e:	f10a 0220 	add.w	r2, sl, #32
  406222:	e762      	b.n	4060ea <_realloc_r+0x20e>
  406224:	20400454 	.word	0x20400454

00406228 <__ascii_wctomb>:
  406228:	b121      	cbz	r1, 406234 <__ascii_wctomb+0xc>
  40622a:	2aff      	cmp	r2, #255	; 0xff
  40622c:	d804      	bhi.n	406238 <__ascii_wctomb+0x10>
  40622e:	700a      	strb	r2, [r1, #0]
  406230:	2001      	movs	r0, #1
  406232:	4770      	bx	lr
  406234:	4608      	mov	r0, r1
  406236:	4770      	bx	lr
  406238:	238a      	movs	r3, #138	; 0x8a
  40623a:	6003      	str	r3, [r0, #0]
  40623c:	f04f 30ff 	mov.w	r0, #4294967295
  406240:	4770      	bx	lr
  406242:	bf00      	nop

00406244 <__aeabi_dcmpun>:
  406244:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  406248:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  40624c:	d102      	bne.n	406254 <__aeabi_dcmpun+0x10>
  40624e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  406252:	d10a      	bne.n	40626a <__aeabi_dcmpun+0x26>
  406254:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  406258:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  40625c:	d102      	bne.n	406264 <__aeabi_dcmpun+0x20>
  40625e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  406262:	d102      	bne.n	40626a <__aeabi_dcmpun+0x26>
  406264:	f04f 0000 	mov.w	r0, #0
  406268:	4770      	bx	lr
  40626a:	f04f 0001 	mov.w	r0, #1
  40626e:	4770      	bx	lr

00406270 <__aeabi_d2iz>:
  406270:	ea4f 0241 	mov.w	r2, r1, lsl #1
  406274:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  406278:	d215      	bcs.n	4062a6 <__aeabi_d2iz+0x36>
  40627a:	d511      	bpl.n	4062a0 <__aeabi_d2iz+0x30>
  40627c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  406280:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  406284:	d912      	bls.n	4062ac <__aeabi_d2iz+0x3c>
  406286:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  40628a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  40628e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  406292:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  406296:	fa23 f002 	lsr.w	r0, r3, r2
  40629a:	bf18      	it	ne
  40629c:	4240      	negne	r0, r0
  40629e:	4770      	bx	lr
  4062a0:	f04f 0000 	mov.w	r0, #0
  4062a4:	4770      	bx	lr
  4062a6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  4062aa:	d105      	bne.n	4062b8 <__aeabi_d2iz+0x48>
  4062ac:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  4062b0:	bf08      	it	eq
  4062b2:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  4062b6:	4770      	bx	lr
  4062b8:	f04f 0000 	mov.w	r0, #0
  4062bc:	4770      	bx	lr
  4062be:	bf00      	nop

004062c0 <sysfont_glyphs>:
	...
  4062e0:	0030 0030 0030 0030 0030 0030 0000 0030     0.0.0.0.0.0...0.
  4062f0:	0030 0000 0000 0000 0000 0000 006c 006c     0...........l.l.
  406300:	006c 006c 0000 0000 0000 0000 0000 0000     l.l.............
	...
  406318:	0000 0028 0028 007c 0028 0028 007c 0028     ..(.(.|.(.(.|.(.
  406328:	0028 0000 0000 0000 0000 0000 0010 003c     (.............<.
  406338:	0040 0020 0010 0008 0004 0078 0010 0000     @. .......x.....
	...
  406350:	0000 007c 00a4 00a8 0050 0028 0054 0094     ..|.....P.(.T...
  406360:	0088 0000 0000 0000 0000 0000 0060 0090     ............`...
  406370:	0090 0090 0060 0094 0088 0088 0070 0000     ....`.......p...
	...
  406388:	0010 0010 0010 0000 0000 0000 0000 0000     ................
	...
  4063a4:	0008 0010 0020 0020 0020 0020 0020 0020     .... . . . . . .
  4063b4:	0010 0008 0000 0000 0000 0000 0020 0010     ............ ...
  4063c4:	0008 0008 0008 0008 0008 0008 0010 0020     .............. .
  4063d4:	0000 0000 0000 0028 0010 007c 0010 0028     ......(...|...(.
	...
  4063fc:	0010 0010 0010 00fe 0010 0010 0010 0000     ................
	...
  406424:	0010 0030 0020 0000 0000 0000 0000 0000     ..0. ...........
  406434:	0000 0000 0000 007c 0000 0000 0000 0000     ......|.........
	...
  406458:	0000 0030 0030 0000 0000 0000 0000 0000     ..0.0...........
  406468:	0000 0008 0008 0010 0010 0020 0020 0040     .......... . .@.
  406478:	0040 0000 0000 0000 0000 0000 0000 0078     @.............x.
  406488:	0084 008c 0094 00a4 00c4 0084 0078 0000     ............x...
	...
  4064a0:	0000 0010 0030 0050 0010 0010 0010 0010     ....0.P.........
  4064b0:	007c 0000 0000 0000 0000 0000 0000 0070     |.............p.
  4064c0:	0088 0008 0010 0020 0040 0080 00f8 0000     ...... .@.......
	...
  4064d8:	0000 0070 0088 0008 0030 0008 0008 0088     ..p.....0.......
  4064e8:	0070 0000 0000 0000 0000 0000 0000 0008     p...............
  4064f8:	0018 0028 0048 0088 00fc 0008 0008 0000     ..(.H...........
	...
  406510:	0000 0078 0080 0080 00f0 0008 0008 0008     ..x.............
  406520:	00f0 0000 0000 0000 0000 0000 0000 0030     ..............0.
  406530:	0040 0080 00f0 0088 0088 0088 0070 0000     @...........p...
	...
  406548:	0000 00f8 0008 0010 0010 0020 0020 0040     .......... . .@.
  406558:	0040 0000 0000 0000 0000 0000 0000 0070     @.............p.
  406568:	0088 0088 0070 0088 0088 0088 0070 0000     ....p.......p...
	...
  406580:	0000 0070 0088 0088 0088 0078 0008 0010     ..p.......x.....
  406590:	0060 0000 0000 0000 0000 0000 0000 0000     `...............
  4065a0:	0000 0030 0030 0000 0000 0030 0030 0000     ..0.0.....0.0...
	...
  4065bc:	0000 0030 0030 0000 0000 0030 0030 0060     ..0.0.....0.0.`.
  4065cc:	0040 0000 0000 0000 0000 0000 0008 0010     @...............
  4065dc:	0020 0040 0020 0010 0008 0000 0000 0000      .@. ...........
	...
  4065f8:	007c 0000 007c 0000 0000 0000 0000 0000     |...|...........
	...
  406610:	0040 0020 0010 0008 0010 0020 0040 0000     @. ....... .@...
	...
  406628:	0000 0030 0048 0008 0010 0020 0000 0000     ..0.H..... .....
  406638:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
  406648:	003c 0042 009a 00aa 00aa 00be 0080 0078     <.B...........x.
	...
  406660:	0000 0010 0028 0028 0044 007c 0044 0044     ....(.(.D.|.D.D.
  406670:	0044 0000 0000 0000 0000 0000 0000 00f8     D...............
  406680:	0084 0084 00f8 0084 0084 0084 00f8 0000     ................
	...
  406698:	0000 003c 0040 0080 0080 0080 0080 0040     ..<.@.........@.
  4066a8:	003c 0000 0000 0000 0000 0000 0000 00f0     <...............
  4066b8:	0088 0084 0084 0084 0084 0088 00f0 0000     ................
	...
  4066d0:	0000 00f8 0080 0080 00f0 0080 0080 0080     ................
  4066e0:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  4066f0:	0080 0080 00f8 0080 0080 0080 0080 0000     ................
	...
  406708:	0000 003c 0040 0080 0080 009c 0084 0044     ..<.@.........D.
  406718:	0038 0000 0000 0000 0000 0000 0000 0088     8...............
  406728:	0088 0088 00f8 0088 0088 0088 0088 0000     ................
	...
  406740:	0000 00f8 0020 0020 0020 0020 0020 0020     .... . . . . . .
  406750:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  406760:	0008 0008 0008 0008 0008 0008 00f0 0000     ................
	...
  406778:	0000 0084 0088 0090 00a0 00d0 0088 0084     ................
  406788:	0084 0000 0000 0000 0000 0000 0000 0080     ................
  406798:	0080 0080 0080 0080 0080 0080 00fc 0000     ................
	...
  4067b0:	0000 0084 00cc 00cc 00b4 00b4 0084 0084     ................
  4067c0:	0084 0000 0000 0000 0000 0000 0000 0084     ................
  4067d0:	00c4 00c4 00a4 00a4 0094 0094 008c 0000     ................
	...
  4067e8:	0000 0078 0084 0084 0084 0084 0084 0084     ..x.............
  4067f8:	0078 0000 0000 0000 0000 0000 0000 00f8     x...............
  406808:	0084 0084 0084 00f8 0080 0080 0080 0000     ................
	...
  406820:	0000 0078 0084 0084 0084 0084 0084 0084     ..x.............
  406830:	0078 0020 0018 0000 0000 0000 0000 00f8     x. .............
  406840:	0084 0084 0084 00f8 0088 0084 0084 0000     ................
	...
  406858:	0000 007c 0080 0080 0060 0018 0004 0004     ..|.....`.......
  406868:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  406878:	0020 0020 0020 0020 0020 0020 0020 0000      . . . . . . ...
	...
  406890:	0000 0084 0084 0084 0084 0084 0084 0084     ................
  4068a0:	0078 0000 0000 0000 0000 0000 0000 0084     x...............
  4068b0:	0084 0084 0048 0048 0048 0030 0030 0000     ....H.H.H.0.0...
	...
  4068c8:	0000 0088 00a8 00a8 00a8 00a8 00a8 0050     ..............P.
  4068d8:	0050 0000 0000 0000 0000 0000 0000 0088     P...............
  4068e8:	0088 0050 0020 0020 0050 0088 0088 0000     ..P. . .P.......
	...
  406900:	0000 0088 0088 0088 0050 0050 0020 0020     ........P.P. . .
  406910:	0020 0000 0000 0000 0000 0000 0000 00fc      ...............
  406920:	0004 0008 0010 0020 0040 0080 00fc 0000     ...... .@.......
	...
  406938:	0070 0040 0040 0040 0040 0040 0040 0040     p.@.@.@.@.@.@.@.
  406948:	0040 0040 0070 0000 0000 0000 0040 0040     @.@.p.......@.@.
  406958:	0020 0020 0020 0010 0010 0010 0008 0008      . . ...........
	...
  406970:	0038 0008 0008 0008 0008 0008 0008 0008     8...............
  406980:	0008 0008 0038 0000 0000 0000 0010 0028     ....8.........(.
  406990:	0044 0000 0000 0000 0000 0000 0000 0000     D...............
	...
  4069b8:	0038 0000 0000 0000 0000 0000 0000 0020     8............. .
  4069c8:	0010 0000 0000 0000 0000 0000 0000 0000     ................
	...
  4069e4:	0000 0070 0008 0008 0078 0088 007c 0000     ..p.....x...|...
	...
  4069fc:	0080 0080 0080 00f8 0084 0084 0084 0084     ................
  406a0c:	00f8 0000 0000 0000 0000 0000 0000 0000     ................
  406a1c:	0000 0078 0080 0080 0080 0080 0078 0000     ..x.........x...
	...
  406a34:	0004 0004 0004 007c 0084 0084 0084 008c     ......|.........
  406a44:	0074 0000 0000 0000 0000 0000 0000 0000     t...............
  406a54:	0000 0078 0084 00fc 0080 0080 007c 0000     ..x.........|...
	...
  406a6c:	001c 0020 0020 00fc 0020 0020 0020 0020     .. . ... . . . .
  406a7c:	00fc 0000 0000 0000 0000 0000 0000 0000     ................
  406a8c:	0000 007c 0084 0084 0084 0084 007c 0004     ..|.........|...
  406a9c:	0078 0000 0000 0000 0080 0080 0080 00b8     x...............
  406aac:	00c4 0084 0084 0084 0084 0000 0000 0000     ................
  406abc:	0000 0000 0000 0010 0000 0070 0010 0010     ..........p.....
  406acc:	0010 0010 007c 0000 0000 0000 0000 0000     ....|...........
  406adc:	0000 0008 0000 0078 0008 0008 0008 0008     ......x.........
  406aec:	0008 0008 0008 0070 0000 0000 0080 0080     ......p.........
  406afc:	0080 0088 0090 00a0 00d0 0088 0088 0000     ................
	...
  406b14:	00e0 0020 0020 0020 0020 0020 0020 0020     .. . . . . . . .
  406b24:	00f8 0000 0000 0000 0000 0000 0000 0000     ................
  406b34:	0000 00a4 00fc 00a4 00a4 00a4 00a4 0000     ................
	...
  406b50:	0000 00b8 00c4 0084 0084 0084 0084 0000     ................
	...
  406b6c:	0000 0078 0084 0084 0084 0084 0078 0000     ..x.........x...
	...
  406b88:	0000 00b8 00c4 0084 0084 0084 00f8 0080     ................
  406b98:	0080 0000 0000 0000 0000 0000 0000 007c     ..............|.
  406ba8:	0084 0084 0084 0084 007c 0004 0004 0000     ........|.......
	...
  406bc0:	0000 00d8 0060 0040 0040 0040 00f0 0000     ....`.@.@.@.....
	...
  406bdc:	0000 0078 0080 0040 0030 0008 00f0 0000     ..x...@.0.......
	...
  406bf8:	0020 00fc 0020 0020 0020 0020 001c 0000      ... . . . .....
	...
  406c14:	0000 0088 0088 0088 0088 0088 007c 0000     ............|...
	...
  406c30:	0000 0084 0084 0084 0048 0048 0030 0000     ........H.H.0...
	...
  406c4c:	0000 0088 00a8 00a8 00a8 00a8 0050 0000     ............P...
	...
  406c68:	0000 0088 0050 0020 0020 0050 0088 0000     ....P. . .P.....
	...
  406c84:	0000 0084 0084 0048 0048 0030 0010 0020     ......H.H.0... .
  406c94:	0040 0000 0000 0000 0000 0000 0000 00f8     @...............
  406ca4:	0008 0010 0020 0040 00f8 0000 0000 0000     .... .@.........
  406cb4:	0000 0000 0010 0020 0020 0010 0020 0020     ...... . ... . .
  406cc4:	0010 0020 0020 0010 0000 0000 0000 0000     .. . ...........
  406cd4:	0010 0010 0010 0010 0000 0000 0010 0010     ................
  406ce4:	0010 0010 0000 0000 0000 0000 0020 0010     ............ ...
  406cf4:	0010 0020 0010 0010 0020 0010 0010 0020     .. ..... ..... .
  406d04:	0000 0000 6f77 6c72 0064 0000 2020 2020     ....world...    
  406d14:	2020 0000 6425 0000                           ..%d..

00406d1c <_global_impure_ptr>:
  406d1c:	0028 2040 4e49 0046 6e69 0066 414e 004e     (.@ INF.inf.NAN.
  406d2c:	616e 006e 3130 3332 3534 3736 3938 4241     nan.0123456789AB
  406d3c:	4443 4645 0000 0000 3130 3332 3534 3736     CDEF....01234567
  406d4c:	3938 6261 6463 6665 0000 0000 6e28 6c75     89abcdef....(nul
  406d5c:	296c 0000 0030 0000                         l)..0...

00406d64 <blanks.7223>:
  406d64:	2020 2020 2020 2020 2020 2020 2020 2020                     

00406d74 <zeroes.7224>:
  406d74:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
  406d84:	6e49 6966 696e 7974 0000 0000 614e 004e     Infinity....NaN.
  406d94:	0000 0000                                   ....

00406d98 <__mprec_bigtens>:
  406d98:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
  406da8:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
  406db8:	bf3c 7f73 4fdd 7515                         <.s..O.u

00406dc0 <__mprec_tens>:
  406dc0:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
  406dd0:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
  406de0:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
  406df0:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
  406e00:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
  406e10:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
  406e20:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
  406e30:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
  406e40:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
  406e50:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
  406e60:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
  406e70:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
  406e80:	9db4 79d9 7843 44ea                         ...yCx.D

00406e88 <p05.6055>:
  406e88:	0005 0000 0019 0000 007d 0000 0043 0000     ........}...C...
  406e98:	4f50 4953 0058 0000 002e 0000               POSIX.......

00406ea4 <_ctype_>:
  406ea4:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
  406eb4:	2020 2020 2020 2020 2020 2020 2020 2020                     
  406ec4:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
  406ed4:	0410 0404 0404 0404 0404 1004 1010 1010     ................
  406ee4:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
  406ef4:	0101 0101 0101 0101 0101 0101 1010 1010     ................
  406f04:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
  406f14:	0202 0202 0202 0202 0202 0202 1010 1010     ................
  406f24:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...

00406fa8 <_init>:
  406fa8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  406faa:	bf00      	nop
  406fac:	bcf8      	pop	{r3, r4, r5, r6, r7}
  406fae:	bc08      	pop	{r3}
  406fb0:	469e      	mov	lr, r3
  406fb2:	4770      	bx	lr

00406fb4 <__init_array_start>:
  406fb4:	00403afd 	.word	0x00403afd

00406fb8 <__frame_dummy_init_array_entry>:
  406fb8:	00400165                                e.@.

00406fbc <_fini>:
  406fbc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  406fbe:	bf00      	nop
  406fc0:	bcf8      	pop	{r3, r4, r5, r6, r7}
  406fc2:	bc08      	pop	{r3}
  406fc4:	469e      	mov	lr, r3
  406fc6:	4770      	bx	lr

00406fc8 <__fini_array_start>:
  406fc8:	00400141 	.word	0x00400141

Disassembly of section .relocate:

20400000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20400000:	f3bf 8f5f 	dmb	sy
20400004:	3801      	subs	r0, #1
20400006:	d1fb      	bne.n	20400000 <portable_delay_cycles>
20400008:	4770      	bx	lr
	...

2040000c <sysfont>:
2040000c:	0000 0000 62c0 0040 0e0a 7d20               .....b@... }

20400018 <g_interrupt_enabled>:
20400018:	0001 0000                                   ....

2040001c <SystemCoreClock>:
2040001c:	0900 003d                                   ..=.

20400020 <_impure_ptr>:
20400020:	0028 2040 0000 0000                         (.@ ....

20400028 <impure_data>:
20400028:	0000 0000 0314 2040 037c 2040 03e4 2040     ......@ |.@ ..@ 
	...
204000d0:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
204000e0:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20400450 <__atexit_recursive_mutex>:
20400450:	0cac 2040                                   ..@ 

20400454 <__malloc_av_>:
	...
2040045c:	0454 2040 0454 2040 045c 2040 045c 2040     T.@ T.@ \.@ \.@ 
2040046c:	0464 2040 0464 2040 046c 2040 046c 2040     d.@ d.@ l.@ l.@ 
2040047c:	0474 2040 0474 2040 047c 2040 047c 2040     t.@ t.@ |.@ |.@ 
2040048c:	0484 2040 0484 2040 048c 2040 048c 2040     ..@ ..@ ..@ ..@ 
2040049c:	0494 2040 0494 2040 049c 2040 049c 2040     ..@ ..@ ..@ ..@ 
204004ac:	04a4 2040 04a4 2040 04ac 2040 04ac 2040     ..@ ..@ ..@ ..@ 
204004bc:	04b4 2040 04b4 2040 04bc 2040 04bc 2040     ..@ ..@ ..@ ..@ 
204004cc:	04c4 2040 04c4 2040 04cc 2040 04cc 2040     ..@ ..@ ..@ ..@ 
204004dc:	04d4 2040 04d4 2040 04dc 2040 04dc 2040     ..@ ..@ ..@ ..@ 
204004ec:	04e4 2040 04e4 2040 04ec 2040 04ec 2040     ..@ ..@ ..@ ..@ 
204004fc:	04f4 2040 04f4 2040 04fc 2040 04fc 2040     ..@ ..@ ..@ ..@ 
2040050c:	0504 2040 0504 2040 050c 2040 050c 2040     ..@ ..@ ..@ ..@ 
2040051c:	0514 2040 0514 2040 051c 2040 051c 2040     ..@ ..@ ..@ ..@ 
2040052c:	0524 2040 0524 2040 052c 2040 052c 2040     $.@ $.@ ,.@ ,.@ 
2040053c:	0534 2040 0534 2040 053c 2040 053c 2040     4.@ 4.@ <.@ <.@ 
2040054c:	0544 2040 0544 2040 054c 2040 054c 2040     D.@ D.@ L.@ L.@ 
2040055c:	0554 2040 0554 2040 055c 2040 055c 2040     T.@ T.@ \.@ \.@ 
2040056c:	0564 2040 0564 2040 056c 2040 056c 2040     d.@ d.@ l.@ l.@ 
2040057c:	0574 2040 0574 2040 057c 2040 057c 2040     t.@ t.@ |.@ |.@ 
2040058c:	0584 2040 0584 2040 058c 2040 058c 2040     ..@ ..@ ..@ ..@ 
2040059c:	0594 2040 0594 2040 059c 2040 059c 2040     ..@ ..@ ..@ ..@ 
204005ac:	05a4 2040 05a4 2040 05ac 2040 05ac 2040     ..@ ..@ ..@ ..@ 
204005bc:	05b4 2040 05b4 2040 05bc 2040 05bc 2040     ..@ ..@ ..@ ..@ 
204005cc:	05c4 2040 05c4 2040 05cc 2040 05cc 2040     ..@ ..@ ..@ ..@ 
204005dc:	05d4 2040 05d4 2040 05dc 2040 05dc 2040     ..@ ..@ ..@ ..@ 
204005ec:	05e4 2040 05e4 2040 05ec 2040 05ec 2040     ..@ ..@ ..@ ..@ 
204005fc:	05f4 2040 05f4 2040 05fc 2040 05fc 2040     ..@ ..@ ..@ ..@ 
2040060c:	0604 2040 0604 2040 060c 2040 060c 2040     ..@ ..@ ..@ ..@ 
2040061c:	0614 2040 0614 2040 061c 2040 061c 2040     ..@ ..@ ..@ ..@ 
2040062c:	0624 2040 0624 2040 062c 2040 062c 2040     $.@ $.@ ,.@ ,.@ 
2040063c:	0634 2040 0634 2040 063c 2040 063c 2040     4.@ 4.@ <.@ <.@ 
2040064c:	0644 2040 0644 2040 064c 2040 064c 2040     D.@ D.@ L.@ L.@ 
2040065c:	0654 2040 0654 2040 065c 2040 065c 2040     T.@ T.@ \.@ \.@ 
2040066c:	0664 2040 0664 2040 066c 2040 066c 2040     d.@ d.@ l.@ l.@ 
2040067c:	0674 2040 0674 2040 067c 2040 067c 2040     t.@ t.@ |.@ |.@ 
2040068c:	0684 2040 0684 2040 068c 2040 068c 2040     ..@ ..@ ..@ ..@ 
2040069c:	0694 2040 0694 2040 069c 2040 069c 2040     ..@ ..@ ..@ ..@ 
204006ac:	06a4 2040 06a4 2040 06ac 2040 06ac 2040     ..@ ..@ ..@ ..@ 
204006bc:	06b4 2040 06b4 2040 06bc 2040 06bc 2040     ..@ ..@ ..@ ..@ 
204006cc:	06c4 2040 06c4 2040 06cc 2040 06cc 2040     ..@ ..@ ..@ ..@ 
204006dc:	06d4 2040 06d4 2040 06dc 2040 06dc 2040     ..@ ..@ ..@ ..@ 
204006ec:	06e4 2040 06e4 2040 06ec 2040 06ec 2040     ..@ ..@ ..@ ..@ 
204006fc:	06f4 2040 06f4 2040 06fc 2040 06fc 2040     ..@ ..@ ..@ ..@ 
2040070c:	0704 2040 0704 2040 070c 2040 070c 2040     ..@ ..@ ..@ ..@ 
2040071c:	0714 2040 0714 2040 071c 2040 071c 2040     ..@ ..@ ..@ ..@ 
2040072c:	0724 2040 0724 2040 072c 2040 072c 2040     $.@ $.@ ,.@ ,.@ 
2040073c:	0734 2040 0734 2040 073c 2040 073c 2040     4.@ 4.@ <.@ <.@ 
2040074c:	0744 2040 0744 2040 074c 2040 074c 2040     D.@ D.@ L.@ L.@ 
2040075c:	0754 2040 0754 2040 075c 2040 075c 2040     T.@ T.@ \.@ \.@ 
2040076c:	0764 2040 0764 2040 076c 2040 076c 2040     d.@ d.@ l.@ l.@ 
2040077c:	0774 2040 0774 2040 077c 2040 077c 2040     t.@ t.@ |.@ |.@ 
2040078c:	0784 2040 0784 2040 078c 2040 078c 2040     ..@ ..@ ..@ ..@ 
2040079c:	0794 2040 0794 2040 079c 2040 079c 2040     ..@ ..@ ..@ ..@ 
204007ac:	07a4 2040 07a4 2040 07ac 2040 07ac 2040     ..@ ..@ ..@ ..@ 
204007bc:	07b4 2040 07b4 2040 07bc 2040 07bc 2040     ..@ ..@ ..@ ..@ 
204007cc:	07c4 2040 07c4 2040 07cc 2040 07cc 2040     ..@ ..@ ..@ ..@ 
204007dc:	07d4 2040 07d4 2040 07dc 2040 07dc 2040     ..@ ..@ ..@ ..@ 
204007ec:	07e4 2040 07e4 2040 07ec 2040 07ec 2040     ..@ ..@ ..@ ..@ 
204007fc:	07f4 2040 07f4 2040 07fc 2040 07fc 2040     ..@ ..@ ..@ ..@ 
2040080c:	0804 2040 0804 2040 080c 2040 080c 2040     ..@ ..@ ..@ ..@ 
2040081c:	0814 2040 0814 2040 081c 2040 081c 2040     ..@ ..@ ..@ ..@ 
2040082c:	0824 2040 0824 2040 082c 2040 082c 2040     $.@ $.@ ,.@ ,.@ 
2040083c:	0834 2040 0834 2040 083c 2040 083c 2040     4.@ 4.@ <.@ <.@ 
2040084c:	0844 2040 0844 2040 084c 2040 084c 2040     D.@ D.@ L.@ L.@ 

2040085c <__malloc_sbrk_base>:
2040085c:	ffff ffff                                   ....

20400860 <__malloc_trim_threshold>:
20400860:	0000 0002                                   ....

20400864 <__global_locale>:
20400864:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400884:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008a4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008c4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008e4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400904:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400924:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400944:	6229 0040 5de9 0040 0000 0000 6ea4 0040     )b@..]@......n@.
20400954:	6ea0 0040 6d40 0040 6d40 0040 6d40 0040     .n@.@m@.@m@.@m@.
20400964:	6d40 0040 6d40 0040 6d40 0040 6d40 0040     @m@.@m@.@m@.@m@.
20400974:	6d40 0040 6d40 0040 ffff ffff ffff ffff     @m@.@m@.........
20400984:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
204009ac:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...
